<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>Lazy Shell: UPDATED EDITION, Version 1.3.1
Based off source code of Lazy Shell, Version 3.19.0

Lazy Shell, and Lazy Shell's source code,
Copyright Â© 2007-2013  giangurgolo &amp; Omega

Lazy Shell, Created by Omega &amp; giangurgolo
Lazy Shell: UPDATED EDITION, Created by Yakibomb


Lazy Shell's Main Contributors and Supporters:

ElementalPowerStar -  notable donator, principle bug-finder, positive feedback
Yakibomb - principle bug-finder and tester, positive feedback
Ryan H. - donator, supporter

Special Thanks:
Alex Farber - MRU list manager
Bregalad - source code for BRR encoding and decoding
CrispyYoshi - feedback, beta testing, documentation for audio editor
FuSoYa - for permission to use Lunar Compress.dll
Kevin Weiner - animated GIF encoder class
KP9000 - beta testing, discovered many bugs with pre-release version
MathOnNapkins - helped with some coding
Serge Meunier - image processing function code
spel werdz rite - original resolution for running program under a 64-bit OS
romhacking community - various feedback</value>
  </data>
  <data name="richTextBox5.Text" xml:space="preserve">
    <value>- INTRO: Add checkbox option to change the whether the screen X/Y position changes when you see Exor intro
- INTRO: Can't save Sprite Graphics
- ANIMATIONS: Fix dropdown menu index for Play Music/Sound (AB,AE,B0,B1).
- DIALOGUES: Fix memory loading/saving corruption errors</value>
  </data>
  <data name="changeslog1.Text" xml:space="preserve">
    <value>===========================
=======V1.3.1 CHANGELOG=======
===========================
MAIN
- Updated all icons to those of Lazy Shell 4.0.0
- File path for ROM now shows just the ROM file's name. (Click the ROM file name to reveal full path)

ANIMATIONS
- Added Weapon Timed-Hit Sounds (for when a weapon is timed correctly)
- Added Character Weapon Scripts (for when characters draw near to attack a monster)

===========================
=======V1.3.0 CHANGELOG=======
===========================
ANIMATIONS
- Added documentation of Ally button inputs, used by opcodes CC, CD, CE, CF, D0, D1, D2, D3, D4, D8.

ATTACKS
- Removed being able to edit the timings for certain ally spells. (i.e. Super Jump, Bowser Crush, etc)
- In place of that, added ability to change the timing of any ally spell and their damage properties.

===========================
=======V1.2.8 CHANGELOG=======
===========================
ANIMATIONS
- Changed length displayed for commands A7 and DB.

===========================
=======V1.2.7 CHANGELOG=======
===========================
DIALOGUES
- Resolved Battle Menu GFX editor displaying the wrong tiles.

===========================
=======V1.2.6 CHANGELOG=======
===========================
ANIMATIONS
- At 0xD5: Added formation position #, fixed bug
- At 0x00: Removed "use palette row 4", added "Palette Row #" value
- A5 0x96: Battle Messages can now be set above 6

MONSTERS
- Clearing a Monster's Stats will reset win items and Yoshi cookie to the correct value

===========================
=======V1.2.5 CHANGELOG=======
===========================
EVENTS
- Changed "$70Ax = $7xxx" to "$70Ax = $7000" due to mislabel
- Increased length of HEX display at the bottom
- Added "(NOT including {xx})" to randomized number codes.
- Changed description of 3A and 3B commands to be more accurate

FORMATIONS
- Clearing a formation will set the event # to 102 (from 0) and music to CURRENT (from Normal)

===========================
=======V1.2.4 CHANGELOG=======
===========================
MAIN
- Increased height of search box results

ANIMATIONS
- Fixed bug with monster behavior scripts

ITEMS
- Added hex editor next to item index

===========================
=======V1.2.3 CHANGELOG=======
===========================
MAIN
- Added original SMRPG Documents by giangurgolo, updated by Yakibomb

ANIMATIONS
- At 0xD5: Fixed Summon monster display
- Added numerals next to opcodes

EVENTS
- Removed numerals from sound lists

===========================
=======V1.2.2 CHANGELOG=======
===========================
ANIMATIONS
- Added new scripts: Faint, Run Away and Victory (under Monster Behavior #1-3)

EVENTS
- To Open menu commands: Added "close menu and refresh VRAM" and now script displays what menu/event will run

===========================
=======V1.2.1 CHANGELOG=======
===========================
EVENTS
- Switched Memory commands $7xxxx = $7xxxx because it was confusing to read

===========================
=======V1.2.0 CHANGELOG=======
===========================
AUDIO
- Changed names of event sounds and battle sounds

ANIMATIONS
- At 0xD5: Added undocumented Summon Monster
- Added ability to select and edit unused DUMMY spells for allies
- Changed the ability to select sounds and music using an index number
- Removed the numbers from the left of the sound list (for faster searching)
- At 0x00: added undocumented "behind all sprites" and "overlap all sprites" properties

EVENTS
- Fixed bug where "If Memory $704x [x @ 7000] bit {xx} clear..." auto-jumped to another command
- Fixed bug where "Shadow On" was unselectable
- Added undocumented 3A and 3B commands: Jump to if object is less than x tiles close to Mario

===========================
=======V1.1.0 CHANGELOG=======
===========================
EVENTS
- Switched joypad commands descriptions in category list
- Updated parameters for "Display pre-game intro title..." to display correctly in the editor script

========================
=======V1.0.0 RELEASE=======
========================
MAIN
-Changed file icon for LazyShell
-Changed the ABOUT LAZY SHELL... to this editor's changelog

ANIMATIONS
- Added ability to edit Flower Bonus Messages, Toad's Battle Tutorial and Weapon Miss Sounds
- Added ability to select and edit unused DUMMY spells for allies

EVENTS
- Added undocumented bit 7 of Run Background Event... as "Run as second script"
- Added move script thread commands under category "Events"
- Added undocumented commands to walk and transfer to Memory $7016-1B
- Added undocumented "Play sound (ch4.5.) ..."

LEVELS
 - Added undocumented commands {B2,b4} and {B3,b0} as "Can't enter doors" and "Can't walk up stairs".

ITEMS
 - Added new attribute: "Add stats (item)"

WORLD MAPS
- Added ability to view (not edit) Mario's map sprite</value>
  </data>
</root>