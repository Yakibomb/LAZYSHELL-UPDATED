<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAIACoEAAAJgAAABAQAAAAABgAaAMAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAybtY+MGvVvS9t1vcwasy+JilpFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMWzVMS9s1fYsbNT/LGzV/yxl
        vf8kMGmrGxCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvatSQLGrT/yxr
        0v8sadH/K2bJ/yI3ivQfGmcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANHjfADp13gIGDjwAAAAAAAAAAAAAAAAAAAAAAFdISAFVU0M2VFNBbVRUQnpTVEJ6U1RGbDph
        s6AsaM7/LGnR/ypo0f8ra9L/Klyu/x8YYdIsMrMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADZ43ws0ct2kNHDY9Sg7bXocEGIDAAAAABcQFgBkYkwzY2JIy2NkR/9iZUb/WF4//09V
        Of9RV0D/Omeu/ytr0P8sa9L/K2zS/ytq0f8pWZj/Hh5c/zJCI7o2Qx8bAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAkVtcAM3DdpjJz3f8xa8z/JzZ//yIVY2heUH8BdnVXeXl7WPqBhWD/g4hj/3mE
        Xf9OeCD/QmUT/0FpGv8sbMT/KmrQ/ypr0f8qatH/K2vR/yVGjP8fImX/MkUc/zVHGMAfNRYAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADFw3EYwct3/MHDc/zBv1v8oKqH/JR5p7XJ0ZseUmnf/oayK/6Ky
        kP+aqob/gpxs/06NH/9Mhx7/SoMe/zVwqP8qb9H/LHjT/zeS3f8vcdP/HxWc/yo6bf86VhX/NUkV/ztN
        JiUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKhOIBL2zZoy1u2P8wbsX/LEmi/y8lo/9dXXH/oa6M/7fO
        sf+91bz/t8+0/7HKrf+nxqL/U5Yz/02TJP9NjyL/O2Ny/zOD2P86nd7/PYPY/x4Xx/8iIaT/Q3BC/0t2
        GP89WBP/PVAcTwAAAAAAAAAAAAAAAAAAAAAAAAAAAQIcAC9t3HoucNz/LXDX/zRhdf9LfBj/P1U1/52p
        h/+60LP/yeTP/8nl0f/B38n/vNnB/7fVt/9qpmP/TpUm/0+RIv9Hfh7/OVqN/ysuwP8kH8P/Kzyl/0WH
        U/9Oix7/S3UV/0hqEv9BWRtpAAAAAAAAAAAAAAAAAAAAAAAAAAAxbtomLW3b9yxv2/8xcr3/SX8a/0+P
        H/9egDL/ts2p/8jhyP/S7dn/0ezY/9Lr1//N6NP/xuPM/6bPq/9Qly7/TZQl/06TJP9Mjh//Rnsc/ztf
        F/9DZRH/Rn8d/06TJP9Ogxn/SW4P/0BaF6kAAAAAAAAAAAAAAAAAAAAAAAAAAC5t2qwsb9v/LHDb/zF8
        0P9LkCr/UJMh/2yXSf+81bX/0uzZ/9305f/i9uv/5fbq/+L16f/d8+X/0+/b/6DPqv9PmDP/S5Uj/0uU
        If9Mkx//SYAW/0FkDv9EYwz/RXYZ/02JG/9IbxD/PVMX5AAAAAAAAAAAAAAAAAAAAAAAAAAALW3Z6S10
        2/86lOH/K13O/z1zff9PlST/fali/83q0v/f9Of/5vbu/+v28f/t9vH/7Pbw/+n17v/k9er/2/Tl/7zi
        yf94sHX/TJUh/0yVIf9MjRr/RnMR/0hoDP9EYAz/QFgN/zxSDv8/VhXhAAAAAAAAAAAAAAAAAAAAAAAA
        AAA4iNx9Qqrk/y9X0/8tKMf/NmCR/06VI/+TvIH/1vHe/+f27f/t9vL/7/by//L28//x9vL/7/by/+32
        8f/p9/D/4PXp/6zVtP9Qkxz/T5Uh/0+UHv9KfBT/SW0P/05uDP9JZQz/RF0O/0ReFbEAAAAAAAAAAAAA
        AAAAAAAAAAAAAC0hzRIjCc26IwPO/yMPwO5Ef1rmTpYj/6LFlf/b8uP/7fbx//H28//09/T/8/fz//L2
        8v/v9fH/7fXx/+v18f/l9u7/drFx/1KVHf9OlSD/T5Ug/06JF/9LcQ7/UXYO/05uC/9IZQz/R2QUkAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsQAnENAXJQ/PBUyOHrZNlSL/ncCP/9vz4v/t9/D/8vbz//X3
        8//19/T/8/bz//H28v/v9vP/7fXy/87n1/9Xlh//VpMb/02UHv9QliL/UZAa/094D/9TfQ//T3EK/0pq
        DP9IZBCSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATY8lg1CVIv+BrGj/2fDc/9rr
        3v/J0sv/u8O6/7zCuP/N1Mz/09nS/9Pa0//c5uD/l8Sd/1WVHf9WlBr/T5IX/06WIP9QkRn/T3sN/1F7
        DP9NcQn/UXgM/09vFZMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOjCcdTpIg+k6O
        H/90j2X/R2kf/0RmDv9CYw//P18Q/z5cEf9AWxn/YXE+/36KXP9qf0b/WYcq/1OPGf9RixP/TI4X/02N
        F/9SgA3/UHUI/1F5Cv9Tfg79VHoZRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChu
        ngBKgCyZSXII/014B/9OeQj/TXcI/0xzCP9Jbgj/RmoI/0FhCf87Vwv/Z3pS/3V8Uf9gZDr/WV81/1Vp
        K/9OeRX/UoYO/1B4CtlRfQujVYMUjlSDGTtanVoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAS3cPFU98CuBQhgz/UIsS/1GNE/9SjRP/UosS/1GFDv9QgAv/UHoJ/0VmB/88Vgr/e3hL/399
        Uf9sbD//XF01/1ZeMP9McRXERmsVFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEx5HABShA+tUY0V/0+QGP9Pkh3/T5Ic/1GSHf9QkRr/UI8W/1CMEv9Rhw//T3gI/0Fe
        B/+Kh17/mpJt/4J+Uv9raj7/W1w0/0tRK84wQxADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUoMZBlKMFPlPkBn/T5Id/1CUIP9PlSL/UJQh/0+UH/9QkRv/UJAZ/1GN
        Ff9ShQ3/TG4I/2h9PP+zro3/mI9m/356S/9lZDn/UVQv/zVDElUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQhiEVUI4W/0+RHf9QkyD/T5Qi/1CVIv9QliL/UJUf/0+S
        HP9Qkh7/UZAa/1OOFv9Rfgz/T3wU/5iicP+rpIL/jYRZ/3VwQf9XWTD/OkoRmgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEqCNw9Qjhb9T5Ie/1CUIf9QlCL/UZQh/1GU
        If9QlSL/UZUi/1GUIf9Skh3/U5EY/1WKD/9ThhX/VoYa/5CXZf+dlm3/g35Q/0pXIP8+ThKXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeJ4AAFCOFtFPkhv/UJUg/1KW
        I/9TliL/U5Yj/1KXJP9SliL/UpUi/1GTIP9Skhn/VI0R/1SPF/9VjRf/VIYa/1N6Gf9OaxD/RFkL/0NU
        EVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUIwUYE2Q
        GP9Qkx//UpUg/1GVIf9TliL/VJYj/1KVI/9RlCH/UJMf/1GRGf9SjRL/U5Ec/1eSG/9WjRn/U4IX/1F0
        Dv9IXwzkRFcVBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABQix4CT48ZvVCSHP9Qkx//UJMf/1GTIP9Kfhv/SnsZ/0+UIP9OkR7/UY8V/1OJFP9RkBn/VZMa/1iS
        Gv9XiBb/VHgO/1BoDlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABQjiYTTYwf0Ul/F/9Pkh3/T5Id/1CUHv9Qkx//T5Id/1GLHf+Somb/dXo//1GH
        G/9TjxX/VI8U/1WGEP9TeRGQY3wDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPixcfTY4X7E6RGf9Okhr/XZEz/36eXf9/kUj/hY9y/8bO
        uf+HhlL/S3Ic/1KUHf9Tjxf/V40UuleEFAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOjBoxTpEb0E+SHP+apnj/v8S5/6Kh
        fP/Ex7T/xNW//2aIN/9JaQz/VJMb/1eQFsFXiBcOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRlCgEUZQuPqu0
        jba9zrj/cZhS/0+DGf9UlB7/V44X/092EP5XkRuRXY4WBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUZEyK1SSIPpTkh7/UIAQ7lKSH95UkBn3VH8dVFqjZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATpAkZlGTIOFTiBZcSJJFB1CNGxMLFwEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//8H///+B////gP/74AD/4MAAP+AAAD/AA
        AAfgAAAH4AAAB8AAAAfAAAAHwAAAB8AAAAfAAAAH8AAAB/wAAAf8AAAH/gAAD/wAAH/8AAB/+AAAf/gA
        AH/4AAB//AAAf/wAAH/8AAD//gAB//8AAf//gAP//8AH///wH///+D//KAAAABAAAAAgAAAAAQAYAAAA
        AAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBr1TBqzAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9q1Cxr0itmyR8aZwAAAAAAAAAAAAAA
        AAAAADZ43zRw2BwQYgAAAGNiSGJlRk9VOTpnrixr0itq0R4eXDZDHwAAAAAAAAAAAAAAADBy3TBv1iUe
        aZSad6KykIKcbEyHHjVwqCx40y9x0yo6bTVJFQAAAAAAAAAAAC9t3C1w10t8GJ2ph8nkz8HfybfVt06V
        Jkd+HisuwCs8pU6LHkhqEgAAAAAAAAAAACxv2zF80FCTIbzVtd305eX26t3z5aDPqkuVI0yTH0FkDkV2
        GUhvEAAAAAAAAAAAAEKq5C0ox06VI9bx3u328vL28+/28un38KzVtE+VIUp8FE5uDERdDgAAAAAAAAAA
        AAAAACUPz02VItvz4vL28/X39PH28u318leWH02UHlGQGlN9D0pqDAAAAAAAAAAAAAAAAAAAAE6SIHSP
        ZURmDj9fEEBbGX6KXFmHKlGLE02NF1B1CFN+DgAAAAAAAAAAAAAAAAAAAE98ClCLElKNE1GFDlB6CTxW
        Cn99UVxdNUxxFQAAAAAAAAAAAAAAAAAAAAAAAFKDGU+QGVCUIFCUIVCRG1GNFUxuCLOujX56S1FULwAA
        AAAAAAAAAAAAAAAAAAAAAEqCN0+SHlCUIlGUIVGVIlKSHVWKD1aGGp2WbUpXIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAE2QGFKVIFOWIlKVI1CTH1KNEleSG1OCF0hfDAAAAAAAAAAAAAAAAAAAAAAAAAAAAFCOJkl/
        F0+SHVCTH1GLHXV6P1OPFVWGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE6MGk+SHL/EucTHtGaI
        N1STG1eIFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFSSIFCAEFSQGQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/PAAD/hwAAxAMAAMADAACAAwAAgAMAAIADAADAAwAA4AMAAOAPAADADwAAwA8AAOAP
        AADgHwAA8B8AAPx/AAA=
</value>
  </data>
</root>