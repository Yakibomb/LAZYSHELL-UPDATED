<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="LAZYSHELL_xsl.xsl"?>
<LAZYSHELL form="Editor" icon="icons/main.gif" title="LAZYSHELL++  Super Mario RPG Editor">
  <Properties version="2.1.5" date="March 1, 2025" homepage="https://github.com/Yakibomb/LAZYSHELL-UPDATED/" author="Yaki, giangurgolo and Omega" />
  <Read>
    <header>Read this first</header>
    <introduction>If this is your first time using Lazy Shell, please take the time to read the following advice:</introduction>
    <precaution>1. When planning a hack project, the wisest thing to do is to make sure you have the back-up option enabled in the settings. Click the cog icon and check either "Create Back-up ROM on Load" or "Create Back-up ROM on Save" to enable it. I often hear about users throwing in the towel when the application corrupts the ROM, never having bothered to use the back-up feature.</precaution>
    <precaution>2. If you receive an error prompt, please follow the directions in the prompt window and copy ALL of the contents of the error message and post them to the given link in the window. Unless you do this, there is little hope of the bug ever being fixed unless someone else encounters it and posts it to the link. Keep in mind, I do read bug reports and I do attempt to fix the reported bugs, so your post will not be a waste of time.</precaution>
    <precaution>3. If the unfortunate occasion might arise that the application actually does corrupt your ROM, you can try resetting the corrupted elements by importing those specific elements from a fresh SMRPG ROM. Click the button "Import elements from another ROM" (a down-arrow over a small white box), select a fresh ROM, and check the elements you want to import.</precaution>
    <conclusion>Should you encounter any issues, errors, problems, or irritations using the application, please post them on the following Discord:
https://discord.gg/p4epwWmTqf
Press Ctrl+Ins to copy the contents of this message box to the clipboard. Thank you for using the program.</conclusion>
  </Read>
  <section>
    <header>Introduction</header>
    <body>Lazy Shell is a third party .NET application written in the C# programming language which is capable of editing a wide range of elements within the Super Mario RPG (US) ROM image file. These elements include allies, battle animations, attacks, spells, sound effects, music, battlefields, dialogues, fonts, effects, events, formations, items, shops, level/location maps, the main title, menus, the mine-cart maps, monsters, sprites, world maps, and more. In addition, it also includes a help database, support for a patch server network, and a project manager to help organize a full hack project.</body>
  </section>
  <section>
    <header>Program Requirements</header>
    <body>Microsoft .NET Framework 4.8 or higher must be installed on the system for the application to run at all.
Minimal system requirements:
512MB of RAM (1GB recommended)
10MB HD space (more if ROM back-ups used)</body>
  </section>
  <section>
    <header>Main Features</header>
    <body>The editor is comprised of 17 individual editors. 
Various status editors include modification capabilities for the statuses of monsters, formations, formation packs, items, spells, attacks, shops, new game properties, level-ups, and timing properties. The monsters editor contains a battle script editor for each monster. 
The Levels portion allows the user to modify the maps of areas (aka locations) using a paint-like interface, the NPCs (ie the sprites in the maps), the exit fields (aka entrances), event fields, overlaps, and the basic layering properties. A template creator/editor lets the user to store a separate portion of the map composed of all 3 layers and the physical layer into a single file. 
The two scripts editors in Lazy Shell enable the user to modify the event scripts, action scripts, and animations scripts. Commands within event scripts and action scripts may be added, modified, deleted, moved, or copied and pasted. Commands within animation scripts may be modified, moved, or replaced with new commands of the same or smaller length, but adding/deleting entirely new commands within animations is not supported and never will be due to the fickle and erratic nature of the animation script engine. 
The Sprites editor is able to modify a sprite's graphics, palette, and animations. The effects editor allows the user to edit spell effects and their respective graphics, palettes, and animations. 
In the Dialogue editor, the user may view and edit the dialogues (aka the game script) as well as the dialogues which appear in battles and the graphics of the dialogue background tiles. Fonts, font colors, and a new font generator will let the user create an entirely new font table based upon manual editing or a supportive font installed on the OS.
In the World Maps editor World maps, world map palettes, world map sprites, and the locations that appear on world maps can be modified. The logo banner graphics and palettes can be modified as well.
The Audio editor can export, import, clear, and playback the audio samples used by the SPC engine. The .wav files can be edited in a third party program such as Audacity. SPC data can be edited in a variety of ways, allowing the user to create entirely new pieces of music. Instruments can be changed as well as well as the raw SPC track data, which can even import custom scripts from a text document.
The mini-games editor so far can modify the minecart mini game maps for all four stages and the objects in the same manner as levels. The menus editor allows the user to modify the menu palettes and import an external image into the menu backgrounds, as well as import an image into the frame image.</body>
  </section>
  <section>
    <header>Extra Features</header>
    <body>The portions of the editor have tooltips for almost every single control. Just press F1 (or click the ? buttons found in most editors) and move the mouse over a control to see what that property is for. There is also a conversion tooltip for showing the hexadecimal or decimal value for the value in the control when moving the mouse cursor over it. Press F2 to enable this feature, or click the base conversion button found in most editors. 
Users are also able to import and export many elements from previously exported .dat, .bin, or .pal files in all portions of the editor as a means of backing up or inter-changing elements. Clearing/erasing data is managed as well so as to free up space for new scripts or dialogues. 
The notes database manager was written for the editor to aid the user aiming to create a full or partial hack. Indexes for elements such as monsters, levels, etc. can be added and a user-defined description provided as well. Adding new indexes is simplified with an option for adding a specific index within a portion of the editor by right- clicking the name list or index number. The user can also load a selected index in the notes database manager into its respective portion of the editor where it can be modified there.
The patch feature reads a list of patches from the currently defined patch server http:// or ftp:// location and can apply those patches to the currently loaded ROM image.
A previewer for levels, event scripts and battle scripts lets the user load a temporary ROM created from the current modifications in the currently loaded ROM image into an emulator of choice (the only options so far are ZSNES and SNES9X). Lazy Shell will create a save state which, when loaded, will immediately enter the current level or initiate the current event or battle script.
There are many more smaller features which are too numerous to list here, and are scattered throughout the editor with the purpose of easing the use of Lazy Shell and reducing the amount of work required to complete a task.
That's what all of these extra features are here for. Not as bells and whistles, but for making the hacking process less headache-inducing.</body>
  </section>
  <section>
    <header>Unsupported Features</header>
    <body>Lazy Shell can NOT edit the new game intro sequence and graphics, the end credits graphics, or end credits fonts. It cannot make any changes to 65c816 assembly code in the ROM image (with some small exceptions). Additionally, ROM expansion is also not supported by the application due to the complications of the SA-1 chip in the game's engine.</body>
  </section>
  <section>
    <header>Using the Previewer</header>
    <body>Before using the previewer, do the following: 
1. Make sure all editor files are in the same folder. 
2. Configure the emulator's save-state folder to read/write to the same folder as any loaded ROM. ZSNES by default already does this, and so does Snes9x v1.43. However, later versions of Snes9x will by default read/write to a "Save" folder created within the emulator's main folder, and if not changed it will fail to load the preview save state. 
Choose either the SNES9X or ZSNES emulator file to use when opening the previewer. ZSNES will automatically load the generated save state when the emulator is loaded from the previewer, but for SNES9X the F1 key must be pressed manually to load the generated save state. If the emulator has problems loading the save state, make sure the 2 steps above have been completed. 
The latest version of ZSNES (v1.51 as of this release) is supported. Snes9x v1.43 and/or its derivatives (rerecord, Geiger's debugger, etc.) are preferred and should work. </body>
  </section>
  <section>
    <header>Importing Custom WAVs</header>
    <body>TIPS: follow these steps to successfully import a .WAV file of your choosing. Say you have a .WAV file, "MyWavFile.wav", that you wish to replace one of the samples in this audio editor with. Here are the steps you need to take: 
1. Download and install Audacity, a good free audio editing program.
     http://audacity.sourceforge.net/download/
2. In the Lazy Shell audio editor, export any sample to a file named "OldSample.wav".
3. Open "MyWavFile.wav" into Audacity.
4. While in Audacity, copy the audio data (Ctrl+A, Ctrl+C). Close Audacity.
5. Open "OldSample.wav" into Audacity.
6. While in Audacity, paste the copied audio data over the old data (Ctrl+A, Ctrl+V).
7. Export to a .WAV file named "NewSample.wav".
8. In the Lazy Shell audio editor, import "NewSample.wav".
MAKE SURE THE SELECTED Hz SAMPLE RATE IS THE SAME AS THE IMPORTED .WAV FILE.
The reason this is the only way to do it is because by using the same exported file ("OldSample.wav") with the modified WAV data from "MyWavFile.wav", it retains some obscure data from "OldSample.wav" in "NewSample.wav" which is necessary to have in order to successfully import a .WAV file.</body>
  </section>
  <Files>
    <header>Files in Archive</header>
    <body>*** Make sure all files stay within the same directory as each other, or there will be problems running Lazy Shell ***</body>
    <file name="LAZYSHELL.exe">
      <description>The application.</description>
    </file>
    <file name="Lunar Compress.dll">
      <description>Generates automatically when needed.
This file is essential to Lazy Shell's functionality. It decompresses and compresses the data that Lazy Shell modifies. It is needed to run the Stats, Levels, and Sprites editors and must be in the exact same directory as LAZYSHELL.exe. Without it, the program is almost completely functionless.</description>
    </file>
    <file name="RomPreviewBaseSave.000, RomPreviewBaseSave.zst">
      <description>These generate automatically when needed.
Base savestates for SNES9X and ZSNES, respectively. These are needed for previewing levels, event scripts, and battle scripts using either ZSNES or SNES9X. To avoid complications, make sure the emulators are in the same directory as everything else and that their save directories are configured likewise.</description>
    </file>
    <file name="changes.txt">
      <description>All of the fixes, modifications, and additions since the earliest versions are chronicled here.</description>
    </file>
    <file name="readme.txt">
      <description>This file.</description>
    </file>
  </Files>
  <section>
    <header>Bugs, errors, exceptions and complications in functionality.</header>
    <body>The editor may occasionally crash or not function properly due to certain errors in the code (although with each new bugfix I am aiming to completely remove the possibility of this ever happening). Please remember that this is almost certainly the programmer's fault and NOT yours, the user's. As often is the case, when an error surfaces or the program behaves in a buggy fashion, the user tends to immediately feel that they are to blame or the programmer is blaming them for the error. This is not correct: almost all of the time, it's the programmer's fault. Incidences when it might be the fault of the user may be due to a corrupt ROM being loaded (a corrupt ROM basically means any SMRPG rom which has been modified in any way, shape or form). This includes a ROM edited by Lazy Shell, but errors may occur if a ROM has been modified outside of Lazy Shell (ie. a hex editor), or often times in much older versions of Lazy Shell (v2.5 seems to be popular among users who find problems with v3.x).
If the editor crashes, make sure it is the latest version of Lazy Shell by clicking the "(i)" button in the main window and comparing the version there to the version posted on the home page (http://home.comcast.net/~giangurgolo/smrpg/).
If you are using the latest version, make a post in this Discord:
https://discord.gg/p4epwWmTqf
Explain exactly what you did to produce this error or cause this disfunctionality to occur, what editor it was in, what order you did your actions to produce this error or disfunctionality, etc. Also, when the editor bugs out, an exception prompt appears. If you can manage to copy the error message after this:
************** Exception Text **************
and include it in your post, it will definitely help. But most importantly, you must explain in your post what you did. Only posting the exception text alone will not be adequate enough.
The suggestions above are only suggestions. Sometimes only five words might be enough for me to quickly locate the bug and fix it. Remember, an error or bug is most likely NOT YOUR FAULT. Don't be afraid to report an error should it occur. I do notice and try to fix every bug that is reported, so your post won't be in vain (unless you're making a request for an addition to the editor, which I am now ignoring due to how time-consuming it can be).</body>
  </section>
  <section>
    <header>Yaki's Special Thanks</header>
    <body>
		Pidgezero_one, SMRPG Randomizer Team - Feedback, bug finders
		Doomsday31415 - Released source code to fix Dialogues editor save corruptions
		Will319 - Positive feedback, bug finder, feature requests (flat mode in particular)
		jpmac26 - For their LazyShell 4.0 source code fork
		AnAxemRanger - Bug finder, positive feedback
		
</body>

		<header>Lazy Shell's Contributors, Supporters and Special Thanks:</header>
	  <body>
		Yaki - discovered many bugs with later versions
		ElementalPowerStar - feedback, discovered several bugs
		Bregalad - source code for BRR encoding and decoding
		FuSoYa - for permission to use Lunar Compress.dll
		KP9000 - beta testing, discovered many bugs with pre-release version
		MathOnNapkins - helped with some coding
		Alex Farber - MRU list manager
		spel werdz rite - resolution for running program under a 64-bit OS
		romhacking community - various feedback</body>
  </section>
  <FAQ>
    <header>F.A.Q. (Frequently Asked Questions)</header>
    <entry>
      <question>The editor will not run at all.</question>
      <answer>You need .NET Framework 4.8 or higher installed on your system.</answer>
    </entry>
    <entry>
      <question>I have no idea what this stuff means!</question>
      <answer>First, look in the glossary at the end of this readme file. Also, enable the help feature in the editor. If this feature is enabled, you'll be able to see a description of the property and what it does by moving the mouse over it. Click the (?) icon at the top of most editors or press F1 to enable/disable the help feature.</answer>
    </entry>
    <entry>
      <question>I want to design or write a new _____. Where do I start?</question>
      <answer>If you're new to this, study the editor. Play around with it for a while before delving into a new project. Tweak or mess around with things that already exist (ex: scripts, levels, monsters, sprites, etc.) to gain an understanding of how everything works or operates. Then, when you want to start something new or original, use the "template-based" approach which I have always used in my own hacks: try thinking of something in the game that most closely resembles what you want to do or create, find that element in the editors, study it and it's properties/details, and use that as a template for your custom-made whatever. Example: copy event script commands into your own script that are similar, modify levels that are closest in resemblance to what you want to create, use existing monsters that are most characteristic of your custom monsters. The OREFFEZEPS hack, for example, was made entirely through this method of template hacking: I tweaked existing spells/attacks to varying degrees to make new original ones. The Bob-omb Mafia's forest levels used touched-up tilemaps of dummied maps which already existed (as well as the sewers levels).</answer>
    </entry>
    <entry>
      <question>How do I add a new ally, item, monster, etc.?</question>
      <answer>You cannot add new indexes to any element, but you can replace the properties of existing indexes. That is the basic rule of hacking SMRPG. Many elements, like sprites, have dummied or unused indexes which you may edit or modify to "add" new stuff. Lazy Shell should not be viewed as an expansion tool but as a modification tool.</answer>
    </entry>
    <entry>
      <question>Can Super Mario RPG be expanded?</question>
      <answer>Not with Lazy Shell, but I do believe there was an expansion hack project that successfully expanded the ROM. Lunar Expand is incapable of expanding SMRPG due to SA-1 chip complications.</answer>
    </entry>
    <entry>
      <question>I'm looking specifically for _____ matching a name/description.</question>
      <answer>Most of the editors have a search field to the right of the index list, tagged with a magnifying glass icon. Use that to search for a specific index with a general description, name, or whatever.</answer>
    </entry>
    <entry>
      <question>The editor crashed and/or corrupted the ROM and I lost my work!</question>
      <answer>First, try clicking "Ignore Error" and saving as a separate ROM. Then, try exporting the indexes that didn't glitch out into .dat files and import those into a fresh, uncorrupted ROM. In the future, enable the back-up feature in the settings: click the grey cog icon in the main window to open the settings. There are two types of back-ups: you can back-up on load and/or save. Thus you can roll back to an earlier edit before the ROM got corrupted by the program.</answer>
    </entry>
    <entry>
      <question>I loaded a hack and one of the editors crashed.</question>
      <answer>It's possible the hack was written using an earlier version of Lazy Shell, particularly v2.x. Earlier versions of the program had badly written code and incorrectly saved certain types of data like sprites. Therefore newer versions will likely encounter errors with hacks made with earlier versions, and/or crash.</answer>
    </entry>
    <entry>
      <question>What do these "B#,b#" things mean?</question>
      <answer>These are unknown bits. "B0,b0" means "Byte 0, bit 0" and refers to bit 0 in the first byte of the index's property data chunk. If you're confident you have discovered exactly what these bits do, feel free to post it in one of the bug report thread:
http://acmlm.kafuka.org/board/thread.php?id=7005
http://www.smwcentral.net/?p=viewthread&amp;t=45572</answer>
    </entry>
    <entry>
      <question>Is there free space in the ROM where I can insert graphics?</question>
      <answer>Only the space that you see in the editor's own graphics editor can be modified. You can import external images into it, or use the more powerful import features. For example, in the sprites editor.</answer>
    </entry>
    <entry>
      <question>I have no idea how scripts work.</question>
      <answer>There are three types of scripts, each with their own scripting language: event, battle, and animation scripts. See the glossary for a more detailed explanation of scripts and how each different type of script works.</answer>
    </entry>
    <entry>
      <question>Why do the images I import decrease in quality?</question>
      <answer>The number of colors are reduced to 15 (or 3 in 2bpp cases). So if you're trying to import a Caravaggio painting, you won't have much luck keeping the quality. Palettes are 16 or 4 colors, with the first color being reserved for transparent pixels.</answer>
    </entry>
    <entry>
      <question>What's a .dat file?</question>
      <answer>Exported elements into external files that can be imported into other indexes of the same element.</answer>
    </entry>
    <entry>
      <question>My ROM hack's checksum is bad/failed!</question>
      <answer>Only fresh, unsaved, unmodified ROMs will have a good checksum (0x3bb4). The ROM's checksum always fails after a save. It's not a bug because the slightest change in the ROM data will create a bad checksum. However if you are loading a fresh, supposedly unaltered ROM and get a failed checksum, then there may be issues.</answer>
    </entry>
    <entry>
      <question>The editor crashes, regardless of what ROM is loaded.</question>
      <answer>Try resetting the settings. Click the cog icon in the main window and click "Default..." to reset the settings.</answer>
    </entry>
    <entry>
      <question>Sometimes it asks to save even if I haven't done anything.</question>
      <answer>In some editors, like the sprites editor, switching between indexes will reassemble the last loaded index's data thus changing the data in the process. This is not a bug, and none of the properties are actually changed; just sometimes the raw hex data is slightly rearranged from the original order.</answer>
    </entry>
    <entry>
      <question>What are Lazy Shell's most powerful features?</question>
      <answer>1. The "Import Image(s)" functions in the sprites and effects editors allow the user to replace existing sprites with entirely new sprite animations from external image files. These were quite difficult to write the code for, but very rewarding in that they ultimately added a lot more muscle to the editor.
2. The palette editor's "Adjust RGB" and "Effects" features let the user apply all kinds of effects to the colors, from RGB swapping, grayscale, contrast/brightness, colorizing, and more. You can create your own palette swaps of sprites, levels, etc. 
3. The "New Font Table" feature in the dialogues editor in the font editor panel lets you replace the SMRPG font with any font installed on your system. 
4. You can flip entire battlefields by just selecting the whole battlefield, right-click, and click "mirror" or "invert". 5. A built-in hex editor lets the user edit the raw hex data of several elements in the game.</answer>
    </entry>
  </FAQ>
  <Glossary>
    <header>Glossary</header>
    <entry term="2bpp &amp; 4bpp">
      <definition>These mean "2 bits per pixel" and "4 bits per pixel", and refer to the format that graphics are in. Graphics in 2bpp format can only use a maximum of 4 colors, whereas 4bpp graphics can use up to 16 colors. The Big Boo in Bowser's Terrorize spell only needs 4 colors, thus the graphics are in 2bpp format to conserve ROM space.</definition>
    </entry>
    <entry term="action queue">
      <definition>A group of commands in an event script which behave like a custom embedded action script, containing movement commands for a given NPC.</definition>
    </entry>
    <entry term="action script">
      <definition>A script comprised of commands which create a series of movements ascribed to an NPC in a level. A townsperson walking back and forth randomly is controlled by an action script. A wiggler's unique behavior is governed by a special action script.</definition>
    </entry>
    <entry term="AMEM">
      <definition>1. Audio memory, used to store SPC and sample data.
2. Animation memory, used in animation scripts to store sub-routine flags.</definition>
    </entry>
    <entry term="animation script">
      <definition>The scripts which animate everything seen in battle. Attacks, spells, events, etc. are all governed by animation scripts. Animation scripts are, like battle and event scripts, written in their own scripting language. The animation scripting language is the most complicated and difficult to write for, as they tend to jump around wildly throughout the current bank by means of animation packets and memory-checking mini-scripts. The animations editor contains many powerful features, but unfortunately also many limitations on innovation. Some scripts are painfully large because many of the mini-scripts within a script are repeated numerous times.</definition>
    </entry>
    <entry term="ASM" term1="assembly">
      <definition>This is essentially the game's raw code which runs when the game is started. SNES games are generally written in assembly. Most everything that Lazy Shell modifies is arranged in data chunks and dynamic scripts and does not involve assembly programming code. Anything Lazy Shell is incapable of modifying, outside of the defense timing values. "ASM hacking" is modifying the assembly code outside of Lazy Shell.</definition>
    </entry>
    <entry term="bit">
      <definition>These behave like flags or switches that are turned on or off. The game knows what has been done so far in the game because of the bits that are set or clear. Defeating the Hammer Bros. sets a bit. Each time you enter that level, an event script checks if the switch is turned on in order to determine whether or not to show the Hammer Bros NPC and execute the associated cut scene. The "Jump" bit is already switched on when you start a new game, and can be switched off in the allies editor. Checkboxes in the editor are usually associated with bit-wise data while number values are byte-wise. Example: monster HP is read byte-wise while elemental weaknesses are read bit-wise.</definition>
    </entry>
    <entry term="command">
      <definition>These are what comprise the many scripts in the ROM. Example: in the first encounter with Terrapins, an event script contains a command "Engage battle, pack: 1, battlefield: [07]" which initiates the battle with the Terrapins.</definition>
    </entry>
    <entry term="element">
      <definition>The different things in the ROM that Lazy Shell can modify. The individual editors can usually edit one or two types of elements. Elements often have multiple indexes. Monsters are an element that has 256 indexes (0 to 255). Levels are another element that contains 510 indexes, event scripts have 4096 indexes.</definition>
    </entry>
    <entry term="event script">
      <definition>The game basically progresses by event scripts. Everything you see happening in a level that isn't controlled by the player (ie. Mario) is executed by the commands in an event script. Scripts are usually initialized by a trigger in the level, when Mario comes into contact with either an event field or an NPC. An event script is also automatically initialized every time when entering a new level. This script is the level's own event script (set with the "EVENT #") that usually contains commands for preparing primarily NPC and memory related elements before the level is completely loaded.</definition>
    </entry>
    <entry term="event field">
      <definition>A field which, when Mario touches it, will initiate an event script. Event fields can actually be made to behave exactly like exit fields and they often are when other commands must be executed. In these cases the scripts contain a command pointing to the target level.</definition>
    </entry>
    <entry term="exit field">
      <definition>A field which, when Mario touches it, will load a new level. Other ROM editors sometimes call these "entrances".</definition>
    </entry>
    <entry term="field">
      <definition>An invisible thing in a level that triggers an event or operation when Mario touches it. Event and exit fields, for example.</definition>
    </entry>
    <entry term="hex" term2="hexadecimal">
      <definition>A numeric system who's places are based on 16's and not 10's like in "decimal". With just one decimal place, you can count up to 9, but in just one hexadecimal place you can go up to 15. This is because the numbers 10-15 are A-F respectively. Thus in just two hexadecimal places the numbers can go up to 255, which is why this number is so common throughout the editor. With three hex places, 4096 is highest. The editor displays only memory addresses in hex format (eg. 00:709F) with all other elements being in decimal.</definition>
    </entry>
    <entry term="index">
      <definition>Example: TERRAPIN is an index in the monster element (index 0). The level for Mario's Pad is index 16 in the levels element, etc. You can modify the properties of each index by switching to or among them in the editors using either its drop down list or immediately with its numeric up/down.</definition>
    </entry>
    <entry term="isometric">
      <definition>The pseudo 3-D orientation of Super Mario RPG. Other games like Final Fantasy Tactics and Tactics Ogre are isometrically oriented. Something is called "isometric" when, instead of being in a flat gridplane, it is shaped like a diamond and arranged at an angle. Nevertheless Mario RPG's levels are drawn with square 16x16 tiles and not diamond-shaped tiles, whereas the solidity tiles are.</definition>
    </entry>
    <entry term="layer">
      <definition>SMRPG uses five layers: L1, L2, L3, NPCs, BG. By default, NPCs appear on top of all other layers (excluding priority 1 tiles). After that, L1 appears on top, followed by L2, L3, and BG. The BG is simply the solid background color behind everything else.</definition>
    </entry>
    <entry term="level">
      <definition>The places and areas you can enter in-game. Many ROM editors also refer to these as "locations".</definition>
    </entry>
    <entry term="memory address">
      <definition>A "slot" where the game stores information that it needs to access later. Example: the 30 slots for items (7F:F882 to 7F:F89F) have memory addresses. The memory addresses are the items. Completed events, like defeating the Hammer Bros (00:7052, bit 6), are stored as a bit in a memory address. A memory address has 8 bits.</definition>
    </entry>
    <entry term="mode 7">
      <definition>Mode 7 is a format in SNES which can display a 2D map in a 3D manner. The 1st and 2nd mine cart levels are in mode 7 format, for instance. It can also do transformations such as the stretching effect on the world maps.</definition>
    </entry>
    <entry term="mods">
      <definition>These can change the tiles or solidity tiles of a level. In the levels editor, there are two types of mods: tile mods and solidity mods. Example: Croco blowing up the wall in Moleville Mines. Example: the green button in Rose Town removing/adding stairs outside.</definition>
    </entry>
    <entry term="mold">
      <definition>An arrangement of tiles that form a complete image (ie. a sprite image). A mold is similar to the orientation of a tilemap, except that sprite molds can either be in a format that arranges the tiles in a grid (gridplane) or a coordinate system (tilemap). One or more molds may be contained in a sprite or effect and are used to create a sequence animation.</definition>
    </entry>
    <entry term="NPC">
      <definition>Abbreviation for "non-playable character". They are basically the sprites seen in-game in a level, excluding battles, but with a number of properties all described by the help tags in the levels editor. An NPC is not the same as a sprite, it merely has a sprite index assigned to it among a bunch of other attributes.</definition>
    </entry>
    <entry term="OMEM">
      <definition>Object memory, referring to the object packets used in animation scripts. Each time a $68 or $64 command is called a memory address block is accessible exclusively by the current object, assigned by the parameters $68 or $64 commands.</definition>
    </entry>
    <entry term="palette">
      <definition>A set of colors used to draw something. Almost all palettes are 16 colors, except for layer 3 graphics, fonts, and some effect graphics. SNES games like SMRPG are somewhat limited in the number of colors they can display, which is why imported image files can decrease dramatically in quality. Many paint programs have features which can decrease the color depth of an image to 16 colors.</definition>
    </entry>
    <entry term="priority">
      <definition>A tile or sprite's priority determines how it will overlap other tiles or how other tiles will overlap it. "Priority 1" means someting will overlap all other parts of a level that aren't also set to priority 1. Higher priority numbers mean it will appear under other things. Highlighting priority 1 tiles in a level will show what parts of the level will typically overlap Mario and NPCs.</definition>
    </entry>
    <entry term="script">
      <definition>A list of 0 or more commands that carry out an action on screen in the game, such as Toad running into Mario near the beginning of the game, or Bowser's "Crusher" battle animation, or The Big Boo randomly selecting either "Lighting Orb" or "Bolt" to use in battle. Examples: event scripts, action scripts, battle scripts, animations.</definition>
    </entry>
    <entry term="sequence">
      <definition>An animation. Two types of elements use sequences: sprites and effects. A sequence is a collection of frames. Each frame is assigned a mold index from the sprite or effect's mold collection and plays back the frames as a fully animated sequence.</definition>
    </entry>
    <entry term="solidity">
      <definition>Also varyingly called called "physical field" or "collision tiles". The physical properties of something, like a map. Levels in most games have solidity maps, but usually as tilesets associated with the regular graphical tileset. As tilesets in SMRPG are grid-based and not isometric like the solidity tiles, the tilemaps and not the tilesets have their own solidity maps.</definition>
    </entry>
    <entry term="tilemap">
      <definition>An example: Levels are 64 rows of tiles, each row is 64 tiles. Many sprites are "tilemaps" themselves, but here each tile would have its own coordinate instead of being placed in a grid like levels. Do not mistake tilemaps with tilesets. "tileset" A collection or "palette" of tiles used to draw to a tilemap.</definition>
    </entry>
    <entry term="trigger">
      <definition>When Mario comes into contact with something like an NPC or event field, and an event script is initiated, it is "triggered". NPCs have a trigger property which sets the conditions for the script's initiation when Mario collides with it.</definition>
    </entry>
  </Glossary>
  <Editors>
    <header>Editors</header>
    <Allies form="AlliesEditor" icon="icons/mainAllies.gif" title="Allies" type="editor">
      <description>The allies editor contains two subwindows: new game stats and level-ups.</description>
      <Allies form="Allies" icon="icons/mainAllies.gif" title="New Game Stats" type="subwindow">
        <description>In the new game stats subwindow the starting stats for all 5 characters can be modified, along with the starting items, special items, and equipment. Starting coins, flower points, and frog coins can be changed, too. In addition to this, the universal defense timing lets the user change the timing properties of a defense against a monster attack.
The current character selected is the base index for all of the properties in this subwindow except for those in the "Inventory Slot Items", "New Game Status" and "Defense Timing" boxes.</description>
        <Characters title="Characters" type="section">
          <tooltip control="characterName">
            <title>Character</title>
            <description>The character to edit by name.</description>
          </tooltip>
          <tooltip control="textBoxCharacterName">
            <title>Character Name</title>
            <description>The character's displayed name in all menus.</description>
          </tooltip>
          <tooltip control="startingLevel">
            <title>Level</title>
            <description>The initial level of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingAttack">
            <title>Attack</title>
            <description>The initial attack power of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingDefense">
            <title>Defense</title>
            <description>The initial defense power of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingMgAttack">
            <title>Magic Attack</title>
            <description>The initial magic attack power of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingMgDefense">
            <title>Magic Defense</title>
            <description>The initial magic defense power of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingSpeed">
            <title>Speed</title>
            <description>The initial speed of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingWeapon">
            <title>Weapon</title>
            <description>The initially equipped weapon of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingArmor">
            <title>Armor</title>
            <description>The initially equipped armor of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingAccessory">
            <title>Accessory</title>
            <description>The initially equipped accessory of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingExperience">
            <title>Experience</title>
            <description>The initial experience of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingCurrentHP">
            <title>Current HP</title>
            <description>The initial current HP of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingMaximumHP">
            <title>Maximum HP</title>
            <description>The initial maximum HP of the currently selected character when (s)he becomes active.</description>
          </tooltip>
          <tooltip control="startingMagic">
            <title>New Game Ally Spells</title>
            <description>The initial spells known by the currently selected character when (s)he becomes active.</description>
          </tooltip>
        </Characters>
        <NewGame title="New Game" type="section">
          <tooltip control="startingCoins">
            <title>Coins</title>
            <description>The amount of coins in the inventory at the start of a new game.</description>
          </tooltip>
          <tooltip control="startingFrogCoins">
            <title>Frog Coins</title>
            <description>The amount of frog coins in the inventory at the start of a new game.</description>
          </tooltip>
          <tooltip control="startingCurrentFP">
            <title>Current FP</title>
            <description>The current FP at the start of a new game.</description>
          </tooltip>
          <tooltip control="startingMaximumFP">
            <title>Maximum FP</title>
            <description>The maximum FP at the start of a new game.</description>
          </tooltip>
          <tooltip control="slotNum">
            <title>Inventory Slot #</title>
            <description>The slot is the "open slot" in an inventory to store an item.
For example, the equipment and items have 30 slots, therefore they can store 30 items in slots 0 to 29. By default, there are actually 29 open slots in the game, due to the default trash can occupying slot #29).</description>
          </tooltip>
          <tooltip control="startingItem">
            <title>Item</title>
            <description>The item in the currently selected slot of the item inventory at the start of a new game.</description>
          </tooltip>
          <tooltip control="startingSpecialItem">
            <title>Special Item</title>
            <description>The item in the currently selected slot of the special item inventory at the start of a new game.</description>
          </tooltip>
          <tooltip control="startingEquipment">
            <title>Equipment</title>
            <description>The item in the currently selected slot of the equipment inventory at the start of a new game.</description>
          </tooltip>
        </NewGame>
        <Timing title="Timing">
          <tooltip control="lvl1TimingStart">
            <title>1/2 dmg start</title>
            <description>The frame # from the start of the monster's attack animation where the level 1 timing begins. This is a highly relative universal value based on the monster's animation script. The Level 1 timing range is when the player is able to decrease the damage (for defense) by 50% by pressing an ABXY button.</description>
          </tooltip>
          <tooltip control="lvl2TimingStart">
            <title>0 dmg start</title>
            <description>The frame # from the start of the monster's attack animation where the level 2 timing begins. This is a highly relative universal value based on the monster's animation script. The Level 2 timing range is when the player is able to decrease the damage (for defense) by 100% (ie. 0 damage) by pressing an ABXY button.</description>
          </tooltip>
          <tooltip control="lvl2TimingEnd">
            <title>0 dmg end</title>
            <description>The frame # from the start of the monster's attack animation where the level 2 timing ends. This is a highly relative universal value based on the monster's animation script. The Level 2 timing range is when the player is able to decrease the damage (for defense) by 100% (ie. 0 damage) by pressing an ABXY button.</description>
          </tooltip>
          <tooltip control="lvl1TimingEnd">
            <title>1/2 dmg end</title>
            <description>The frame # from the start of the monster's attack animation where the level 1 timing ends. This is a highly relative universal value based on the monster's animation script. The Level 1 timing range is when the player is able to decrease the damage (for defense) by 50% by pressing an ABXY button.</description>
          </tooltip>
        </Timing>
      </Allies>
      <LevelUps form="LevelUps" icon="icons/openLevelUps.gif" title="Level-ups" type="subwindow">
        <description>The level-ups subwindow allows the user to change the level-up status increments, bonus level-up increments, and spells learned at each level. A calculator to total the sums of level-up's stats is also available. The current character selected is the base index for all of the properties in this subwindow.</description>
        <tooltip control="calculatorButton">
          <title>Level-Ups Calculator</title>
          <description>A calculator that gives the sum of each level-up and bonuses. It also displays which spells are learned at each level.</description>
        </tooltip>
        <tooltip control="levelNum">
          <title>Level #</title>
          <description>The character's level to edit by number. All 5 characters have a total of 29 levels (levels 2 through 30) each.
The level selected is the base index for all of the properties in the "Initial Level-up Increments", "Bonus Level-up Increments" and "Level-up learned spell" panels.</description>
        </tooltip>
        <tooltip control="expNeeded">
          <title>Experience</title>
          <description>The amount of experience the currently selected character needs to reach the currently selected level.</description>
        </tooltip>
        <tooltip control="hpPlus">
          <title>HP+</title>
          <description>The amount the currently selected character's HP will automatically increase when the character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="attackPlus">
          <title>Attack+</title>
          <description>The amount the currently selected character's Attack Power will automatically increase when the character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="defensePlus">
          <title>Defense+</title>
          <description>The amount the currently selected character's Defense Power will automatically increase when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="mgAttackPlus">
          <title>Mg. Attack+</title>
          <description>The amount the currently selected character's Magic Attack Power will automatically increase when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="mgDefensePlus">
          <title>Mg. Defense+</title>
          <description>The amount the currently selected character's Magic Defense Power will automatically increase when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="hpPlusBonus">
          <title>HP+</title>
          <description>The amount the currently selected character's HP will increase if the "HP" bonus option is chosen when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="attackPlusBonus">
          <title>Attack+</title>
          <description>The amount the currently selected character's Attack Power will increase if the "POW" bonus option is chosen when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="defensePlusBonus">
          <title>Defense+</title>
          <description>The amount the currently selected character's Defense Power will increase if the "POW" bonus option is chosen when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="mgAttackPlusBonus">
          <title>Mg. Attack+</title>
          <description>The amount the currently selected character's Magic Attack Power will increase if the "S" bonus option is chosen when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="mgDefensePlusBonus">
          <title>Mg. Defense+</title>
          <description>The amount the currently selected character's Magic Defense Power will increase if the "S" bonus option is chosen when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
        <tooltip control="levelUpSpellLearned">
          <title>Level-up learned spell</title>
          <description>The spell learned when the currently selected character reaches the currently selected level during a level-up.</description>
        </tooltip>
      </LevelUps>
      <Coordinates form="Coordinates" icon="icons/numerals.gif" title="Level-ups" type="subwindow">
        <description>The coordinates subwindow allows the user to edit the location of cursors in battle. Can also edit the scarecrow cursor location.</description>
        <tooltip control="scarecrowButton">
          <title>Scarecrow Toggle</title>
          <description>Displays the Scarecrow version of the character. All scarecrow character variants have the same cursor locations.</description>
        </tooltip>
        <tooltip control="pictureBoxCharacter">
          <title>Character Preview</title>
          <description>The character's preview with the cursor location. Can click to drag the cursor to your desired location.</description>
        </tooltip>
        <tooltip control="cursorSpriteChoice">
          <title>Cursor Type</title>
          <description>The cursor you can edit the location for.</description>
        </tooltip>
      </Coordinates>
      <FAQ title="ALLIES EDITOR">
        <entry>
          <question>Is it possible to add new allies?</question>
          <answer>No, you can only modify the existing five allies.</answer>
        </entry>
        <entry>
          <question>Can I move another ally to the front to appear in the overworld?</question>
          <answer>Not in Lazy Shell, but with ASM hacking it is possible.</answer>
        </entry>
        <entry>
          <question>Is it possible to start with other characters besides Mario?</question>
          <answer>You would have to switch the Mario sprite with another character's.</answer>
        </entry>
        <entry>
          <question>Can I raise the XP to 5 digits and the coins to 4?</question>
          <question>Can I edit the maximum experience?</question>
          <question>Can I extend the level cap?</question>
          <answer>Not in Lazy Shell.</answer>
        </entry>
      </FAQ>
    </Allies>
    <Animations form="AnimationScripts" icon="icons/mainAnimations.gif" title="Animations" type="editor">
      <description>Animation scripts are all battle-oriented scripts which include all spell, attack, item, entrance, event, and behavior animations. This includes all sprite behavior in battle--allies, monsters, spells, etc. This editor is somewhat similar to the event scripts editor, but several distinctions must be made.</description>
      <attribute>
        <description>1. The inability to add or delete commands to or from animation scripts, due to the complicated organization of the data into external rather than internal subroutines.</description>
      </attribute>
      <attribute>
        <description>2. The flow layout orientation of subroutines: event scripts are straightfoward and linear, while animation scripts are displayed as a multi-level tree where sub-routines are displayed as child nodes. Subroutines can be called multiple times in the same script, hence the fact that changing a command's properties can alter other nodes as well.</description>
      </attribute>
      <attribute>
        <description>3. A greater dependency on memory slots also contributes to the  difficult nature of this editor. Different memory values can affect subsequent sub-routine pointers, such as the $68 or $64 command which relies on index pointers.</description>
      </attribute>
      <attribute>
        <description>4. Memory can be accessed as two types: AMEM (animation memory) and OMEM (object memory). AMEM is the primary memory type, accessible at all levels, while OMEM is linked to the current object, assigned by the $68 or $64 commands and accessible only in the synchronous object routine.</description>
      </attribute>
      <tooltip control="animationCategory">
        <title>Category</title>
        <description>Select the animation script category.</description>
      </tooltip>
      <tooltip control="animationName" control2="animationNum">
        <title>Animation Index</title>
        <description>Select the animation to load.</description>
      </tooltip>
      <tooltip control="commandTree">
        <title>Command Tree</title>
        <description>The collection of commands that comprise the animation script. Nodes are drawn in a hierarchical format for subroutines and animation packets used by the script. Check the nodes to move commands up or down--they cannot be delete, copied or pasted, however.
Click a node to edit its properties in the panel on the right. Note that not all commands have been documented nor have their parameters been disassembled to a user-friendly GUI.</description>
      </tooltip>
      <tooltip control="applyAnimation">
        <title>Apply</title>
        <description>Applies all changes made to the selected command.</description>
      </tooltip>
      <tooltip control="emptyAnimationMods">
        <title>Empty</title>
        <description>Fills the animation opcode and parameters with 1-byte $0A NOOP commands. This can be used to "delete" a command or replace it with a new one.</description>
      </tooltip>
      <tooltip control="applyAnimationMods">
        <title>Apply</title>
        <description>Apply all changes made to the selected command's raw hex data.</description>
      </tooltip>
      <FAQ title="ANIMATION EDITOR">
        <entry>
          <question>How do I add things to a weapon or spell script?</question>
          <answer>These are called commands in the animation script editor, and you cannot add new ones: only replace, move or edit existing ones.</answer>
        </entry>
        <entry>
          <question>I want to add new commands.</question>
          <answer>You cannot do this, you can only replace, move or edit commands.</answer>
        </entry>
        <entry>
          <question>How do I replace commands?</question>
          <answer>Select the command and at the bottom of the editor replace the first hex value with the opcode of the command you want to replace it with.</answer>
        </entry>
        <entry>
          <question>Where's the list of command opcodes for animations?</question>
          <answer>The docs_ani-code.txt file that comes packed with Lazy Shell++ contains all opcodes decoded thus far.</answer>
        </entry>
        <entry>
          <question>How do I make custom items with custom animations?</question>
          <answer>The easiest things to customize in the animations editor are the sprites used, the sound effects, and dialogues. "Current object = sprite: whatever" "Current sprite: whatever" "Current action object = effect: whatever" "Playback sound: whatever" are among them. It's better to start simple before working with stuff like memory.</answer>
        </entry>
        <entry>
          <question>I want to change a sprite in an animation to something else.</question>
          <answer>You'll want to modify the "Current object = sprite: whatever" commands. Modify its properties in the "CURRENT COMMAND PROPERTIES" panel on the right and click apply when you are finished. Alternatively you can change the hex values below.</answer>
        </entry>
        <entry>
          <question>How do I make allies use enemy spells/attacks?</question>
          <answer>This would require comprehensive animation script editing, including but not limited to careful repositioning of many effect and sprite graphics and changing behavior of the sprites, as well as changing the object memory addresses, etc. Example: "Light Beam" is specifically scripted to shift leftwards towards the allies, so to make it realistically target the monsters the initial position and direction would need to be changed among other things.</answer>
        </entry>
        <entry>
          <question>Where are the locations of the dummy spell animation scripts?</question>
          <answer>There are none; dummy spells (except for the 4 nameless ones used by Smithy) have no pointers and no scripts.</answer>
        </entry>
        <entry>
          <question>How do you modify damage in an animation script?</question>
          <answer>I cannot say for sure, but none of the animation scripts appear to contain commands that modify damage, aside from the CC command found only in ally spells that append damage.</answer>
        </entry>
        <entry>
          <question>How do I replace Mushroom and Scarecrow with new effects?</question>
          <answer>Most likely it requires ASM hacking, but as this is an unexplored territory in the SMRPG ROM I cannot be sure.</answer>
        </entry>
      </FAQ>
    </Animations>
    <Attacks form="AttacksEditor" icon="icons/mainAttacks.gif" title="Attacks" type="editor">
      <description>The attacks editor contains two subwindows: spells and attacks.</description>
      <Spells form="Spells" icon="icons/openSpells.gif" title="Spells" type="subwindow">
        <description>The spells editor can modify all spell properties. These properties are applied to either in-battle usage, overworld usage or both.
Spell #0-63 are ally spells, while all other spells are monster spells. Both are exclusively limited to usage by either allies or monsters. Any attempts to assign monster spells to allies or vice versa will most likely cause a glitch, and is not recommended.</description>
        <tooltip control="spellNum" control2="spellName">
          <title>Spell Index</title>
          <description>Select the spell to load.</description>
        </tooltip>
        <tooltip control="spellNameIcon">
          <title>Icon</title>
          <description>The spell's icon as seen preceding its displayed name in all menus. Only ally spells have icons.</description>
        </tooltip>
        <tooltip control="textBoxSpellName">
          <title>Spell Name</title>
          <description>The spell's displayed name in all menus.</description>
        </tooltip>
        <tooltip control="spellFPCost">
          <title>FP Cost</title>
          <description>The amount of FP subtracted from the user's current FP when the spell is used.</description>
        </tooltip>
        <tooltip control="spellMagPower">
          <title>Magic Power</title>
          <description>The base damage or heal amount caused by the spell.</description>
        </tooltip>
        <tooltip control="spellHitRate">
          <title>Hit Rate%</title>
          <description>The spell's hit rate percent, ie. the probability out of 100 the spell will hit its target.</description>
        </tooltip>
        <tooltip control="spellAttackType">
          <title>Attack Type</title>
          <description>The spell's attack type, ie. the spell will either cause damage or heal its target. This property can be ignored depending on the value of "Inflict Function".</description>
        </tooltip>
        <tooltip control="spellEffectType">
          <title>Effect Type</title>
          <description>The effect type, ie. whether or not the spell will inflict or nullify (an) effect(s). Example: Poison Gas inflicts the Poison effect on the target(s) and Group Hug nullifies all adverse effects on the target(s). If set to {NONE} then anything checked under "Effect" is ignored. Likewise, this property is ignored if nothing under "Effect" is checked.</description>
        </tooltip>
        <tooltip control="spellFunction">
          <title>Inflict Function</title>
          <description>The inflict functions are specialized to certain spells, eg. "Scan/Show HP" is specialized to Psychopath and "Jump Power" is specialized to Jump. Some of these will cause the "Attack Type" to be ignored, ie. the spell will neither cause damage nor heal (eg. Psychopath).</description>
        </tooltip>
        <tooltip control="spellInflictElement">
          <title>Inflict Element</title>
          <description>The element assigned to the spell. If the target has a strength against the element, the base damage of the spell will be halved. If the target has a weakness against the element, the base damage will be doubled. If the target has a nullification property against the element, it will yield 0 damage.</description>
        </tooltip>
        <tooltip control="spellAttackProp">
          <title>Other Properties</title>
          <description>"Check Caster/Target Atk/Def" will add to or subtract from the base damage or heal amount of the spell based on the target's attack and defense power instead of its magic attack and magic defense power. By default, no spells have this property enabled.
"Ignore Target's Defense" will not subtract the target's magic defense power from the spell's base damage or heal amount (ie. the spell's magic power).
"Check Mortality Protection" is redundant because the game engine always checks anyways. Only the dummied Knock Out spell has this enabled by default.
"Usable in overworld menu" allows the spell to be used out of battle, ie. the overworld menu. This is normally reserved for healing spells.
"9999 Damage/Heal" will kill the target in one strike, if the spell does not miss. Only the dummied Knock Out spell has this enabled by default.
"Hide Battle Numerals" will hide the damage or heal amount total (ie. the numbers shown after an attack). This is generally used by spells that cause 0 damage and are only effect-based spells such as Sleepy Time, to avoid a redundant "0" appearing.</description>
        </tooltip>
        <tooltip control="textBoxSpellDescription">
          <title>Description</title>
          <description>The description that appears in the lower-right corner of the overworld menu when the cursor is on the spell.</description>
        </tooltip>
        <tooltip control="spellTargetting">
          <title>Targetting</title>
          <description>"Other Targets" will limit the target to a single ally or enemy. This must NOT be checked with "Entire Party".
"Enemy Party" will allow the spell to target the opposing party.
"Entire Party" will cause the spell to target all members of either the ally party or enemy party. This must NOT be checked with "Other Targets".
"Wounded Only" will limit the target to wounded members, ie. members with currently 0 HP.
"One Party Only" will limit the target to only one party. By default, all usable spells have this property enabled. Uncheck at your own risk!
"Not Self" will limit the target to other allies only, and the caster is untargettable. By default no spells have this checked, although the Mushroom item that turns the user into a mushroom has this property enabled.</description>
        </tooltip>
        <tooltip control="spellStatusEffect">
          <title>Status &lt;. . . .&gt;</title>
          <description>The effect inflicted or nullified on a target, eg. Poison Gas inflicts Poison on a target, while Group Hug will nullify all effects a target is afflicted with except "Invincible". These properties are used based on the value for "Effect Type".</description>
        </tooltip>
        <tooltip control="spellStatusChange">
          <title>Effect &lt;. . . .&gt;</title>
          <description>The status of a target is either lowered or raised by 50%, depending on the value for "Effect Type". If the value for "Effect Type" is set to "Inflict" then the target's stats will be raised 50%. If "Effect type is set to "Nullify" then the target's stats will be lowered 50%.
Example: Geno Boost by default raises the target's Attack and Defense power by 50% (eg. if the attack and/or defense power of the target is 100, then it becomes 150). Shredder by default lowers the target's Attack, Defense, Magic Attack, and Magic Defense power by 50% (ie. it halves them).</description>
        </tooltip>
        <Timing title="Timing" type="section">
          <tooltip control="timingOne">
            <title>Timing Frame Span</title>
            <description>The # of frames from the start of the spell's animation when the user can trigger level 1 timing. The spell's damage will be increased by 50% if an ABXY button is pressed within this range. </description>
          </tooltip>
          <tooltip control="timingTwoStart">
            <title>LV2 Timing START</title>
            <description>The frame # from the start of the spell animation where the level 2 timing begins. Example: the default value for Jump is 39. This means that if an ABXY button is pressed after 39 frames have passed from the start of the Jump animation (ie. when Mario jumps off the ground) the damage is increased by at least 100% (ie. doubled).</description>
          </tooltip>
          <tooltip control="timingTwoEnd">
            <title>LV2 Timing END</title>
            <description>The frame # from the start of the spell animation when the level 2 timing ends. Example: the default value for Jump is 44. This means that if an ABXY button has NOT been pressed after 44 frames have passed from the start of the Jump animation (ie. when Mario jumps off the ground) the opportunity to increase the damage by 100% (ie. doubled) is gone.</description>
          </tooltip>
          <tooltip control="timingOneEnd">
            <title>LV1 Timing END</title>
            <description>The frame # from the start of the spell animation where the level 1 timing ends. Example: the default value for Jump is 45. This means that if an ABXY button has NOT been pressed after 45 frames have passed from the start of the Jump animation, the opportunity to time the attack for any damage increase is gone.</description>
          </tooltip>
          <tooltip control="timingGeno2Frame">
            <title>Level 2 Frame</title>
            <description>The frame # from the start of the spell animation when, if the button is held to this point, the damage is increased by at least 50%. This is by default around when the first red star appears on screen.</description>
          </tooltip>
          <tooltip control="timingGeno3Frame">
            <title>Level 3 Frame</title>
            <description>The frame # from the start of the spell animation when, if the button is held to this point, the damage is increased by at least 75%. This is by default around when the second red star appears on screen.</description>
          </tooltip>
          <tooltip control="timingGeno4Frame">
            <title>Level 4 Frame</title>
            <description>The frame # from the start of the spell animation when, if the button is held to this point, the damage is increased by at least 100%. This is by default around when the third red star appears on screen.</description>
          </tooltip>
          <tooltip control="timingGenoOverflow">
            <title>Charge Overflow</title>
            <description>The frame # from the start of the spell animation when, if the button is held to this point and beyond, the damage "overflows" and is reset to the base value, ie. no damage increase.</description>
          </tooltip>
          <tooltip control="timingFireballSpan">
            <title>Orb Frame Span</title>
            <description>The "speed" of the firing, or the # of frames the player must wait between button presses in order to "fire" another fireball. NOTE: values less than the default may cause the game to freeze if the button is consistently pressed for each frame span between fireballs.</description>
          </tooltip>
          <tooltip control="timingFireballMax">
            <title>Maximum Orbs</title>
            <description>The maximum number of orbs the player can fire before the spell is over. The accumulative damage is increased with each fireball, so lowering/raising this value will affect the maximum accumulative damage as well.</description>
          </tooltip>
          <tooltip control="timingRotationStart">
            <title>Timing Frame Start</title>
            <description>The frame # from the start of the spell animation when the player has the opportunity to rotate the directional pad to increase damage.</description>
          </tooltip>
          <tooltip control="timingRotationMax">
            <title>1/4 Rotations</title>
            <description>The maximum number of quarter rotations (a quarter rotation would be, for example, from DOWN to DOWN-LEFT to LEFT) allowed to increase damage. Raising/lowering this value will affect the maximum accumulative damage.</description>
          </tooltip>
          <tooltip control="timingInstanceMax">
            <title>Maximum</title>
            <description>The maximum number of times the player can execute another "jump" or "star rain" by timing it. Values above 127 will likely cause anomalies (ie. the spell caster might only be able to do 13 jumps, even if the maximum is set to 200 for example).</description>
          </tooltip>
          <tooltip control="timingInstanceNumber">
            <title>#</title>
            <description>The instance selected. The rest of the instances have the same "Instance Frame Duration" as the last one in the list of instances. For example, Super Jump instances 14 through 199 will have the same "Instance Frame Duration" as instance 13. NOTE: star rain's "Instance Frame Duration" is the same for all instances, so there isn't a list for them.</description>
          </tooltip>
          <tooltip control="timingInstanceSpan">
            <title>Frame Span</title>
            <description>The # of frames before either Mario or the Star lands on the target that the player is able to time the spell to increment damage and allow another instance to be timed. NOTE: star rain's "Instance Frame Duration" is the same for all instances, so there isn't a list for them.</description>
          </tooltip>
          <tooltip control="timingRapid">
            <title>Maximum power-ups</title>
            <description>The maximum number of times the player can press an ABXY button to increase damage during the spell animation.</description>
          </tooltip>
        </Timing>
      </Spells>
      <Attacks form="Attacks" icon="icons/mainAttacks.gif" title="Attacks" type="subwindow">
        <description>Attacks used by monsters can be modified in the attacks editor on the right. These are all exclusively in-battle monster attacks. Many monster attacks have no name, and even if given one it will not be displayed because the attack animation code does not enable it. Several attacks are unlabelled and distinguishable only by their appearance and what uses them.</description>
        <tooltip control="attackNum" control2="attackName">
          <title>Attack Index</title>
          <description>Select the attack to edit by number.</description>
        </tooltip>
        <tooltip control="textBoxAttackName">
          <title>Attack Name</title>
          <description>The attack's name displayed at the top of the screen when executed by the monster. Many monster attacks have no name, and even if given one it will not be displayed because the attack animation code does not enable it.</description>
        </tooltip>
        <tooltip control="attackHitRate">
          <title>Hit Rate%</title>
          <description>The attack's hit rate percent, ie. the probability out of 100 the attack will hit its target.</description>
        </tooltip>
        <tooltip control="attackAtkLevel">
          <title>Attack Level</title>
          <description>The attack level multiplies the base damage of the attack (ie. the monster's attack power) by a number.
An attack level of 0 will yield base damage. 
An attack level of 1 will multiply the base damage by 1.5. 
An attack level of 2 will multiply the base damage by 2. 
An attack level of 3 will multiply the base damage by 4. 
An attack level of 4 will multiply the base damage by 8. 
An attack level of 5 will multiply the base damage by 16. 
An attack level of 6 will multiply the base damage by 32. 
An attack level of 7 will multiply the base damage by 64.
Example: if the monster's attack power is 6, and the attack level of the attack is 7, then the damage will be increased to 384 (ie. 6 x 64).</description>
        </tooltip>
        <tooltip control="attackStatusEffect">
          <title>Effect Inflict</title>
          <description>The effect inflicted on a target, eg. S'crow Bell inflicts Scarecrow on a target, Thornet inflicts Poison, etc.</description>
        </tooltip>
        <tooltip control="attackStatusUp">
          <title>Status Up</title>
          <description>The status of a target is raised by 50%.
Example: Valor Up by default raises the target's Defense and Magic Defense power by 50% (eg. if the magic defense and/or defense power of the target is 100, then it becomes 150). Vigor up! by default raises the Magic Attack and Attack power by 50%.</description>
        </tooltip>
        <tooltip control="attackAtkType">
          <title>Attack Type</title>
          <description>"9999 Damage" will kill the target in one strike, if the attack does not miss.
"No damage" will yield 0 damage to the target (both "No damage" properties are exactly the same, but different bits).
"Hide Battle Numerals" will hide the total damage (ie. the numbers shown after an attack). This is generally used by attacks that cause 0 damage and are only effect-based attacks such as S'crow Bell or "9999 damage" enabled attacks such as Scythe, to avoid a redundant "0" or "9999" appearing.</description>
        </tooltip>
      </Attacks>
      <FAQ title="SPELLS EDITOR">
        <entry>
          <question>Can I make new "inflict functions" for a custom spell?</question>
          <answer>This involves ASM, thus you cannot do this in Lazy Shell.
</answer>
        </entry>
      </FAQ>
    </Attacks>
    <Audio form="Audio" icon="icons/mainAudio.gif" title="Audio" type="editor">
      <description>Two subwindows are included in this editor: the samples and SPC editors.</description>
      <Samples form="SampleEditor" icon="icons/openSamples.gif" title="Samples" type="subwindow">
        <description>A sample is simply a raw audio sound that the SPCs use during playback. It is NOT to be confused with a sound effect like Mario's jump: it should be viewed as a single instrument sound used by songs and sound effects. It is compressed in BRR format, the traditional SNES format for audio samples. The first 16 samples are used primarily by the SPC sound effects (ex: Mario's jump). The remaing samples are all instruments used almost exclusively by SPC Music Tracks.</description>
        <tooltip control="sampleNum" control2="sampleName">
          <title>Sample Index</title>
          <description>Select the sample to load.</description>
        </tooltip>
        <tooltip control="relFreq">
          <title>Relative Frequency</title>
          <description>This is used to tune a sample sound to the pitch of A. Relative frequency is the frequency of the sample in distance by hertz from a base 32000hz. The difference, however, is not a simple matter of addition/subtraction. The formula for calculating final frequency is as follows:
If the relative frequency is positive: 32000 x 2^(RelFreq / 256 / 12).
If the relative frequency is negative: 32000 / 2^(RelFreq / 256 / 12).
So multiply or divide 32000 by 2 to the power of the final quotient of what's between () to get the final frequency of the sample.</description>
        </tooltip>
        <tooltip control="relGain">
          <title>Relative Gain</title>
          <description>Simply put: the volume change from the base volume.</description>
        </tooltip>
        <tooltip control="loopStart">
          <title>Loop Start</title>
          <description>If the sample loops this is the location in bytes it loops back to. If set to 0 or a value higher than the BRR sample's total size in bytes, it loops back to the beginning. This value must point to the start of a chunk, in other words it must be divisible by 9--the size of each chunk in a BRR sample's data.
The loop start point is indicated in the wavelength image by a vertical gray line.</description>
        </tooltip>
      </Samples>
      <SPCs form="SPCEditor" icon="icons/openSPCs.gif" title="SPCs" type="subwindow">
        <description>Three types of SPCs exist in SMRPG: SPC Music Tracks, Event Sound FX, and Battle Sound FX.</description>
        <tooltip control="soundType">
          <title>SPC Type</title>
          <description>Select the type of SPC to load.</description>
        </tooltip>
        <tooltip control="trackNum" control2="trackName">
          <title>SPC Index</title>
          <description>Select the SPC to load.</description>
        </tooltip>
        <tooltip control="groupBoxI">
          <title>Instruments</title>
          <description>A collection of instruments used by the SPC. Only music tracks can have a collection of instruments, up to 20 maximum. Each instrument is assigned a sample and base volume. Remember that the instruments assigned in the track commands must be in this collection, otherwise they'll be muted. Changing an instrument in this list will automatically synchronize all sample set commands in the channel tracks that use the instrument's sample. Thus manual updating in the track editor is unnecessary.</description>
        </tooltip>
        <tooltip control="delayTime">
          <title>Delay Time</title>
          <description>Higher values set greater distances between each echo.</description>
        </tooltip>
        <tooltip control="decayFactor">
          <title>Decay Ratio</title>
          <description>Higher values create a longer lasting echo.</description>
        </tooltip>
        <tooltip control="echo">
          <title>Echo Volume</title>
          <description>The intensity, or strength, of the echo. Higher values mean stronger echoes.</description>
        </tooltip>
        <tooltip control="percussives">
          <title>Percussives Collection</title>
          <description>The percussives collection is a collection of percussive instruments, each assigned a sample, pitch, volume, and a different pitch index. Since there are only 12 pitches (C to A#) only up to 12 percussives can logically be used, and all 12 must have different pitch indexes.</description>
        </tooltip>
        <tooltip control="percussivePitchIndex">
          <title>Pitch Index</title>
          <description>This is not the actual pitch of the percussive (which is below) but the pitch index assigned to it. If a channel is in percussive mode, then the notes will play an instrument in the percussive list based on the note's pitch corresponding to the percussive's pitch index.
Example: if a percussive has a pitch index of B, then for any B notes played while in percussive mode it will play that percussive's sample.
All percussives in the collection must have different pitch indexes.</description>
        </tooltip>
        <tooltip control="percussivePitch">
          <title>Pitch</title>
          <description>Whenever a percussive is played, this is the fixed pitch it will play at. The percussive's pitch cannot be changed during the song. If you want to play the same percussive instrument at different pitches, you must have more than one percussive in the collection with the same sample but different pitch index.</description>
        </tooltip>
        <tooltip control="percussiveVolume">
          <title>Volume</title>
          <description>Base volume of the percussive.</description>
        </tooltip>
        <tooltip control="percussiveBalance">
          <title>Speaker Balance</title>
          <description>The percussive's balance between the two speakers.</description>
        </tooltip>
        <tooltip control="newCommands">
          <title>Select Command</title>
          <description>Select from a list of SPC commands to insert, with the button on the right.</description>
        </tooltip>
        <SPCTracks icon="" title="SPC Music Tracks" type="section">
          <description>SPC music tracks are the songs used in the game. The instruments box contains a list of instruments which are given a sample and a base volume. These are the instruments accessed by the track data to play back the sequence of notes heard in a song. Any instrument which accesses a sample index higher than 15, however, must be set in a channel and must be in this list to be heard at all, therefore changing an instrument in the track editor box to the right to an instrument NOT in this box will create nothing but silence for that channel.</description>
        </SPCTracks>
        <SoundFX icon="" title="Sound FX" type="section">
          <description>Event and battle sound effects use the exact same types of commands as SPCs, except they only use two channels (6 and 7), have no instrument or percussive collections and can only use samples 0-15 with some exceptions. Those exceptions are if a sample index higher than 15 is set in a sound effect's track data, that instrument must be in the currently playing song's instrument collection to be heard at all. Examples include the Tadpole Pond steel drum note sounds on the staff, or jumping on the organ in the sanctuary.</description>
        </SoundFX>
        <ChannelTracks icon="" title="Channel Tracks" type="section">
          <description>Channel track commands, in simple terms, are the notes and note properties of a song. They are displayed on a channel-by-channel basis in the channel track editor. Music tracks can have anywhere between 0 and 8 active channels, while sound effects only two. Channels run in syncronization with one another. Each channel's commands run in straight line, in similar nature to the commands in other script editors.</description>
        </ChannelTracks>
        <ScoreViewer icon="icons/scoreView.gif" title="Score Viewer" type="section">
          <description>The score viewer, only functionable with the music tracks, displays the channel tracks in notation form. Notes and rests can be clicked to jump to the corresponding command in the track editor on the right. Sample and percussive mode changes are indicated by icons, and notes in percussive mode are identifiable by the x note heads. Staff attributes like time signatures, note spacing, and others are user-defined but do not affect the ROM if modified. Repeats viewable in the track editor are not incorporate in the score viewer (ie. no repeat bars), so a sequence of notes within a repeat loop is simply drawn multiple times.</description>
          <tooltip control="staffHeightSV">
            <title>Staff Height</title>
            <description>Change the height of the staffs in the score viewer, in pixels. Use larger values to view notes beyond the visible bounds.</description>
          </tooltip>
          <tooltip control="timeBeatsSV">
            <title>Time Signature: beats per measure</title>
            <description>In the traditional manner of time signatures, this is the number of beats per measure.</description>
          </tooltip>
          <tooltip control="timeValueSV">
            <title>Time Signature: note value</title>
            <description>The note value is the beat length of each note. A time signature of 3/8 means a measure's length is equivalent to three 8th notes. 13/4 is thirteen quarter notes per measure. The measure lines in the score view are drawn based on these values.</description>
          </tooltip>
          <tooltip control="noteSpacingSV">
            <title>Note Spacing %</title>
            <description>The spacing between each note by %. Each type of beat has a number of default ticks. A whole note is 192 ticks, so the score viewer sets the distance from a whole to 192 pixels. A quarter note is 48 ticks, thus quarter notes are 48 pixels apart. Changing the note spacing to 50% for example would draw a distance of 96 pixels between whole notes and 24 pixels between quarters.</description>
          </tooltip>
          <tooltip control="showRests">
            <title>Show Rests</title>
            <description>Show or hide the rests, if they are cluttering up the staff and obstructing the view.</description>
          </tooltip>
        </ScoreViewer>
        <ScoreWriter icon="icons/scoreWriter.gif" title="Score Writer" type="section">
          <description>Write your own basic scores using the notes and rests provided in the toolstrip. This is completely separate from the ROM, and does not interact with the ROM in any way other than to export the custom made score to separate .txt files for each channel and import those into an SPC's channel track.
Notes/rests can be drawn, erased, and the orientation can be changed in the same nature as the score viewer (staff height, time signature, etc). This is a fairly basic feature, which can only insert the beats used by SMRPG and no notes with a fixed durations/tick length. Most useful is its ability to undo/redo any action and save/export in three formats.</description>
        </ScoreWriter>
      </SPCs>
      <FAQ title="AUDIO EDITOR">
        <entry>
          <question>Is there any way to add music to a SMRPG Rom?</question>
          <answer>Not in Lazy Shell; you can only modify the audio samples used by the music SPCs and the SPC instruments and tracks, not add new ones.</answer>
        </entry>
        <entry>
          <question>Can I add sound effects?</question>
          <answer>Sound effects are also SPCs that use audio samples. Therefore the answer is no, like the above question. Some sound effects are empty which could be used to "add" custom sounds.</answer>
        </entry>
        <entry>
          <question>I changed the instrument but it's muted in-game!</question>
          <answer>If the instrument is included among the percussives, you'll have to change the instrument index for the percussive as well.</answer>
        </entry>
        <entry>
          <question>I modified some sound effects, but I can't hear any changes.</question>
          <answer>If you're loading from a save state outside of Lazy Shell, then the audio memory contained in the save state won't have the changes you made. This is because during sound effect playback the data is read from the memory instead of directly from the ROM, and all sound effect data is stored to memory when the ROM starts. The previewer, though, will let you hear the changes since the modified data is stored into the preview save state's audio memory.</answer>
        </entry>
        <entry>
          <question>I imported an MML script but the channels are out of sync.</question>
          <answer>Sometimes you must delete the first rests contained in the last 7 channels.</answer>
        </entry>
        <entry>
          <question>How do I transfer my work in the score writer to the SPC?</question>
          <answer>Export the staffs as scripts, then import the scripts into each of the individual channels. You'll have to manually add non-note commands in the track editor, like beat durations, volumes, etc.</answer>
        </entry>
      </FAQ>
    </Audio>
    <Battlefields form="Battlefields" icon="icons/mainBattlefields.gif" title="Battlefields" type="editor">
      <description>A battlefield is simply a background image used in a battle. More technically, it is a tileset and NOT a tilemap: it contains only one layer and is arranged on an 8x8 tile basis. Battlefields can have between 1 and 4 quadrants, most of which only have 1.</description>
      <tooltip control="battlefieldNum" control2="battlefieldName">
        <title>Battlefield Index</title>
        <description>Select the battlefield to load.</description>
      </tooltip>
      <tooltip control="battlefieldGFXSet1Num">
        <title>GFX Set 1</title>
        <description>The 1st graphic set in the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldGFXSet2Num">
        <title>GFX Set 2</title>
        <description>The 2nd graphic set in the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldGFXSet3Num">
        <title>GFX Set 3</title>
        <description>The 3rd graphic set in the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldGFXSet4Num">
        <title>GFX Set 4</title>
        <description>The 4th graphic set in the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldGFXSet5Num">
        <title>GFX Set 5</title>
        <description>The 5th graphic set in the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldTilesetNum">
        <title>Tileset</title>
        <description>The tileset used by the current battlefield.</description>
      </tooltip>
      <tooltip control="battlefieldPaletteSetNum">
        <title>Palette Set</title>
        <description>The palette set is a set of 7 palettes that comprise all of the colors that the battlefield image uses.</description>
      </tooltip>
      <FAQ />
    </Battlefields>
    <Dialogues form="Dialogues" icon="icons/mainDialogues.gif" title="Dialogues" type="editor">
      <description>Dialogues are the game's script. Dialogues must be triggered by an event script command to show. Generally, most dialogues are "assigned" to an NPC, ie. the NPC has an event # assigned to it, wherein there is a command to display a specific dialogue # in that event script. The first few dialogues are by default used as the message / caption that is shown at the top of some levels.
To find a dialogue, use the text field "Find...". Dialogues have a number of commands and characters which can be inserted either using the toolstrip on the right or through font table's right-click menu item "Insert into dialogue".
The dialogues editor contains two subwindows: battle dialogues and fonts.</description>
      <tooltip control="dialogueNum">
        <title>Dialogue Index</title>
        <description>Select the dialogue to edit by number.</description>
      </tooltip>
      <tooltip control="textView">
        <title>Text View</title>
        <description>Enable or disable text viewing in the dialogue textbox. This is for easily identifying what the numerals in [] mean.</description>
      </tooltip>
      <tooltip control="dialogueTextBox">
        <title>Dialogue</title>
        <description>Edit the current dialogue.
To insert symbols, simply right-click the symbol in the dialogue font table and click "Insert into dialogue".</description>
      </tooltip>
      <tooltip control="toolStrip7">
        <title>Compression Table</title>
        <description>A compression table is a set of texts which are assigned a single byte when saved to ROM to conserve dialogue space. These are typically the most common words or parts of words present in all dialogues, hence saving the most space possible. Beware that changing these may either increase or decrease the number of free bytes. Unless translating to another language, it's best not to change any of these except for the last two labelled "Booster".</description>
      </tooltip>
      <BattleDialogues form="BattleDialogues" icon="icons/openBattleDialogues.gif" title="Battle Dialogues" type="subwindow">
        <description>Battle dialogues are single-line texts displayed only in battle, and must be triggered by a battle script or animation script command to be shown. They use the same "dialogue" font table as the main overworld dialogues, but have a limited number of non-symbol related commands, however, compared to the overworld dialogues. These commands can be inserted with toolstrip on the right, while special symbols are insertable using the font table's right-click menu.</description>
        <tooltip control="battleDialogueNum">
          <title>Battle Dialogue Index</title>
          <description>Select the battle dialogue to edit by number.</description>
        </tooltip>
        <tooltip control="battleDialogueTextBox">
          <title>Battle Dialogue</title>
          <description>Edit the current battle dialogue. To insert symbols, simply right-click the symbol in the font table and click "Insert into battle dialogue". Symbols can be manually defined in the text using [] brackets, wherein the symbol's index in the font table is placed.</description>
        </tooltip>
      </BattleDialogues>
      <Fonts form="Fonts" icon="icons/openFonts.gif" title="Fonts" type="subwindow">
        <description>4 font tables can be selected:
"Menu" font is used in the overworld menu.
"Dialogue" font is used in overworld and battle dialogue.
"Description" font is used in item and spell descriptions in the overworld menu.
"Triangles" are the option triangles used in overworld dialogue.
It must be noted that each font table has its OWN keystroke table. If you are translating the game's text, remember that if writing special characters like á, é, etc. into an element's name, description, etc. you must assign a keystroke value to the font letter you want to associate it with--for ALL three font tables.
Only the "dialogue" font allows the user to insert symbols into the overworld or battle dialogue through the right-click menu.</description>
        <tooltip control="fontType">
          <title>Font Table</title>
          <description>Select the font table to load.</description>
        </tooltip>
        <tooltip control="fontWidth">
          <title>Width</title>
          <description>The width of the character, in pixels, as drawn in-game. Pixels beyond the boundaries of the width will NOT display in the dialogue.</description>
        </tooltip>
        <tooltip control="pictureBoxFontTable">
          <title>Font Table</title>
          <description>Click a character to edit it in the paint box on the right.</description>
        </tooltip>
        <tooltip control="fontWidth">
          <title>Width</title>
          <description>The width, in pixels, of the font letter.</description>
        </tooltip>
        <tooltip control="charKeystroke">
          <title>Key</title>
          <description>The key assigned to the font letter. If drawing letters with accents, diacritic marks, etc. change its key to that letter before beginning a translation.</description>
        </tooltip>
        <NewFontTable form="NewFontTable" icon="icons/openNewFontTable.gif" title="New Font Table" type="subeditor">
          <description>The user can generate a new font table based on any font installed on their system, as well as change certain properties of the table before generating the image.</description>
          <tooltip control="fontFamily">
            <title>Font Family</title>
            <description>Select a system-installed font to use in the new font table.</description>
          </tooltip>
          <tooltip control="fontSize">
            <title>Font Size</title>
            <description>Set the size of the font to use in the new font table.</description>
          </tooltip>
          <tooltip control="characterHeight">
            <title>Height</title>
            <description>Set the height of all characters in the new font table.</description>
          </tooltip>
          <tooltip control="shiftTableUp">
            <title>Shift Table Up</title>
            <description>Move the new font table up 1 pixel.</description>
          </tooltip>
          <tooltip control="shiftTableDown">
            <title>Shift Table Down</title>
            <description>Move the new font table down 1 pixel.</description>
          </tooltip>
          <tooltip control="shiftTableLeft">
            <title>Shift Table Left</title>
            <description>Move the new font table left 1 pixel.</description>
          </tooltip>
          <tooltip control="shiftTableRight">
            <title>Shift Table Right</title>
            <description>Move the new font table right 1 pixel.</description>
          </tooltip>
          <tooltip control="resetTable">
            <title>Reset Table</title>
            <description>Reset the new font table's position.</description>
          </tooltip>
          <tooltip control="autoSetWidths">
            <title>Auto-set Widths</title>
            <description>The width of each character will be automatically set based on a used pixel at the farthest right.</description>
          </tooltip>
          <tooltip control="padding">
            <title>Pad</title>
            <description>This value will be added to the automatically set width of each character in the newly created font table.</description>
          </tooltip>
          <tooltip control="generateFontTableImage">
            <title>Generate Image</title>
            <description>Generate the font table to an image and set as the new font table.</description>
          </tooltip>
        </NewFontTable>
      </Fonts>
      <FAQ title="DIALOGUES EDITOR">
        <entry>
          <question>I need some extra letters that my native language uses.</question>
          <answer>Use the empty slots in the font table. Letters that have accents or other diacritic marks can be drawn onto the new letters or imported as a new font table.</answer>
        </entry>
        <entry>
          <question>How do I edit the names in the Level-up bonus screen?</question>
          <answer>This is found by selecting "Battle messages" in the battle dialogues editor.</answer>
        </entry>
      </FAQ>
    </Dialogues>
    <Effects form="Effects" icon="icons/mainEffects.gif" title="Effects" type="editor">
      <description>The spell effect editor has two subwindows: molds and sequences.
A spell effect is not the entire spell animation itself, but an animation sequence used in spell animations. Spell animation scripts can use more than one different spell effect, for example, the "Boulder" spell uses spell effect 26 (boulder) and 53 (black flash).</description>
      <tooltip control="number" control2="name">
        <title>Effect Index</title>
        <description>Select the spell effect to load.</description>
      </tooltip>
      <tooltip control="imageNum">
        <title>Image</title>
        <description>The image # of the currently selected spell effect refers to the set of properties that designate the raw graphics and palette set to use.
Anything in the "Image Properties" box is part of the spell effect's image.</description>
      </tooltip>
      <tooltip control="e_paletteIndex">
        <title>Palette</title>
        <description>The index of the palette in the palette set the spell effect uses. This is mostly used for individual spell effects that use the same image (thus, the same palette set) but have a different individual palette, such as the star rain and black star rain.</description>
      </tooltip>
      <tooltip control="xNegShift">
        <title>X</title>
        <description>The X shift is the number of pixels to shift the spell effect animation to the left.</description>
      </tooltip>
      <tooltip control="yNegShift">
        <title>Y</title>
        <description>The Y shift is the number of pixels to shift the spell effect animation up.</description>
      </tooltip>
      <tooltip control="e_paletteSetSize">
        <title>Palette Size</title>
        <description>The size of the palette in bytes. The total number of palettes in the spell effect image's palette set equals the size divided by 32.</description>
      </tooltip>
      <tooltip control="e_graphicSetSize">
        <title>Graphic Size</title>
        <description>The size of the raw graphics in bytes (hexadecimal). Every 0x20 bytes is one or two 8x8 tiles.</description>
      </tooltip>
      <tooltip control="e_codec">
        <title>BPP Codec</title>
        <description>The codec refers to how the graphics are read by the game engine. 4bpp uses up to 16 colors total, while 2bpp only uses 4 colors total.</description>
      </tooltip>
      <EffectMolds form="EffectMolds" icon="icons/mainEffects.gif" title="Molds" type="subwindow">
        <description>Effect molds are basically a collection of tilemaps, each drawn from the same tileset (on the right) much in the same nature as levels, although just one layer.</description>
        <tooltip control="e_moldWidth">
          <title>Width</title>
          <description>The width of the spell effect's animation molds, in 16x16 tiles.</description>
        </tooltip>
        <tooltip control="e_moldHeight">
          <title>Height</title>
          <description>The height of the spell effect's animation molds, in 16x16 tiles.</description>
        </tooltip>
        <tooltip control="e_tileSetSize">
          <title>Size</title>
          <description>The size of the tileset in hexadecimal bytes. The total number of tiles in the spell effect image's tileset equals the size (in hexadecimal) divided by 8.</description>
        </tooltip>
        <tooltip control="e_molds">
          <title>Mold Collection</title>
          <description>The collection of molds used by the spell effect's animation.</description>
        </tooltip>
      </EffectMolds>
      <EffectSequences form="EffectSequences" icon="icons/openEffectSequences.gif" title="Sequences" type="subwindow">
        <description>Each effect can have only one sequence, unlike sprites, and is a collection of frames. Each frame is assigned a mold from the mold collection above and a duration, creating an animation that can be played back in the image to the right.</description>
        <tooltip control="listBoxFrames">
          <title>Frame Collection</title>
          <description>The collection of frames used by the spell effect animation.</description>
        </tooltip>
        <tooltip control="frameMold">
          <title>Mold</title>
          <description>The mold used by the currently selected frame. This value is based on the collection of molds in the molds editor above.</description>
        </tooltip>
        <tooltip control="duration">
          <title>Duration</title>
          <description>The duration of the currently selected frame, or how long the frame will pause before the next frame starts. This value refers to the # of frames based on a 60-frames-per- second unit.</description>
        </tooltip>
      </EffectSequences>
      <FAQ />
    </Effects>
    <EventScripts form="EventScripts" icon="icons/mainEventScripts.gif" title="Event Scripts" type="editor">
      <description>The game basically progresses by event scripts, outside of battle. Everything you see happening in a level that isn't controlled by the player (ie. Mario) is executed by the commands in an event script. Scripts are usually initialized by a trigger in the level, when Mario comes into contact with either an event field or an NPC. An event script is also automatically initialized every time when entering a new level.
An event script is comprised of 0 or more commands, of which fall into two categories: event or action queue commands. Event commands generally alter or read things like memory, tell the script to jump to an address in the event data, etc. All of the options appear in each event command category in the category list on the top-right. Action queue commands only appear in an action queue for a specific NPC or object, such as Mario or the screen. These commands are usually coord-shifting and sequence playback commands for NPCs and other objects.</description>
      <tooltip control="eventName">
        <title>Script Type</title>
        <description>Select the type of script to load.</description>
      </tooltip>
      <tooltip control="eventNum">
        <title>Script Index</title>
        <description>Select the event or action script to edit by number.</description>
      </tooltip>
      <tooltip control="gotoAddr">
        <title>Goto Address</title>
        <description>Jump to the command at or closest to the given address.</description>
      </tooltip>
      <tooltip control="commandTree">
        <title>Script Commands</title>
        <description>The list of commands (aka "command tree") in the current script. Check the commands to delete, cut, or copy (using the toolstrip below), or double-click the commands to edit them in the box on the lower-right.</description>
      </tooltip>
      <tooltip control="buttonInsertEvent">
        <title>Insert Command</title>
        <description>Insert a new command after the selected command in the command list to the left.</description>
      </tooltip>
      <tooltip control="buttonApplyEvent">
        <title>Apply Changes</title>
        <description>Apply all changes made to the edited command.</description>
      </tooltip>
      <tooltip control="button1">
        <title>Action</title>
        <description>Check this if you want to insert an action queue command into the currently selected command. Leave unchecked to insert an event command after the currently selected command.</description>
      </tooltip>
      <tooltip control="categories_es">
        <title>Select category</title>
        <description>Select a category of event scripts, then choose from the commands in that category to create a new one. Some categories may need further explanation for the novice user.
"Objects" ie. action queues, will provide a list of objects to choose from for creating an action queue. These are mostly NPC #'s corresponding to the numbers in the NPC collection seen in the levels editor, but include other commonly used objects such as Mario or the screen layers.
"Jump to" commands will jump to an address within the current bank. So if the event script command offsets start with $1E, a jump to command with an address of $78FE will jump to $1E78FE. You cannot jump to an address outside of the bank, but you can jump to any one of the 4096 events using the commands in the "Events" category.
"Memory" and "Memory $7000" commands change and read values/bits stored in memory addresses. "Memory" commands generally read or modify bits in memory addresses $7045 and over. "Memory $7000" commands generally have fewer limits in that they are commonly used to check anything not associated with event bits, and are read/written on a byte basis instead of the bit basis $7045+ addresses are used for.
"Return" simply ends the script or the entire hierarchy of scripts.</description>
      </tooltip>
      <tooltip control="categories_aq">
        <title>Action Queue Categories</title>
        <description>Select a category of action queue commands, then choose from the commands in that category to create a new one. Some categories may need further explanation for the novice user.
"Properties" commands can modify the object's sprite attributes (several are associated with the NPC attributes box in the levels editor).
"Sprite sequence" commands can play back a sprite sequence or set to a single mold corresponding to the molds and sequences in the sprites editor.
"Shift" commands move the object on either a pixel or isometric basis, either by a given unit or by single unit.
"Jump to" commands will jump to an address within the current bank. So if the event script command offsets start with $1E, a jump to command with an address of $78FE will jump to $1E78FE. You cannot jump to an address outside of the bank, and jump to command inside an action queue should not jump outside of the queue.
"Memory" and "Memory $700C" commands change and read values/bits stored in memory addresses. "Memory" commands generally read or modify bits in memory addresses $7045 and over. "Memory $700C" commands generally have fewer limits in that they are commonly used to check anything not associated with event bits, and are read/written on a byte basis instead of a bit basis like $7045+ addresses.
"Return" simply ends the action queue or the entire script.</description>
      </tooltip>
      <tooltip control="commands">
        <title>Commands</title>
        <description>Select a command from the list of commands contained in the currently selected category above.</description>
      </tooltip>
      <tooltip control="labelBytesLeft">
        <title>Bytes Left</title>
        <description>The remaining bytes available in the current bank. If the number here is negative, none of the scripts in the bank will save. The three banks ($1E,$1F,$20) have different amounts of free space.</description>
      </tooltip>
      <tooltip control="eventHexText">
        <title>Hex</title>
        <description>The raw hex data of the currently select event command in the command tree.</description>
      </tooltip>
      <ActionScripts title="Action Scripts" type="section">
        <description>Action scripts are the behaviors of NPCs and other objects in a level. The random movements of townspeople are infinitely looping action scripts. The behaviors of monsters in a level are all action scripts.
Action scripts are basically the same as action queues found in event scripts, except they can only contain action commands and aren't "triggered" like event scripts are. They're set and usually assigned to NPCs in the levels editor, but an NPC's action script can be changed within an event script.</description>
      </ActionScripts>
      <FAQ title="EVENT SCRIPTS EDITOR">
        <entry>
          <question>I want to change an NPC's sprite's mold or sequence.</question>
          <answer>This must be done in an action queue. First insert an action queue with "Objects" &gt; "Action queue...". Select the NPC from the menu. Then add the command "Sprite sequence" &gt; "Seq playback, sprite +=".</answer>
        </entry>
        <entry>
          <question>Can I make an NPC change colors/palettes?</question>
          <answer>This must be done in an action queue, using one of three types of commands. In the "Palette" category, choose one of the commands to shift the NPC's sprite's palette index forward. View the palettes using the sprites editor.</answer>
        </entry>
        <entry>
          <question>Is there a default event script that is always running?</question>
          <answer>Not by default, but you can point the level's event script to a separate synchronous event that contains the memory-checking commands you want to run.</answer>
        </entry>
        <entry>
          <question>How do I make a custom ending?</question>
          <answer>You can't edit the default ending sequence with Lazy Shell, but you can write a custom event script to run instead as long as the Smithy battle sequence doesn't run.</answer>
        </entry>
        <entry>
          <question>How do I change a character's animation during a dialogue?</question>
          <answer>Make sure the "Run dialogue: whatever" command has the dialogue property "asynchronous" unchecked so any following commands that would change a sprite's animation sequence or whatever will run while the dialogue is playing. Use the "Pause script, resume on next dlg page" commands to pause the script after the animation is complete.</answer>
        </entry>
        <entry>
          <question>I told my script to jump to index $11C, #284.</question>
          <answer>"Jump to $whatever" commands do NOT jump to indexes, they jump to addresses as seen in the [] to the left of each command.</answer>
        </entry>
        <entry>
          <question>How do I make _____ the only active party member?</question>
          <answer>Through an event script use the command "Add/remove party member" in the "Party members" category.</answer>
        </entry>
        <entry>
          <question>When I press The X button the inventory menu does not appear.</question>
          <answer>It must be made accessible using one of the "Joypad enable" commands in the "Joypad" category.
</answer>
        </entry>
      </FAQ>
    </EventScripts>
    <Formations form="FormationsEditor" icon="icons/mainFormations.gif" title="Formations" type="editor">
      <description>This editor has 2 subwindows: NewFormations and packs.</description>
      <Formations form="Formations" icon="icons/mainFormations.gif" title="Formations" type="subwindow">
        <description>A formation is a set of monsters encountered in battle. A formation is chosen when a battle is called through either an event script or through the property of an NPC in a level.</description>
        <tooltip control="formationNameList" control2="formationNum">
          <title>Formation Index</title>
          <description>Select the formation to load.</description>
        </tooltip>
        <tooltip control="formationBattleEvent">
          <title>Event</title>
          <description>The battle event sequence that plays at the start of the battle. These can be edited in the animations editor.</description>
        </tooltip>
        <tooltip control="formationUnknown">
          <title>??????</title>
          <description>Unknown formation property; it is recommended to leave it alone. Only the Bowser, Kinlink formation has this value set by default.</description>
        </tooltip>
        <tooltip control="formationMusic">
          <title>Type</title>
          <description>The music assigned to the formation that plays in battle.
The music can be selected from 8 indexes or set to {CURRENT}, which continues to play the current music track in the overworld when the battle begins. To edit the actual track that is assigned to the index, change the "Track" property below.</description>
        </tooltip>
        <tooltip control="musicTrack">
          <title>Track</title>
          <description>The music track assigned to the currently selected "Type" to the left. Note that changing this value will affect the music for all formations that use the same "Type" as the currently selected formation.</description>
        </tooltip>
        <tooltip control="formationCantRun">
          <title>Can't Run</title>
          <description>If checked, it is impossible to run away from the formation in battle.</description>
        </tooltip>
        <tooltip control="bytes">
          <title>Monster Number</title>
          <description>A monster in the formation, by number.</description>
        </tooltip>
        <tooltip control="names">
          <title>Monster Name</title>
          <description>A monster in the formation, by name.</description>
        </tooltip>
        <tooltip control="coordX">
          <title>X</title>
          <description>The X coord, in pixels, of a monster in the formation.</description>
        </tooltip>
        <tooltip control="coordY">
          <title>Y</title>
          <description>The Y coord, in pixels, of a monster in the formation.</description>
        </tooltip>
        <tooltip control="use">
          <title>Use</title>
          <description>The monsters enabled in the formation. This must be checked for a monster that is to have any presence in the battle at all.
It is not recommended to have more than 6 monsters enabled in one formation, due to VRAM capacity.</description>
        </tooltip>
        <tooltip control="hide">
          <title>Hide</title>
          <description>The monsters not present in the formation at the start of the battle. Monsters with this property checked can be later called to battle through the battle-script.</description>
        </tooltip>
        <tooltip control="pictureBoxFormation">
          <title>Formation Image</title>
          <description>Click and drag the monsters in the formation.
The actual boundaries of the image are beyond the visible boundaries as seen here and in-game, thus a monster coordinate of 0,0 or 255,255 may hide it completely.</description>
        </tooltip>
        <tooltip control="battlefieldName">
          <title>BG</title>
          <description>Select the battlefield background to preview the formation in. This is only for preview purposes; changing this will have no effect on the ROM.</description>
        </tooltip>
      </Formations>
      <FormationPacks form="FormationPacks" icon="icons/openPacks.gif" title="Packs" type="subwindow">
        <description>A pack is a set of three formations to either randomly or selectively choose from when a battle is called, through an event script or through an the property of an NPC in a level.</description>
        <tooltip control="packNum">
          <title>Pack Index</title>
          <description>Set the formation pack to edit by number.</description>
        </tooltip>
        <tooltip control="packFormation1">
          <title>Formation 1</title>
          <description>The 1st formation in the pack.</description>
        </tooltip>
        <tooltip control="packFormation2">
          <title>Formation 2</title>
          <description>The 2nd formation in the pack.</description>
        </tooltip>
        <tooltip control="packFormation3">
          <title>Formation 3</title>
          <description>The 3rd formation in the pack.</description>
        </tooltip>
        <tooltip control="packFormationButton1">
          <title>Load</title>
          <description>Load the 1st formation into the formation editor.</description>
        </tooltip>
        <tooltip control="packFormationButton2">
          <title>Load</title>
          <description>Load the 2nd formation into the formation editor.</description>
        </tooltip>
        <tooltip control="packFormationButton3">
          <title>Load</title>
          <description>Load the 3rd formation into the formation editor.</description>
        </tooltip>
        <tooltip control="richTextBox2">
          <title>Pack 1 Formation Collection</title>
          <description>The list of monsters in the 1st formation.</description>
        </tooltip>
        <tooltip control="richTextBox3">
          <title>Pack 2 Formation Collection</title>
          <description>The list of monsters in the 2nd formation.</description>
        </tooltip>
        <tooltip control="richTextBox4">
          <title>Pack 3 Formation Collection</title>
          <description>The list of monsters in the 3rd formation.</description>
        </tooltip>
      </FormationPacks>
      <FAQ title="FORMATIONS EDITOR">
        <entry>
          <question>Some of the monsters in my formation are glitchy or discolored.</question>
          <answer>Too many monsters or having several large monsters in the same formation will overload the game's video memory and start smothering the graphics of other monsters and sprites. Do not put more than 6 monsters in a formation.</answer>
        </entry>
        <entry>
          <question>My monster inexplicably changes palettes in battle.</question>
          <answer>See the previous question.
</answer>
        </entry>
      </FAQ>
    </Formations>
    <Items form="ItemsEditor" icon="icons/mainItems.gif" title="Items" type="editor">
      <description>This editor has 2 subwindows: items and shops.</description>
      <Items form="Items" icon="icons/mainItems.gif" title="Items" type="subwindow">
        <description>Items include both items usable in battle and the overworld menu, as well as all forms of equipment and special items. Their properties are applied to either in-battle usage, overworld usage or both.</description>
        <tooltip control="itemNum" control2="itemName">
          <title>Item Index</title>
          <description>Select the item to load.</description>
        </tooltip>
		<tooltip control="textBoxItemName">
			<title>Item Name</title>
			<description>The item's displayed name in all menus.</description>
		</tooltip>
        <tooltip control="toggleSortedList">
          <title>Sort List Options</title>
          <description>Several options to sort the item list in all menus. Settings carry over to other editors.</description>
        </tooltip>
        <tooltip control="itemNameIcon">
          <title>Icon</title>
          <description>The item's icon as seen preceding its displayed name in all menus.</description>
        </tooltip>
        <tooltip control="itemCoinValue">
          <title>Coin Value</title>
          <description>The amount the item costs in a shop. Final costs varies depending on the "Purchase Discounts" properties of the shop selling the item. The resale value of the item is exactly half the "Coin Value" (ie. how many coins you receive from selling it in a shop).
NOTE: to make item a "Special Item", set coin value to 0.</description>
        </tooltip>
        <tooltip control="itemSpeed">
          <title>Speed</title>
          <description>The wearer's total speed is increased by this amount. This property is ignored for non-equipment items.</description>
        </tooltip>
        <tooltip control="itemAttackRange">
          <title>Attack Range</title>
          <description>The attack range is the range of damage, plus and minus the "Attack" value, done to the target. The final damage will be a random value chosen from the "Attack" value plus and minus the "Attack Range" value. Example: if the "Attack" is 50, and the attack range is 25, the final damage could be anywhere from 25 to 75. This property is ignored for non-weapon items.</description>
        </tooltip>
        <tooltip control="itemPower">
          <title>Infliction Amount</title>
          <description>The exact damage, heal or increment amount inflicted by an item. This property will heal, damage or increment a property depending on the value of "Inflict Function". Example: Flower Box has an "Infliction Amount" of 5 and an "Inflict Function" of Raise Max FP, which means it increments the Max FP by 5. Ice Bomb has an "Infliction" "Amount" of 140, which means it does 140 base damage.</description>
        </tooltip>
        <tooltip control="itemAttack">
          <title>Attack</title>
          <description>The wearer's total Attack Power is increased by this amount. This property is ignored for non-equipment items.</description>
        </tooltip>
        <tooltip control="itemDefense">
          <title>Defense</title>
          <description>The wearer's total Defense Power is increased by this amount. This property is ignored for non-equipment items.</description>
        </tooltip>
        <tooltip control="itemMagicAttack">
          <title>Magic Attack</title>
          <description>The wearer's total Magic Attack Power is increased by this amount. This property is ignored for non-equipment items.</description>
        </tooltip>
        <tooltip control="itemMagicDefense">
          <title>Magic Defense</title>
          <description>The wearer's total Magic Defense Power is increased by this amount. This property is ignored for non-equipment items.</description>
        </tooltip>
        <tooltip control="itemType">
          <title>Item Type</title>
          <description>The type of item will determine whether the item can be equipped, what menu inventory it appears in, etc.</description>
        </tooltip>
        <tooltip control="itemAttackType">
          <title>Effect Type</title>
          <description>The effect type, ie. whether or not the item will inflict, nullify or protect against (an) effect(s).
"Protection" should only be used for equipment, such as the Super Suit which protects against all adverse effects.
"Infliction" will inflict anything under "EFFECT" on the target, or raise any stats under "STATS". Set only for items that are used in battle.
"Nullification" will remove the effects under "EFFECT" on the target, or lower the stats under "STATS". Set only for items that are used in battle.
If set to {NONE} then anything checked under "EFFECT" and "STATUS" is ignored. Likewise, this property is ignored if nothing under "EFFECT" and "STATUS" is checked.</description>
        </tooltip>
        <tooltip control="itemFunction">
          <title>Inflict Function</title>
          <description>The inflict function is only used for non-equipment items, such as the Mushroom which is set to "Restore HP" and Maple Syrup which is set to "Restore FP", or the Flower items that raise the maximum FP are set to "Raise Max FP".
Some functions read the "Infliction Amount" value to determine how much HP, FP, etc. will be restored/raised.</description>
        </tooltip>
        <tooltip control="itemElemAttack">
          <title>Inflict Element</title>
          <description>The inflict element is only used with items that typically cause damage to the target. By default, only the Fire and Ice Bomb items have this set, although any item that can cause damage will read from this.</description>
        </tooltip>
        <tooltip control="itemUsage">
          <title>Item Properties</title>
          <description>"Mortality Protection" is only used with equipment and causes all instant death attacks to always miss.
"Hide Battle Numerals" is only used with items in battle, typically those that cause 0 or 9999 damage to avoid the redundant "0" or "9999" appearing.
"Usable in Battle Menu" and "Usable in Overworld Menu" indicate whether the item can be used in and/or out of battle in the menu.
"Reusable" gives the item infinite usage, eg. the "Star Egg" can be used repeatedly and never run out. NOTE: the Lucky Jewel can has this set, but the CPU reads a RAM address to limit the usage to 10 times. That cannot be changed here.</description>
        </tooltip>
        <tooltip control="textBoxItemDescription">
          <title>Description</title>
          <description>The item description as it appears in the lower-left corner of the overworld menu when the cursor is on the item.</description>
        </tooltip>
        <tooltip control="itemStatusEffect">
          <title>Effect &lt;. . . .&gt;</title>
          <description>The effect inflicted, protected against or nullified on a target. 
Example: Red Essence inflicts Invincible on the target. Super Suit protects against all effects (except Invincible). Able Juice nullifies all effects (except Invincible).
These properties are used based on the value for "Effect Type".</description>
        </tooltip>
        <tooltip control="itemElemNull">
          <title>Element Nullification</title>
          <description>All attacks with the following checked elemental properties will always cause 0 damage to the wearer of the item. This property only applies to equipment.</description>
        </tooltip>
        <tooltip control="itemElemResist">
          <title>Element Resistance</title>
          <description>All attacks with the following checked elemental properties will halve the damage to the wearer of the item. This property only applies to equipment.</description>
        </tooltip>
        <tooltip control="itemStatusChange">
          <title>Status &lt;. . . .&gt;</title>
          <description>The status of a target is either lowered or raised by 50%, depending on the value for "Effect Type". If the value for "Effect Type" is set to "Infliction" then the target's stats will be raised 50%. If "Effect type" is set to "Nullification" then the target's stats will be lowered 50%.
Example: Power Blast by default raises the target's Attack and Magic Attack power by 50% (eg. if the attack and/or defense power of the target is 100, then it becomes 150). If the item is equipment, then the wearer's stats (in-battle) will be raised/lowered 50%. If the item is a usable item in- battle, then the target's stats will be raised/lowered 50%.</description>
        </tooltip>
        <tooltip control="itemWhoEquip">
          <title>Who Can Equip</title>
          <description>Who can equip the item. Example: Lazy Shell can be equipped by all 5 characters. This property is ignored by non-equipment items.</description>
        </tooltip>
        <tooltip control="itemTargetting">
          <title>Targetting</title>
          <description>"Other Targets" will limit the target to a single ally or enemy. This must NOT be checked with "Entire Party".
"Enemy Party" will allow the spell to target the opposing party.
"Entire Party" will cause the spell to target all members of either the ally party or enemy party. This must NOT be checked with "Other Targets".
"Wounded Only" will limit the target to wounded members, ie. members with currently 0 HP.
"One Party Only" will limit the target to only one party. By default, all usable spells have this property enabled. Uncheck at your own risk!
"Not Self" will limit the target to other allies only, and the caster is untargettable. By default no spells have this checked, although the Mushroom item that turns the user into a mushroom has this property enabled.
NOTE: these properties are ignored by items that cannot be used in battle.</description>
        </tooltip>
        <tooltip control="itemCursor">
          <title>Menu Cursor Lead To</title>
          <description>The action of the cursor when the item is selected for use in the overworld menu only. Example: the Mushroom will direct the cursor to HP (ie. the HP will be restored) and the Maple Syrup will direct the cursor to FP (ie. the FP will be restored).</description>
        </tooltip>
        <tooltip control="itemCursorRestore">
          <title>Menu Cursor Limitations</title>
          <description>"Restore only if HP less than max" will restore the HP only if the target's current HP does not equal the maximum HP. "Restore only if FP less than max" likewise, does similarly for FP.</description>
        </tooltip>
        <WeaponTiming title="Weapon Timing" type="section">
          <tooltip control="lvl1TimingStart">
            <title>[1.5x</title>
            <description>The frame # from the start of the weapon animation (ie. the time the character runs up to the target and starts wielding the weapon) where the level 1 timing begins. Example: the default value for Hammer is 8. This means that if an ABXY button is pressed after 8 frames have passed from the start of the Hammer animation (ie. when Mario starts to lift the hammer) the damage is increased by at least 50%.</description>
          </tooltip>
          <tooltip control="lvl2TimingStart">
            <title>(2x</title>
            <description>The frame # from the start of the weapon animation (ie. the time the character runs up to the target and starts wielding the weapon) where the level 2 timing begins. Example: the default value for Hammer is 14. This means that if an ABXY button is pressed after 14 frames have passed from the start of the Hammer animation (ie. when Mario starts to lift the hammer) the damage is increased by at least 100% (ie. doubled).</description>
          </tooltip>
          <tooltip control="lvl2TimingEnd">
            <title>2x)</title>
            <description>The frame # from the start of the weapon animation (ie. the time the character runs up to the target and starts wielding the weapon) where the level 2 timing ends. Example: the default value for Hammer is 20. This means that if an ABXY button has NOT been pressed after 20 frames have passed from the start of the Hammer animation (ie. when Mario starts to lift the hammer) the opportunity to increase the damage by 100% (ie. doubled) is gone.</description>
          </tooltip>
          <tooltip control="lvl1TimingEnd">
            <title>1.5x]</title>
            <description>The frame # from the start of the weapon animation (ie. the time the character runs up to the target and starts wielding the weapon) where the level 1 timing ends. Example: the default value for Hammer is 38. This means that if an ABXY button has NOT been pressed after 38 frames have passed from the start of the Hammer animation (ie. when Mario starts to lift the hammer) the opportunity to time the attack for any damage increase is gone.</description>
          </tooltip>
        </WeaponTiming>
      </Items>
      <Shops form="Shops" icon="icons/openShops.gif" title="Shops" type="subwindow">
        <description>Each shop is a collection of items which appear when a shop menu is opened up, and a set of properties which affect the price and availability of the item in the collection.</description>
        <tooltip control="shopName">
          <title>Shop Index</title>
          <description>The shop to edit by label. These shop "names" are simply labels used to identify the shops. The user may change the label.</description>
        </tooltip>
        <tooltip control="shopLabel">
          <title>Shop Label</title>
          <description>The currently selected shop's label. Use this to label / identify a shop. This is not read from anywhere in the ROM and is exclusively part of the editor. Changing this will have no effect on the game.</description>
        </tooltip>
        <tooltip control="shopBuyOptions">
          <title>Shop Options</title>
          <description>"Buy with Frog Coins, one product each" is used, for example, by the "Frog Disciple" in Seaside Town. Only one of each product can be bought with Frog Coins only.
"Buy with Frog Coins" is the same as above, only the product(s) can be bought as many times as afforded. The "Frog Coin Emporium" uses this property.
"Buy only, no selling" is obvious: only buying is allowed in the shop, and items cannot be sold. Both of these properties are exactly the same, there is no difference (they are merely two separate bits that each have the same property).</description>
        </tooltip>
        <tooltip control="shopDiscounts">
          <title>Purchase Discounts</title>
          <description>These will lower the prices of the items being sold, according to their "Coin Value". For example, a Juice Bar has a discount of 50%, which means the KeroKeroCola it sells (which is normally 400 coins) is 50% less than 400 coins, ie. 200 coins. These can be combined, ie. if 50% and 25% are both checked, then the discount is 75%.</description>
        </tooltip>
      </Shops>
      <FAQ title="ITEMS EDITOR">
        <entry>
          <question>I made a DUMMY item a weapon, but it freezes when used.</question>
          <answer>That's because it doesn't have an animation script. Unfortunately you cannot create or edit scripts for the DUMMY items in the animations editor because the ROM provides no extra space for it.</answer>
        </entry>
        <entry>
          <question>Can I make new "inflict functions" for a custom item?</question>
          <answer>This involves ASM, thus you cannot do this in Lazy Shell.</answer>
        </entry>
        <entry>
          <question>In the shops, there are two "Buy only, no selling" options.</question>
          <answer>They both do exactly the same thing.
</answer>
        </entry>
      </FAQ>
    </Items>
    <Levels form="Levels" icon="icons/mainLevels.gif" title="Levels" type="editor">
      <description>The places and areas you can enter in-game. Many ROM editors also refer to these as "locations" or "rooms".
A single level is often a smaller part of a larger map, and is defined by a set of boundaries known as a "mask". Hence the appearance of multiple levels in the level image when a single level is selected. These are all explained in the individual tab descriptions below.</description>
      <tooltip control="levelName">
        <title>Level Index</title>
        <description>Select the level to edit by name. The name is based on a label assigned by either the default or user-defined label. Edit the level's name/label by clicking on the label button to the right.</description>
      </tooltip>
      <tooltip control="levelNum">
        <title>Level Index</title>
        <description>Select the level to edit by number.</description>
      </tooltip>
      <tooltip control="changeLevelName">
        <title>Level Name</title>
        <description>The level's name/label. This is a property exclusive to the editor: changing this will not affect the ROM.</description>
      </tooltip>
      <tooltip control="levelGotoEvent">
        <title>BUTTON: Event #</title>
        <description>Opens the event scripts editor and loads the event #.</description>
      </tooltip>
      <tooltip control="eventExit">
        <title>Event #</title>
        <description>The event # that initially runs when the level is first opened. If a custom level appears black or empty when opened, it's possible the event # does not contain a "fade in from black" command.</description>
      </tooltip>
      <tooltip control="eventMusic">
        <title>Music</title>
        <description>The music, or SPC track, that plays when the level is opened. This can be overridden by an event command.</description>
      </tooltip>
      <Maps title="Maps" type="section">
        <description>The "MAPS" tab contains all the properties of a level's map. The map is the collection of properties that set the tilemaps, palette, and tilesets for the level. Each level is assigned a "Map #" with all of the properties in the "MAPS" tab.
A graphic set is a loosely organized collection of 4bpp or 2bpp 8x8 tiles that are read from and organized into 16x16 tiles by a tileset. They are essentially the raw graphics used by a level.
A tileset is a set of 16x16 tiles (drawn using the graphic sets) which comprise what is essentially the set of tiles of which the final level image is drawn. Note that tilesets do not contain any raw graphics, and are merely each a series of indexes in which 8x8 tiles are chosen from the graphic sets in the map.
A tilemap is a map of 16x16 tiles (drawn using the tilesets) which comprise what is essentially the final level image (for that layer only).
Many levels use the same map as other levels, such as the Booster Tower levels, because the area which generally constitutes the viewable boundaries of the level in-game is merely a portion of the entire map, where the boundaries are often set by the Layer Mask edges. If the boundaries are not set, then often when Mario walks to the far edge of a level, another part of the level's map which constitutes a different level can be seen.</description>
        <tooltip control="mapNum">
          <title>Map #</title>
          <description>Set the level's map #.</description>
        </tooltip>
        <tooltip control="mapGFXSet1Num">
          <title>GFX Set 1</title>
          <description>The 1st graphic set in the current map.</description>
        </tooltip>
        <tooltip control="mapGFXSet2Num">
          <title>GFX Set 2</title>
          <description>The 2nd graphic set in the current map.</description>
        </tooltip>
        <tooltip control="mapGFXSet3Num">
          <title>GFX Set 3</title>
          <description>The 3rd graphic set in the current map.</description>
        </tooltip>
        <tooltip control="mapGFXSet4Num">
          <title>GFX Set 4</title>
          <description>The 4th graphic set in the current map.</description>
        </tooltip>
        <tooltip control="mapGFXSet5Num">
          <title>GFX Set 5</title>
          <description>The 5th graphic set in the current map.</description>
        </tooltip>
        <tooltip control="mapGFXSetL3Num">
          <title>L3 GFX Set</title>
          <description>The graphic set used by Layer 3 in the current map. This is in 2bpp format.</description>
        </tooltip>
        <tooltip control="mapTilesetL1Num">
          <title>L1 Tileset</title>
          <description>The tileset used by Layer 1 in the current map.</description>
        </tooltip>
        <tooltip control="mapTilesetL2Num">
          <title>L2 Tileset</title>
          <description>The tileset used by Layer 2 in the current map.</description>
        </tooltip>
        <tooltip control="mapTilesetL3Num">
          <title>L3 Tileset</title>
          <description>The tileset used by Layer 3 in the current map.</description>
        </tooltip>
        <tooltip control="mapSetL3Priority">
          <title>L3 Priority 1</title>
          <description>If enabled, the 8x8 tiles in the tilemap's Layer 3 tiles that have the "L3 Priority 1" property enabled in the Layer 3 tileset will appear on top of all other tiles of all other layers.</description>
        </tooltip>
        <tooltip control="mapTilemapL1Num">
          <title>L1 Tilemap</title>
          <description>The tilemap used by Layer 1 in the current map. Layer 1 is most often the "top" layer which usually includes things such as crates, trees, bushes, pipes, etc..</description>
        </tooltip>
        <tooltip control="mapTilemapL2Num">
          <title>L2 Tilemap</title>
          <description>The tilemap used by Layer 2 in the current map. Layer 2 is most often the "ground" layer which usually includes the entire floors, grounds, walls, etc. of a level image.</description>
        </tooltip>
        <tooltip control="mapTilemapL3Num">
          <title>L3 Tilemap</title>
          <description>The tilemap used by Layer 3 in the current map. Layer 3 is most often the "effect" layer which usually includes water, fog effects, translucent images, clouds, etc..</description>
        </tooltip>
        <tooltip control="mapPhysicalMapNum">
          <title>Solidity Map</title>
          <description>The solidity map, also referred to as a physical map or collision tiles, is a map of solid tiles in the orientation of an isometric map. An isometric map is a 2D map that projects a 3D-like image.
The solidity map can be shown/hidden using the block-like button in the toolstrip above the level image.</description>
        </tooltip>
        <tooltip control="mapBattlefieldNum">
          <title>Battlefield</title>
          <description>The battlefield is the background image used by any battles that are encountered in the level. A level is assigned a battlefield "set" or a group of battlefields from which one is manually selected through an event script.</description>
        </tooltip>
        <tooltip control="mapPaletteSetNum">
          <title>Palette Set</title>
          <description>The palette set is a set of 7 palettes that comprise all of the colors that the level image uses.</description>
        </tooltip>
      </Maps>
      <Layer title="Layer" type="section">
        <description>The "LAYER" tab contains all the properties of and effects applied to the level's layers.</description>
        <tooltip control="layerMessageBox">
          <title>Message</title>
          <description>The dialogue message that appears at the top of the screen when the level is entered. These can be individually edited in the dialogues editor. In order for a message to show, either the "SHOW MESSAGE" must be enabled for any exit field that leads to the current level or an event script command must be set for the current level's "Event #" in the toolstrip bar at the top of this editor.</description>
        </tooltip>
        <tooltip control="layerPrioritySet">
          <title>Priority Set</title>
          <description>A set of properties that handles how the layers of the level are drawn. Note that editing the properties in the "Layer Priority" box for the currently set Priority Set will affect all other levels that use the same Priority Set.
"Mainscreen" refers to the layers that are drawn opaquely (ie. normally without 'see-through' effects).
"Subscreen" refers to the layers that are drawn translucently (ie. 'see through' effects). Example: many levels with water (which is translucent) have the water on L3 (which is commonly used for water, clouds, fog, etc.) which is enabled in the subscreen.Generally, at least one (usually all) layer is enabled in the "Color Math" that is also enabled in "Mainscreen" in order for the "Subscreen" layers that are enabled to appear at all.
"Color Math" refers to the layers that the subscreen will appear over. If nothing is enabled in "Color Math" then the subscreen will not show at all.This is called "Color Math" because the colors of the subscreen are being added to or subtracted from the colors on the mainscreen, which creates a translucent effect for the subscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathIntensity">
          <title>Intensity</title>
          <description>"Half" intensity will halve the color values being added to or subtracted from. Example: if the mainscreen color has 128 for red and the subscreen color has 64 for red, then the final color will be (128/2) + (64/2) or 64 + 32 (or subtracts depending on the "Mode").This generally creates a darker effect of the subscreen.
"Full intensity will add or subtract the full values of the colors. Example: if the mainscreen color has 128 for red and the subscreen color has 64 for red, then it adds 128 + 64 (or subtracts depending on the "Mode").This creates a much brighter effect than "Half" intensity.</description>
        </tooltip>
        <tooltip control="layerColorMathMode">
          <title>Mode</title>
          <description>"Plus" mode will add the colors of the subscreen together.
"Minus" mode will subtract the subscreen colors from the mainscreen colors. This creates a much darker effect.
In reference to the other "Layer Priority" properties, anything referring to an either/or case of subtracting or adding is referring to the "Mode" property.</description>
        </tooltip>
        <tooltip control="layerMainscreenL1">
          <title>L1 Mainscreen</title>
          <description>Layer 1 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerMainscreenL2">
          <title>L2 Mainscreen</title>
          <description>Layer 2 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerMainscreenL3">
          <title>L3 Mainscreen</title>
          <description>Layer 3 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerMainscreenNPC">
          <title>NPC Mainscreen</title>
          <description>NPC layer of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerSubscreenL1">
          <title>L1 Subscreen</title>
          <description>Layer 1 of the subscreen.</description>
        </tooltip>
        <tooltip control="layerSubscreenL2">
          <title>L2 Subscreen</title>
          <description>Layer 2 of the subscreen.</description>
        </tooltip>
        <tooltip control="layerSubscreenL3">
          <title>L3 Subscreen</title>
          <description>Layer 3 of the subscreen.</description>
        </tooltip>
        <tooltip control="layerSubscreenNPC">
          <title>NPC Subscreen</title>
          <description>NPC layer of the subscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathL1">
          <title>L1 Color Math</title>
          <description>Add / subtract subscreen from Layer 1 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathL2">
          <title>L2 Color Math</title>
          <description>Add / subtract subscreen from Layer 2 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathL3">
          <title>L3 Color Math</title>
          <description>Add / subtract subscreen from Layer 3 of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathNPC">
          <title>NPC Color Math</title>
          <description>Add / subtract subscreen from NPC layer of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerColorMathBG">
          <title>BG Color Math</title>
          <description>Add / subtract subscreen from background layer of the mainscreen.</description>
        </tooltip>
        <tooltip control="layerLockMask">
          <title>Lock Scrolling</title>
          <description>If checked, the screen will be unable to scroll past the edge of the layer mask.
The layer mask sets the viewable boundaries of the level. Anything beyond these boundaries will not appear in-game. Click the orange box in the toolstrip to show the layer mask.</description>
        </tooltip>
        <tooltip control="layerMaskHighX">
          <title>Right</title>
          <description>The right edge, in 16x16 tile units, of the layer mask.</description>
        </tooltip>
        <tooltip control="layerMaskLowX">
          <title>Left</title>
          <description>The left edge, in 16x16 tile units, of the layer mask.</description>
        </tooltip>
        <tooltip control="layerMaskHighY">
          <title>Bottom</title>
          <description>The bottom edge, in 16x16 tile units, of the layer mask.</description>
        </tooltip>
        <tooltip control="layerMaskLowY">
          <title>Top</title>
          <description>The top edge, in 16x16 tile units, of the layer mask.</description>
        </tooltip>
        <tooltip control="layerL2LeftShift">
          <title>L2 -X shift</title>
          <description>Amount L2 is shifted left, in 16x16 tile units.</description>
        </tooltip>
        <tooltip control="layerL2UpShift">
          <title>L2 -Y shift</title>
          <description>Amount L2 is shifted up, in 16x16 tile units.</description>
        </tooltip>
        <tooltip control="layerL3LeftShift">
          <title>L3 -X shift</title>
          <description>Amount L3 is shifted left, in 16x16 tile units.</description>
        </tooltip>
        <tooltip control="layerL3UpShift">
          <title>L3 -Y shift</title>
          <description>Amount L3 is shifted up, in 16x16 tile units.</description>
        </tooltip>
        <tooltip control="layerScrollWrapping">
          <title>Layer Scrolling Wrap</title>
          <description>Scrolling layers will wrap around infinitely.
For practical purposes, "horizontal" and "vertical" are generally checked together for a layer if either one is checked at all.
NOTE: This is ignored if "Speed" in the "Layer Auto-scrolling" box for the layer is set to (none).</description>
        </tooltip>
        <tooltip control="layerL2VSync">
          <title>L2 Vertical Synchronization</title>
          <description>The amount of layer 2's desynchronization when Mario walks up/down. This refers to the speed in which the screen scrolls up/down in the opposite direction when Mario walks up/down.
This rarely used. Example: in Bowser's Castle in the throne room, where the Chandeliers (layer 2) have a "Low" horizontal and vertical desync value. This means the chandeliers will move left more slowly when Mario walks to the right, and move right slowly when Mario walks left. The same applies vertically.</description>
        </tooltip>
        <tooltip control="layerL2HSync">
          <title>L2 Horizontal Synchronization</title>
          <description>The amount of layer 2's desynchronization when Mario walks left/right. This refers to the speed in which the screen scrolls left/right in the opposite direction when Mario walks left/right.
This rarely used. Example: in Bowser's Castle in the throne room, where the Chandeliers (layer 2) have a "Low" horizontal and vertical desync value. This means the chandeliers will move left more slowly when Mario walks to the right, and move right slowly when Mario walks left. The same applies vertically.</description>
        </tooltip>
        <tooltip control="layerL3VSync">
          <title>L3 Vertical Synchronization</title>
          <description>The amount of layer 3's desynchronization when Mario walks up/down. This refers to the speed in which the screen scrolls up/down in the opposite direction when Mario walks up/down.</description>
        </tooltip>
        <tooltip control="layerL3HSync">
          <title>L3 Horizontal Synchronization</title>
          <description>The amount of layer 3's desynchronization when Mario walks left/right. This refers to the speed in which the screen scrolls left/right in the opposite direction when Mario walks left/right.</description>
        </tooltip>
        <tooltip control="layerInfiniteAutoscroll">
          <title>Infinite</title>
          <description>For layers that have autoscrolling enabled (ie. the "Speed" for the layer is not set to (none)) the layer will scroll indefinitely.
This property is ignored for layers that don't have "SCROLL WRAPPING" enabled.</description>
        </tooltip>
        <tooltip control="layerL2ScrollShift">
          <title>L2 Shift</title>
          <description>This will initially shift layer 2 some pixels before starting the autoscroll. No point is seen to this property, so it is recommended to leave it alone.</description>
        </tooltip>
        <tooltip control="layerL3ScrollShift">
          <title>L3 Shift</title>
          <description>This will initially shift layer 3 some pixels before starting the autoscroll. No point is seen to this property, so it is recommended to leave it alone.</description>
        </tooltip>
        <tooltip control="layerL2ScrollDirection">
          <title>L2 Direction</title>
          <description>The direction layer 2 will scroll. This property is ignored if "L2 Speed" is set to (none).</description>
        </tooltip>
        <tooltip control="layerL2ScrollSpeed">
          <title>L2 Speed</title>
          <description>The relative speed at which layer 2 will scroll.</description>
        </tooltip>
        <tooltip control="layerL3ScrollDirection">
          <title>L3 Direction</title>
          <description>The direction layer 3 will scroll. This property is ignored if "L3 Speed" is set to (none).</description>
        </tooltip>
        <tooltip control="layerL3ScrollSpeed">
          <title>L3 Speed</title>
          <description>The relative speed at which layer 2 will scroll.</description>
        </tooltip>
        <tooltip control="layerWaveEffect">
          <title>Rippling Water</title>
          <description>This, if enabled will create a "rippling water" effect on the subscreen layers.</description>
        </tooltip>
        <tooltip control="layerL3Effects">
          <title>L3 Animation Effects</title>
          <description>The various animation effects that can be applied to layer 3.</description>
        </tooltip>
        <tooltip control="layerOBJEffects">
          <title>Sprites Animation Effects</title>
          <description>The various animation effects that are applied to sprites and other layers.</description>
        </tooltip>
      </Layer>
      <NPCs title="NPCs" type="section">
        <description>An "NPC" is a "non- playable character", or generally referred to as sprites although the use of the word "sprites" for this may be misleading since most NPCs do not correspond to the sprite index. Add, remove, duplicate, cut, copy, paste NPCs or NPC clones using the toolstrip above the NPC collection.
You will notice in the NPC collection treeview some NPCs have child nodes, which here are referred to as "Clones" of an NPC. An NPC clone is an NPC that shares all of the same properties of its parent NPC (ie. the NPC it is an instance of) save for those fields not disabled when a clone is selected. Each clone has its own coords.
Only up to 3 NPCs may contain clones. Clones *must* come first in the collection and *must* use gridplane format sprites for the partition to store them to the video memory's clone buffer properly.</description>
        <tooltip control="npcObjectTree">
          <title>NPC Collection</title>
          <description>The collection of NPCs in the level.</description>
        </tooltip>
        <tooltip control="npcMapHeader">
          <title>Partition</title>
          <description>Set the level's partition packet.</description>
        </tooltip>
        <tooltip control="openPartitions">
          <title>Partition Browser</title>
          <description>Find a partition with specific properties.</description>
        </tooltip>
        <tooltip control="npcEngageType">
          <title>Type</title>
          <description>Some properties of the NPC change based on it's type.
"Object" is generally used for normal NPC's such as the characters in a town that trigger dialogue.
"Treasure" is typically used for treasure chests.
"Battle" is typically used for monsters that trigger a battle.</description>
        </tooltip>
        <tooltip control="npcEngageTrigger">
          <title>Trigger</title>
          <description>This refers to how the event (assigned by the "Event #") will be triggered.</description>
        </tooltip>
        <tooltip control="npcID">
          <title>NPC #</title>
          <description>The NPC assigned to the currently selected NPC.</description>
        </tooltip>
        <tooltip control="findNPCNum">
          <title>NPC Browser</title>
          <description>Since NPCs don't correspond to the actual Sprite # as seen in the Sprites editor, this browser/editor is required to find NPC's that use a specific sprite #.</description>
        </tooltip>
        <tooltip control="npcGotoA">
          <title>BUTTON: Event # / Pack #</title>
          <description>If "Type" is set to "Object" or "Treasure", this will open the event scripts editor and load the event #. If set to "Battle" it will open the formations editor and load the pack #.</description>
        </tooltip>
        <tooltip control="npcGotoB">
          <title>BUTTON: Action #</title>
          <description>Opens the event scripts editor and loads the action #.</description>
        </tooltip>
        <tooltip control="npcEventORPack">
          <title>Event / Pack #</title>
          <description>If "Type" is set to "Object" or "Treasure", this will execute an event script when the NPC has been triggered.
If "Type" is set to "Battle", this assigns a pack to the NPC to be accessed when the NPC has been triggered.
Edit the event or pack by clicking the button to the left.</description>
        </tooltip>
        <tooltip control="npcMovement">
          <title>Action #</title>
          <description>The action # that is initially assigned to the NPC when the level is first entered. The action is the general movement and behavior of the sprite, e.g. walking back / forth randomly.
Click the button to the left to edit the action #.</description>
        </tooltip>
        <tooltip control="npcSpeedPlus">
          <title>Speed +</title>
          <description>This will usually increase the speed of the NPC's playback.</description>
        </tooltip>
        <tooltip control="npcVisible">
          <title>Show NPC</title>
          <description>This must be enabled for the NPC to initially appear in the level.</description>
        </tooltip>
        <tooltip control="npcPropertyA">
          <title>NPC #+ / $70A7 = / Action #+</title>
          <description>If "Type" is set to "Object", this value is added to the NPC #. The purpose of this is to allow clones to use a different NPC # than their parent, but only within an index range of 7. Example: if "NPC #+" is 3 and "NPC #" is 15, then the clone will be assigned NPC # 18. 
If "Type" is set to "Treasure", this value is stored to memory address $70A7. $70A7 can be accessed in event scripts to determine what the item # or what type of item (ie. mushroom, super star, flower, etc.) will be given or shown for the treasure chest.
If "Type" is set to "Battle", this value is added to the "Action #". The purpose of this is to allow clones to use a different action # than their parent, but only within an index range of 15. Example: if "Action #+" is 3 and the "Action #" is 15, then the clone will be assigned Action # 18.</description>
        </tooltip>
        <tooltip control="npcPropertyB">
          <title>Event / Pack #+</title>
          <description>If "Type" is set to "Object", this value is added to the Event #. The purpose of this is to allow clones to use a different Event # than their parent, but only within an index range of 7. Example: if "Event #+" is 3 and the "Event #" is 15, then the clone will be assigned Event # 18. 
If "Type" is set to "Treasure", this value refers to "Treasure" or the type of treasure the NPC will give you if it is triggered. Here is the default list of treasure types: 
0 = mushroom 
1 = invincible star 
2 = flower 
3 = frog coin. 
Other values might refer to an item # that the treasure rewards, but this is usually declared by an event script.
If "Type" is set to "Battle", this value is added to the "Pack #". The purpose of this is to allow clones to use a different action # than their parent, but only within an index range of 15. Example: if "Pack #+" is 3 and the "Pack #" is 15, then the clone will be assigned Pack # 18.</description>
        </tooltip>
        <tooltip control="npcPropertyC">
          <title>Action #+</title>
          <description>If "Type" is set to "Object", this value is added to the "Action #". The purpose of this is to allow clones to use a different action # than their parent, but only within an index range of 3. Example: if "Action #+" is 3 and the "Action #" is 15, then the clone will be assigned Action # 18.</description>
        </tooltip>
        <tooltip control="npcAfterBattle">
          <title>After Battle</title>
          <description>The behavior of the NPC after battle, either having won or ran away.</description>
        </tooltip>
        <tooltip control="npcX">
          <title>X</title>
          <description>The isometric X coord of the NPC. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="npcY">
          <title>Y</title>
          <description>The isometric Y coord of the NPC. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="npcZ">
          <title>Z</title>
          <description>The isometric Z coord, or the elevation, of the NPC.</description>
        </tooltip>
        <tooltip control="npcZ_half">
          <title>+1/2</title>
          <description>If enabled, the Z coord is increased by half a unit.</description>
        </tooltip>
        <tooltip control="npcFace">
          <title>F</title>
          <description>The F coord, ie. the direction the NPC faces.</description>
        </tooltip>
        <tooltip control="npcAttributes">
          <title>Other Properties</title>
          <description>"Face on trigger" will cause the NPC to face Mario when it has been triggered.
"Sequence playback" must be enabled for any sprite sequences (ie. animations) of the NPC to play.
"Can't float" will cause the NPC to fall to the ground if its Z coord is higher than the top of the floor.
"Can't walk under" will not let Mario or any NPC's to walk under the NPC.
"Can't pass walls" will not let the NPC pass through walls.
"Can't jump through" will not let Mario or any NPC's beneath it to jump through the NPC.
"Can't pass NPCs" will not let the NPC pass through NPCs
"Can't walk through" will not let Mario or any NPC's to walk through the NPC.
"Slidable along walls" prevents the NPC from "sticking" to a wall if moving alongside it.</description>
        </tooltip>
        <Partitions form="SpritePartitions" icon="icons/openPartitions.gif" title="Partitions Editor" type="subeditor">
          <description>Browse the partitions used by the levels. A partition is the organization of sprite graphics in the video memory, which is very limited in capacity for a game like SMRPG. Hence the need for partitions, which store and organize the sprites present in a level based on the partition's properties.
Some sprites need more video memory, some need less. Clones, or several NPCs which use the same sprite, must be stored in the clone buffer.
NOTE: if you have problems with NPC sprites displaying properly in a custom level try changing this value to something else. Use other existing levels for comparison and find which one works the best through trial and error. Notice that even though the sprites might appear fine, when they playback an animation sequence there might be problems.</description>
          <tooltip control="partitionNum">
            <title>Partition #</title>
            <description>Load the partition to edit.</description>
          </tooltip>
          <tooltip control="allyCount">
            <title>Ally sprite buffer size</title>
            <description>The number of ally sprites to allow space for in the VRAM. If set to 0 not even Mario will be visible. This is usually set to 1, but if several ally sprites are to appear in the level along with Mario it must be raised.</description>
          </tooltip>
          <tooltip control="extraSprites">
            <title>Extra sprite buffer</title>
            <description>Allows space in the VRAM for extra sprite effects like clouds, level-up text, explosions, etc.</description>
          </tooltip>
          <tooltip control="extraSpriteBuffer">
            <title>Extra sprite buffer size</title>
            <description>The size, in 16x16 tiles, to allow for the extra sprites. This is ignored if "Extra sprite buffer" is unchecked.</description>
          </tooltip>
          <tooltip control="byte2a">
            <title>Buffer type</title>
            <description>What to store in the clone buffer. 3 or 4 sprites per row will store a cloneable NPC to it, (empty) treasure chest will store an (empty) treasure chest sprite. Coins will store the coin sprites. Empty buffer will not store anything to the buffer. This last option is most often used when the main buffer's data overflows into the clone buffer space.
If your level is to have treasure chests or coins, buffer A or C must have these options set to display the sprites correctly in game.
NOTE: the two treasure chest options are ALWAYS stored to clone buffer A, and the coins are ALWAYS stored to clone buffer C. This is regardless of whether they are selected for any other buffers.</description>
          </tooltip>
          <tooltip control="byte2b">
            <title>Use main buffer space</title>
            <description>If the cloneable sprite requires extra sprites to be used, some main buffer space might be needed to store to.</description>
          </tooltip>
          <tooltip control="byte2">
            <title>Sprite indexing in main</title>
            <description>This will store each individual sprite mold one after another in the main buffer. Checking this will require more VRAM but it is sometimes needed for NPCs which might playback a more cumbersome sprite sequence.</description>
          </tooltip>
          <tooltip control="noWaterPalettes">
            <title>8-row palette buffer</title>
            <description>Leave this unchecked to store the underwater palette swaps of the first 4 sprite palettes to the palette memory. If checked, NPCs which are placed underwater will NOT switch to the underwater palette.</description>
          </tooltip>
        </Partitions>
        <NPCEditor form="NPCEditor" icon="icons/openNPCs.gif" title="NPC Editor" type="subeditor">
          <description>Browse and edit the NPC packets used by levels. An NPC packet contains a collection of properties related to its physical, graphical, and video memory attributes. These are exclusively level-oriented and do not affect the sprites used in battle.</description>
          <tooltip control="npcNum">
            <title>NPC #</title>
            <description>Load the NPC (packet) to edit.</description>
          </tooltip>
          <tooltip control="spriteName" control2="spriteNum">
            <title>Sprite</title>
            <description>Set the NPC's sprite.</description>
          </tooltip>
          <tooltip control="editSprite">
            <title>Edit</title>
            <description>Open the sprites editor and load the NPC's sprite.</description>
          </tooltip>
          <tooltip control="layerPriority">
            <title>Priority</title>
            <description>Overlap the tiles in the level map with priority set.</description>
          </tooltip>
          <tooltip control="showShadow">
            <title>Show Shadow</title>
            <description>When the NPC's Z coord (elevation) is over 0, a shadow will be displayed at ground level.</description>
          </tooltip>
          <tooltip control="shadow">
            <title>Shadow</title>
            <description>The type of shadow to show under the NPC when it's above ground level. This is ignored if "Show Shadow" is unchecked.</description>
          </tooltip>
          <tooltip control="yPixelShift">
            <title>Y pixel shift</title>
            <description>The vertical offset, in pixels, of the NPC from it's base isometric coordinate.</description>
          </tooltip>
          <tooltip control="axisAcute">
            <title>Acute axis</title>
            <description>The length, in pixels, from the top-left to the bottom-right of the NPC's solidity field. Its solidity field is the area which Mario and other NPCs cannot pass.</description>
          </tooltip>
          <tooltip control="axisObtuse">
            <title>Obtuse axis</title>
            <description>The length, in pixels, from the top-right to the bottom-left of the NPC's solidity field. Its solidity field is the area which Mario and other NPCs cannot pass.</description>
          </tooltip>
          <tooltip control="height">
            <title>Height</title>
            <description>The height, in pixels, of the NPC's solidity field.</description>
          </tooltip>
          <tooltip control="vramStore">
            <title>Store</title>
            <description>What molds of the NPC's sprite to store to VRAM based on F direction (F coord).</description>
          </tooltip>
          <tooltip control="vramSize">
            <title>Size</title>
            <description>The size of the buffer in the VRAM to reserve for the NPC's sprite.</description>
          </tooltip>
          <tooltip control="cannotClone">
            <title>Cannot Clone</title>
            <description>If checked, the NPC's sprite graphics will not be stored in the VRAM's clone buffer.</description>
          </tooltip>
          <tooltip control="unknownBits">
            <title>Unknown</title>
            <description>These are all unknown bits.</description>
          </tooltip>
          <tooltip control="searchSpriteName">
            <title>Search Sprite Name</title>
            <description>Search for NPCs with the sprite set to this.</description>
          </tooltip>
          <tooltip control="spriteNameTextBox">
            <title>Find in sprite list.</title>
            <description>Find a sprite in the sprite list, and select from the results to search for NPCs with the sprite set to that result.</description>
          </tooltip>
          <tooltip control="searchResults">
            <title>Search Results</title>
            <description>The NPCs found with the sprite set to the selected sprite from the list above.</description>
          </tooltip>
          <tooltip control="buttonOK">
            <title>Apply</title>
            <description>Apply all changes made to all NPCs. This must be clicked for the changes to take effect in the levels editor or the ROM.</description>
          </tooltip>
          <tooltip control="buttonReset">
            <title>Reset</title>
            <description>Reset all changes made to all NPCs since last save.</description>
          </tooltip>
          <tooltip control="buttonClose">
            <title>Close</title>
            <description>Closes the NPC editor. Does not cancel or reset any changes made before last apply--use the "Reset" button for that.</description>
          </tooltip>
        </NPCEditor>
      </NPCs>
      <Exits title="Exits" type="section">
        <description>An "Exit" is an isometric field that, when walked into, will open the level or world map location defined in the "Destination Properties" box.
Add, remove, copy, paste, and duplicate exits using the toolstrip above the exit field collection.</description>
        <tooltip control="exitsFieldTree">
          <title>Exit Field Collection</title>
          <description>The collection of exits, or entrances, in the level.</description>
        </tooltip>
        <tooltip control="exitDest">
          <title>Destination Properties</title>
          <description>The level or location (depending on the value "Type" is set to) that will open when the exit is triggered.</description>
        </tooltip>
        <tooltip control="exitsShowMessage">
          <title>Show Message</title>
          <description>This will display a 1-line dialogue at the top of the screen when the destination level is opened. Change the message for the destination level in the "LAYER" tab.</description>
        </tooltip>
        <tooltip control="exitType">
          <title>Type</title>
          <description>Determines whether the destination is a level or location.</description>
        </tooltip>
        <tooltip control="exitX">
          <title>X</title>
          <description>The isometric X coord of the Exit field. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="exitY">
          <title>Y</title>
          <description>The isometric Y coord of the Exit field. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="exitZ">
          <title>Z</title>
          <description>The isometric Z coord, or the elevation, of the Exit field.</description>
        </tooltip>
        <tooltip control="exitLength">
          <title>Length</title>
          <description>The length, in isometric units, of the field.</description>
        </tooltip>
        <tooltip control="exitHeight">
          <title>Height</title>
          <description>The height, in isometric units, of the field.</description>
        </tooltip>
        <tooltip control="exitFace">
          <title>F</title>
          <description>The F coord, ie. the direction or orientation the Exit.</description>
        </tooltip>
        <tooltip control="exits45LengthPlusHalf">
          <title>NW/SE edge active</title>
          <description>This will enable the trigger on the NW/SE edges of the field.</description>
        </tooltip>
        <tooltip control="exits135LengthPlusHalf">
          <title>NE/SW edge active</title>
          <description>This will enable the trigger on the NE/SW edges of the field.</description>
        </tooltip>
        <tooltip control="exitDestX">
          <title>X</title>
          <description>Mario's initial isometric X coord in the destination level.</description>
        </tooltip>
        <tooltip control="exitDestY">
          <title>Y</title>
          <description>Mario's initial isometric Y coord in the destination level.</description>
        </tooltip>
        <tooltip control="exitDestZ">
          <title>Z</title>
          <description>Mario's initial isometric Z coord, or elevation, in the destination level.</description>
        </tooltip>
        <tooltip control="exitDestFace">
          <title>F</title>
          <description>Mario's initial F coord (F direction) in the destination level.</description>
        </tooltip>
        <tooltip control="marioZCoordPlusHalf">
          <title>+1/2</title>
          <description>Increases Mario's initial isometric Z coord at the new destination by half.</description>
        </tooltip>
      </Exits>
      <Events title="Events" type="section">
        <description>An event field is an isometric field that, when walked into, will trigger an event #.
Add, remove, copy, paste, and duplicate event fields using the toolstrip above the event field collection.</description>
        <tooltip control="eventsList">
          <title>Event Field Collection</title>
          <description>The collection of event fields in the level.</description>
        </tooltip>
        <tooltip control="eventGotoA">
          <title>BUTTON: Event #</title>
          <description>Opens the event script editor and loads the event #.</description>
        </tooltip>
        <tooltip control="eventEvent">
          <title>Event #</title>
          <description>This is the event # that will run when the event field has been triggered.</description>
        </tooltip>
        <tooltip control="eventX">
          <title>X</title>
          <description>The isometric X coord of the event field. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="eventY">
          <title>Y</title>
          <description>The isometric Y coord of the Event field. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="eventZ">
          <title>Z</title>
          <description>The isometric Z coord, or the elevation, of the Event field.</description>
        </tooltip>
        <tooltip control="eventLength">
          <title>Length</title>
          <description>The length, in isometric units, of the event field.</description>
        </tooltip>
        <tooltip control="eventHeight">
          <title>Height</title>
          <description>The height, in isometric units, of the event field.</description>
        </tooltip>
        <tooltip control="eventFace">
          <title>F</title>
          <description>The F coord, ie. the direction or orientation the event field.</description>
        </tooltip>
        <tooltip control="eventsWidthXPlusHalf">
          <title>NW/SE edge active</title>
          <description>This will enable the trigger on the NW/SE edges of the field.</description>
        </tooltip>
        <tooltip control="eventsWidthYPlusHalf">
          <title>NE/SW edge active</title>
          <description>This will enable the trigger on the NE/SW edges of the field.</description>
        </tooltip>
      </Events>
      <Overlaps title="Overlaps" type="section">
        <description>An "overlap" is an object that hides NPCs under all layers.
Add, remove, copy, paste, and duplicate overlaps using the toolstrip above the overlap collection.</description>
        <tooltip control="overlapFieldTree">
          <title>Overlap Collection</title>
          <description>The collection of overlaps in the level.</description>
        </tooltip>
        <tooltip control="overlapType">
          <title>Tile #</title>
          <description>The tile # assigned to the overlap. Set the tile in the tileset below.</description>
        </tooltip>
        <tooltip control="overlapX">
          <title>X</title>
          <description>The isometric X coord of the Overlap. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="overlapY">
          <title>Y</title>
          <description>The isometric Y coord of the Overlap. For manual editing, use the "Isometric Coords" label below the level image.</description>
        </tooltip>
        <tooltip control="overlapZ">
          <title>Z</title>
          <description>The isometric Z coord, or the elevation, of the overlap.</description>
        </tooltip>
        <tooltip control="overlapCoordZPlusHalf">
          <title>+1/2</title>
          <description>Increases the Z coord by half a unit.</description>
        </tooltip>
        <tooltip control="overlapUnknownBits">
          <title>Other Properties</title>
          <description>The remaining properties of the overlap.</description>
        </tooltip>
      </Overlaps>
      <TileMods title="Tile Mods" type="section">
        <description>Tile mods are modifications to a level tilemap's tiles, usually done through an event script. Common examples include manually opening and closing doors through event commands, which require a tile mod to change the tiles to an open/closed door.
A tile mod can also have an "alternate" tile mod, which can be selected in preference to the parent tile mod through an event script command's properties.</description>
        <tooltip control="tileModsFieldTree">
          <title>Tile Mod Collection</title>
          <description>The collection of tile mods for the level.</description>
        </tooltip>
        <tooltip control="tileModsX">
          <title>X</title>
          <description>The X coord of the tile mod.</description>
        </tooltip>
        <tooltip control="tileModsY">
          <title>Y</title>
          <description>The Y coord of the tile mod.</description>
        </tooltip>
        <tooltip control="tileModsWidth">
          <title>Length</title>
          <description>The length, in isometric units, of the tile mod.</description>
        </tooltip>
        <tooltip control="tileModsHeight">
          <title>Height</title>
          <description>The height, in isometric units, of the tile mod.</description>
        </tooltip>
        <tooltip control="tileModsLayers">
          <title>Layers</title>
          <description>The layers included in the tile mod, to be edited in the level map. If no layers are selected, the tile mod will have no effect on the level.</description>
        </tooltip>
      </TileMods>
      <SolidMods title="Solid Mods" type="section">
        <description>A solid mod is similar to a tile mod in that the solidity map can be manually altered through an event script command. Its placement and dimensions, of course, are isometric.</description>
        <tooltip control="solidModsFieldTree">
          <title>Solid Mod Collection</title>
          <description>The collection of solid mods for the level.</description>
        </tooltip>
        <tooltip control="solidModsX">
          <title>X Coord</title>
          <description>The isometric X coord of the solid mod.</description>
        </tooltip>
        <tooltip control="solidModsY">
          <title>Y Coord</title>
          <description>The isometric Y coord of the solid mod.</description>
        </tooltip>
        <tooltip control="solidModsWidth">
          <title>Length</title>
          <description>The length, in isometric units, of the solid mod.</description>
        </tooltip>
        <tooltip control="solidModsHeight">
          <title>Height</title>
          <description>The height, in isometric units, of the solid mod.</description>
        </tooltip>
      </SolidMods>
      <SolidTiles form="LevelsSolidTiles" icon="icons/buttonPhysicalTiles.gif" title="Solid Tiles" type="subwindow">
        <description>Here a solidity tile is selected to draw to the level map.
Solidity tiles, like the solidity map they're drawn in, are isometric in make-up. All of these properties are in isometric units.
Solidity tiles are color-coded. Places where there are no tiles at all can be walked on. Grey tiles are tiles that can also (generally) be walked on. Slanted grey tiles are stairs that can be walked on. Pink tiles are those tiles or portions of tiles that cannot be walked on at all. White tiles are "floating" tiles, or tiles that hover above a base tile of the same tile. Dark grey tiles are simply base tiles which have a "floating" tile above them. Light blue tiles are water tiles that can be waded through. Dark blue tiles are water tiles that can be swum through. Green tiles are vine tiles that can be climbed.
A solidity tile is arranged in four quadrants (north, south, east, west) each quadrant having its own set of properties. It also has four edges (NW, SW, NE, SE) which also have a set of attributes.
The following is a list of the most common solidity tiles:</description>
        <attribute>
          <description>Tile #0 is the empty tile--erasing a tile is the same as drawing tile #0 in its place. Therefore it is strongly recommended to leave this tile alone.
Tile #255 is commonly used to set the physical boundaries of a level, just as the layer mask sets the visible boundaries.
Tile #256 is exactly the same as tile #0, only that it has priority 3 for objects that walk on it.</description>
        </attribute>
        <tooltip control="physicalTileNum">
          <title>Solid Tile Index</title>
          <description>Select the solid tile to load.</description>
        </tooltip>
        <tooltip control="heightOfBaseTile">
          <title>Height of base tile</title>
          <description>The height of the solidity tile from ground zero.</description>
        </tooltip>
        <tooltip control="heightOverhead">
          <title>Height of overhead tile</title>
          <description>An overhead tile is a solid tile that floats above the base tile. This is its height. If this is set to 0, there is no overhead tile.</description>
        </tooltip>
        <tooltip control="zCoordOverhead">
          <title>Z coord of overhead tile</title>
          <description>The elevation of the overhead tile. This value must be greater than or equal to the base tile's height.</description>
        </tooltip>
        <tooltip control="zCoordWater">
          <title>Z coord of water tile</title>
          <description>This is the surface of the water. If landed on, Mario will float on the surface. If walked under, Mario goes underwater. "Special tile format" must be set to "water", otherwise this will be ignored. This value must be higher than the height of the base tile. If this is set to 0, there is no water tile.</description>
        </tooltip>
        <tooltip control="zCoordPlusHalf">
          <title>Z coord plus 1/2</title>
          <description>Raises the Z coord, or elevation, of the overhead tile by half an isometric unit.</description>
        </tooltip>
        <tooltip control="solidQuadrantN">
          <title>N</title>
          <description>If "Solid quadrant flag" is enabled, the north quadrant of the tile is impassible.</description>
        </tooltip>
        <tooltip control="solidQuadrantW">
          <title>W</title>
          <description>If "Solid quadrant flag" is enabled, the west quadrant of the tile is impassible.</description>
        </tooltip>
        <tooltip control="solidQuadrantE">
          <title>E</title>
          <description>If "Solid quadrant flag" is enabled, the east quadrant of the tile is impassible.</description>
        </tooltip>
        <tooltip control="solidQuadrantS">
          <title>S</title>
          <description>If "Solid quadrant flag" is enabled, the south quadrant of the tile is impassible.</description>
        </tooltip>
        <tooltip control="solidTile">
          <title>Solid tile</title>
          <description>The entire tile becomes impassible, all other properties are overridden.</description>
        </tooltip>
        <tooltip control="solidQuadrant">
          <title>Solid quadrant flag</title>
          <description>This must be set for any of the solid quadrants above to be effective.</description>
        </tooltip>
        <tooltip control="solidEdgeNW">
          <title>NW</title>
          <description>The north-western edge cannot be passed.</description>
        </tooltip>
        <tooltip control="solidEdgeNE">
          <title>NE</title>
          <description>The north-eastern edge cannot be passed.</description>
        </tooltip>
        <tooltip control="solidEdgeSW">
          <title>SW</title>
          <description>The south-western edge cannot be passed.</description>
        </tooltip>
        <tooltip control="solidEdgeSE">
          <title>SE</title>
          <description>The south-eastern edge cannot be passed.</description>
        </tooltip>
        <tooltip control="p3OnEdge">
          <title>P3 for object on edge</title>
          <description>Mario or any NPCs on top of the tile's edges will overlap all other map layers.</description>
        </tooltip>
        <tooltip control="p3OverEdge">
          <title>P3 for object over edge</title>
          <description>Mario or any NPCs above the tile's edges will overlap all map layers.</description>
        </tooltip>
        <tooltip control="p3OnTile">
          <title>P3 for object on tile</title>
          <description>Mario or any NPCs on the surface of the tile will overlap all map layers.</description>
        </tooltip>
        <tooltip control="conveyor">
          <title>Conveyor belt runs</title>
          <description>The direction the conveyor belt runs, if the tile behaves as a conveyor belt (see next two properties).</description>
        </tooltip>
        <tooltip control="conveyorBeltFast">
          <title>Conveyor belt, fast</title>
          <description>Enable this to create a fast conveyor belt effect on the tile.</description>
        </tooltip>
        <tooltip control="conveyorBeltNormal">
          <title>Conveyor belt, normal</title>
          <description>Enable this to create a conveyor belt effect on the tile. If neither this nor the fast one is set, the tile will not act as a conveyor belt.</description>
        </tooltip>
        <tooltip control="stairs">
          <title>Stairs lead</title>
          <description>The tile can act as a set of stairs, if not set to {none}.</description>
        </tooltip>
        <tooltip control="specialTile">
          <title>Special tile format</title>
          <description>The tile can act as a vine that can be climbed or a water tile, or neither.</description>
        </tooltip>
        <tooltip control="doorFormat">
          <title>Door format</title>
          <description>Walking on this tile will do an automatic tile mod door effect on the map layers its placed at. Notice that the door tiles in the layer tileset must be in layer 1 and must be in the same position in the tileset image they are found in all levels with doors. Otherwise the solid tile's automatic tile mod function will set the tiles to whatever is at the default index of the door tiles.
Some of these properties are unknown, but seem to call automatic tile mods.</description>
        </tooltip>
        <tooltip control="unknownBits">
          <title>Unknown Bits</title>
          <description>These are all unknown bits.</description>
        </tooltip>
      </SolidTiles>
      <SpaceAnalyzer form="SpaceAnalyzer" icon="icons/spaceAnalyzer.gif" title="Space Analyzer" type="section">
        <description>The Space Analyzer window is for monitoring the space available in the banks that store the compressed level map data for tile maps and solidity maps. The size of the uncompressed map data that the user interacts with in the editor is compressed to analyze the actual space which will be used in each bank.
Each tab contains the entire list of tilemaps and solidity maps used by all levels, and the data for accessing each. Collections of rows are color-coded to separate the banks from one another. The most import column is probably the "Bytes left" column, which shows how many available bytes there are for that bank, starting at that map.
If one or more rows (ie. maps) at the end of the bank are red, then there is not enough space to store all of the compressed maps and the editor will fail to save those map rows marked red.</description>
        <tooltip control="tilemapListView">
          <title>Tile Maps</title>
          <description>This is the entire collection of tilemaps for all levels.</description>
        </tooltip>
        <tooltip control="soliditymapListView">
          <title>Solidity Maps</title>
          <description>This is the entire collection of tilemaps for all levels.</description>
        </tooltip>
      </SpaceAnalyzer>
      <FAQ title="LEVELS EDITOR">
        <entry>
          <question>My custom level just appears black in-game, music playing.</question>
          <answer>Make sure the layer mask's boundaries are within those of your new custom level and that Mario appears within those boundaries.</answer>
        </entry>
        <entry>
          <question>How do I add something like an NPC to a level?</question>
          <answer>The tabs on the left panel, ex: the "NPCs" tab, contain buttons at the top of the tab window that let you insert, delete, copy, etc. NPCs, events, exits, overlaps, or mods.</answer>
        </entry>
        <entry>
          <question>I notice that the NPC # does not correspond to the sprite #.</question>
          <answer>The help labels for the editor explain this. Hit F1 in the editor or click the (?) icon at the top of the levels editor.</answer>
        </entry>
        <entry>
          <question>The NPCs are not showing.</question>
          <answer>Make sure "Show NPC instance" is checked.</answer>
        </entry>
        <entry>
          <question>Some tiles keep overlapping the NPCs.</question>
          <answer>Those tiles most likely have priority 1 enabled on one or more of their subtiles. To stop this, replace the solidity tile at that spot with a corresponding solidity tile with the "Priority 1 enabled for objects on tile" checked. Otherwise, it could be an overlap tile. To stop this, delete the overlap at that spot.</answer>
        </entry>
        <entry>
          <question>When I stand on the edge of a block it overlaps Mario and NPCs.</question>
          <answer>Look for a solidity tile with "Priority 3 for object on edge" enabled in the solidity tile search and draw it there.</answer>
        </entry>
        <entry>
          <question>How do I get an NPC to start a dialogue?</question>
          <answer>The dialogues for NPCs are initiated in the NPC's event script. Open the NPC's event script or assign a new script # and insert a "Run dlg: whatever" command.</answer>
        </entry>
        <entry>
          <question>The NPC graphics are glitchy in-game.</question>
          <answer>You'll want to try changing the "Partition" property. You can look for the best partition index for the level by using the parition searcher (accessible with the "Partition" button). Keep in mind the game only has so much video memory to store the sprites to, so too many large NPCs may just be impossible to show.</answer>
        </entry>
        <entry>
          <question>I have no idea how these partitioning properties work.</question>
          <answer>Unfortunately, this is a grey area in my knowledge, as I am not completely sure how the game organizes video memory for NPC sprites on loading a level. Clone sprites (ex: multiple townspeople in the town levels) should be first in the NPC collection, and a partition that has the clone VRAM properties should be set to store them (3 or 4 sprites per row). Additionally, cloned sprites can only be gridplane format sprites. 3 sprites per row is set for 32px width sprites, 4 per row is for 24px width. Large sprites that overflow and write over cloned sprites might be fixed by setting clone buffer A to "empty buffer" to provide extra space for the large sprite.</answer>
        </entry>
        <entry>
          <question>What does "Could not insert the _____" mean?</question>
          <answer>You'll need to delete other exits, events, npcs, or overlaps to insert new ones.</answer>
        </entry>
        <entry>
          <question>Walking off an edge causes Mario to fall and get stuck.</question>
          <answer>Most likely you forgot to draw in a solidity tile somewhere. The isometric orientation of the solidity map sometimes makes it tricky to fill in all tiles. Also, make sure to seal off the edges of the walkable area with impassable tiles (usually with solid tile #255).</answer>
        </entry>
        <entry>
          <question>How can I prevent a monster from reappearing after battle?</question>
          <answer>Look in the "AFTER BATTLE..." panel.</answer>
        </entry>
        <entry>
          <question>Mario's Pipehouse is completely black.</question>
          <answer>For some reason the game applies the proper palette through ASM only for this level. If you want to see the level to edit it, change the palette to {21} temporarily then back to {50} when finished.</answer>
        </entry>
        <entry>
          <question>I want a script to play infinitely in the background.</question>
          <answer>The level's "EVENT #" script must jump to a synchronous event that loops indefinitely during gameplay.</answer>
        </entry>
        <entry>
          <question>I want to add a warp trampoline or pipe to another level.</question>
          <answer>Copy/paste a warp trampoline NPC from another level and edit the script to point to the desired target level. For the pipes, copy/ paste the event field at the pipe's coords from another level and edit the script likewise. Keep in mind you will be changing the target level for the original trampoline/pipe you copied from the other level as well.</answer>
        </entry>
        <entry>
          <question>I want to add a monster to the level that starts a battle.</question>
          <answer>Set the "NPC TYPE" to "Battle" and the "Pack #" to the desired pack index. Remember, this is a pack index; not a formation index. Packs are three formations each, where one of the three is randomly selected for battle.
</answer>
        </entry>
      </FAQ>
    </Levels>
    <MainTitle form="MainTitle" icon="icons/mainMainTitle.gif" title="Main Title" type="editor">
      <description>The main title screen is the first thing you see, after the Squaresoft logo, when the game first initializes. It is a 3-layer image, composed of 3 tilesets with a separate palette applied to each. The 1st layer is the keep and cliffs, the 2nd is the blue background and clouds, and the 3rd is the title art for the Super Mario RPG logo. The 3rd layer is in 4bpp format and 256x96 pixels.</description>
      <tooltip control="pictureBoxTitle">
        <title>Main Title Preview</title>
        <description>The final product of all 3 layers as drawn in-game.
There are two titles--one before Exor when the game first boots up, and alternate after Exor breaks the Star Road.
Right-click to save an image.</description>
      </tooltip>
		<tooltip control="alternateTitle">
			<title>Alternate Main Title</title>
			<description>Allows editting of both title screens.</description>
		</tooltip>
		<tooltip control="titleChoices">
			<title>Main Title is...</title>
			<description>Forces the main title to a certain title screen.</description>
		</tooltip>
		<tooltip control="syncBannerXY">
			<title>Sync Banner</title>
			<description>Syncronizes the Banner to be 48 units under the Title. Unchecking allows for moving the Banner manually.</description>
		</tooltip>
		<tooltip control="labelBackground">
			<title>Background Coordinates</title>
			<description>Moves the background location to a new one.
All layers are affected by this position, except for the Sprite.</description>
		</tooltip>
		<tooltip control="labelTitle">
			<title>Title Coordinates</title>
			<description>Moves the Title to a new location.
The trademark tile ("TM") is missing for certain instances--After the intro demo ends, and for the event script event "Exor crashes into keep".</description>
		</tooltip>
		<tooltip control="labelBanner">
			<title>Banner Coordinates</title>
			<description>Moves the Banner to a new location.
The Banner location is only applicable when the intro demo ends (without the player pressing a button to skip straight to the title screen).</description>
		</tooltip>
		<tooltip control="labelCredits">
			<title>Credits Coordinates</title>
			<description>Moves the Credits to a new location.</description>
		</tooltip>
		<tooltip control="labelSprite">
			<title>Sprite Coordinates</title>
			<description>Moves the sprite to a new location.
The sprite is not affected by the Background location.</description>
		</tooltip>
		<Opening form="Opening" icon="icons/mainMainTitle.gif" title="New Font Table" type="subeditor">
			<description>The opening title cards are what tell the player who each character is.</description>
			<tooltip control="pictureBox1">
				<title>Title Cards</title>
				<description>The opening title cards' tileset, used in the intro demo. The graphics are in 4bpp format, and the black background acts as transparency. You can import/export an image with right-click.</description>
			</tooltip>
	    </Opening>
      <FAQ title="MAIN TITLE">
        <entry>
          <question>How do I make my own title screen?</question>
          <answer>The easiest way is to make an image outside of Lazy Shell with a paint program (with the same dimensions as the title) and import the external image file in the Main Title editor. Right-click the layer 3 title logo and import the image. Creating an entirely new title screen is a very limited operation as there's only enough space for any new graphics and/or palettes that are imported.
</answer>
        </entry>
      </FAQ>
    </MainTitle>
    <Menus form="MenusEditor" icon="icons/mainMenus.gif" title="Menus" type="editor">
      <description>Menus that can be edited here include the game select menu, all menus in the overworld menu accessible with the X button, and all shop menus. All exclusively menu-oriented text can be changed, as well as the music and Mario sprites used by the new game select menu.
Overworld and shop menus use a different background palette, but the same graphics and frame. Overworld and shop menus use a frame in the foreground, while the new game menu has a more elaborate foreground. So selecting a menu might change the data in the graphic &amp; palette editors.
Right-click the images below for more options, or simply use the buttons in the toolstrip to import/export data.</description>
      <tooltip control="menuTextName" control2="menuTextNum">
        <title>Menu Text Index</title>
        <description>Select the menu text to load. Alternatively, and more practically, you can find the desired text by clicking on it in the menu preview below to the lower-right.</description>
      </tooltip>
      <tooltip control="menuTextBox">
        <title>Menu Text</title>
        <description>Change the menu text in this box. Beware, not all menu texts use the same keystroke table.</description>
      </tooltip>
        <tooltip control="menuName">
          <title>Menu</title>
          <description>Select the menu to load.</description>
        </tooltip>
        <tooltip control="music">
          <title>Music</title>
          <description>Change the new game select menu's music.</description>
        </tooltip>
        <tooltip control="cursorName">
          <title>Sprite Cursor</title>
          <description>Select the Mario cursor sprite to change its properties to the right.</description>
        </tooltip>
        <tooltip control="cursorSpriteNum">
          <title>Sprite</title>
          <description>Set the cursor's sprite to use.</description>
        </tooltip>
        <tooltip control="cursorSequence">
          <title>Sequence</title>
          <description>Change the sprite cursor's sequence corresponding to the sequences in the sprites editor.</description>
        </tooltip>
		<tooltip control="menuName">
			<title>Menus</title>
			<description>Tells you what menu you are editting.</description>
		</tooltip>
		<tooltip control="pictureBoxPreview">
			<title>Preview</title>
			<description>Shows how the menus might look in game. Click text in the preview image to edit it. The Game Select Menu has an option to edit the cursor sprite.</description>
		</tooltip>
		<tooltip control="menuChooseBgOrFg">
			<title>Foreground or Background</title>
			<description>Displays which tileset you are editting. Can edit menu's foreground, background, and frames.</description>
		</tooltip>
		<tooltip control="pictureBoxEditor">
			<title>Tileset Editor</title>
			<description>Allows editting of the tileset. Right-click to import or export an image.</description>
		</tooltip>
	  <MenusBox form="MenusBox" icon="icons/mainMenus.gif" title="Overworld Menu List" type="subwindow">
		<tooltip control="MenusBox">
			<title>Overworld Menu List</title>
			<description>The list of menus on the overworld main menu. The first five entries are displayed by default, while the latter four are controlled by Memory $7062 bits 0-3 in the Event Scripts Editor.</description>
		</tooltip>
      </MenusBox>
      <FAQ></FAQ>
    </Menus>
    <MiniGames form="MiniGames" icon="icons/mainMiniGames.gif" title="Mini-games" type="editor">
      <description>SMRPG's mini-games with a unique interface include the mine-cart levels and the beetle mania game.</description>
      <MineCart form="MineCart" icon="icons/mainMiniGames.gif" title="Mine Cart Track-builder" type="subwindow">
        <description>Here the four mine-cart levels in Moleville Mountain can be fully modified from their maps to the mushroom and coin objects that appear in them.
Two types of mine cart levels: mode 7 and side-scrolling. Mode 7 are the 1st and 3rd levels, while the side-scrolling levels are the 2nd and 4th. Mode 7 levels are one layer only and can be edited like a level's tilemap. The mushroom count of both is fixed at 8 mushrooms, removal/insertion is not supported. Side-scrolling levels can have a custom number of mushrooms and coins.</description>
        <tooltip control="levelName">
          <title>Mine Cart Index</title>
          <description>Select the mine cart level to load.</description>
        </tooltip>
        <tooltip control="screens">
          <title>Screen Collection</title>
          <description>The side-scrolling mine cart level's screens, or the final product as seen in-game. These are not to be confused with the tilemap collection below. The screen collection is simply a list of screens arranged in a designated order from the tilemap collection below.</description>
        </tooltip>
        <tooltip control="startX">
          <title>Start X</title>
          <description>The initial starting X coord, in pixels, of Mario when the mine cart level opens.</description>
        </tooltip>
        <tooltip control="startY">
          <title>Start Y</title>
          <description>The initial starting Y coord, in pixels, of Mario when the mine cart level opens.</description>
        </tooltip>
        <tooltip control="music">
          <title>Music</title>
          <description>Assign the music track used by all 4 mine cart levels.</description>
        </tooltip>
        <tooltip control="screenWidth">
          <title>Width</title>
          <description>Set the width, in pixels, of the side-scrolling mine cart level. The level will exit in-game if Mario travels beyond the width boundary.</description>
        </tooltip>
        <tooltip control="screenL1Number">
          <title>L1 Screen</title>
          <description>The screen's layer 1 screen, selected from the tilemap collection in the tilemap editor at the very bottom.</description>
        </tooltip>
        <tooltip control="screenL2Number">
          <title>L2 Screen</title>
          <description>The screen's layer 2 screen, selected from the tilemap collection in the tilemap editor at the very bottom.</description>
        </tooltip>
        <tooltip control="listBoxObjects">
          <title>Object Collection</title>
          <description>The collection of mushrooms and coins in the side-scrolling mine cart level. Each object is a row of 0 or more mushrooms or coins, the size of each row set by "Count".</description>
        </tooltip>
        <tooltip control="objectType">
          <title>Type</title>
          <description>Mushrooms, coins, or none.</description>
        </tooltip>
        <tooltip control="rowSize">
          <title>Count</title>
          <description>The number of mushrooms or coins in the row. If set to 0, nothing will be shown.</description>
        </tooltip>
        <tooltip control="objectX">
          <title>X</title>
          <description>X coord of the object row, in pixels.</description>
        </tooltip>
        <tooltip control="objectY">
          <title>Y</title>
          <description>Y coord of the object row, in pixels.</description>
        </tooltip>
      </MineCart>
      <FAQ title="MINI-GAMES EDITOR">
        <entry>
          <question>How do I delete/add mushrooms to stages 1 and 2?</question>
          <answer>You can't, the mushroom count is fixed to 8 for both stages.</answer>
        </entry>
        <entry>
          <question>Why aren't the rails arching in stage 4 like in-game?</question>
          <answer>This is probably an effect applied by some code in the assembly I am not familiar with. Thus the rails appear flat in the editor.
</answer>
        </entry>
      </FAQ>
    </MiniGames>
    <Monsters form="Monsters" icon="icons/mainMonsters.gif" title="Monsters" type="editor">
      <description>This editor includes all exclusively in-battle properties of monsters, including the battle scripts of each monster.</description>
      <tooltip control="monsterName" control2="monsterNum">
        <title>Monster Index</title>
        <description>Select the monster to load.</description>
      </tooltip>
      <tooltip control="monsterNameText">
        <title>Monster Name</title>
        <description>The monster's displayed name when targetted.</description>
      </tooltip>
      <VitalStatus title="Vital Status" type="section">
        <tooltip control="MonsterValHP">
          <title>HP</title>
          <description>The monster's total hit points.</description>
        </tooltip>
        <tooltip control="MonsterValFP">
          <title>FP</title>
          <description>The monster's total flower points.</description>
        </tooltip>
        <tooltip control="MonsterValAtk">
          <title>Attack</title>
          <description>The monster's attack power, ie. the base damage caused by the monster's non-magic-based attacks.</description>
        </tooltip>
        <tooltip control="MonsterValDef">
          <title>Defense</title>
          <description>The monster's defense power, ie. the amount subtracted from the base damage of a non-magic-based attack on the monster.</description>
        </tooltip>
        <tooltip control="MonsterValMgAtk">
          <title>Mg. Attack</title>
          <description>The monster's magic attack power, ie. the base damage caused by the monster's magic-based attacks.</description>
        </tooltip>
        <tooltip control="MonsterValMgDef">
          <title>Mg. Defense</title>
          <description>The monster's magic defense power, ie. the amount subtracted from the base damage of a non-magic-based attack on the monster.</description>
        </tooltip>
        <tooltip control="MonsterValSpeed">
          <title>Speed</title>
          <description>The monster's speed, ie. the monster will have its turn before anyone else with a lower speed.</description>
        </tooltip>
        <tooltip control="MonsterValEvd">
          <title>Evade%</title>
          <description>The monster's evade percent, ie. the probability out of 100 a non-magic-based attack on the monster will miss. An evade% of 100 causes all non-magic-based attacks on the monster to miss. An evade% of 0 causes all non-magic- based attacks on the monster to hit. An evade% of 50 is a 50/50 equal chance that a non-magic-based attack on the monster will miss or hit.</description>
        </tooltip>
        <tooltip control="MonsterValMgEvd">
          <title>Mg. Evade%</title>
          <description>The monster's magic evade percent, ie. the probability out of 100 a magic-based attack on the monster will miss. An evade% of 100 causes all magic-based attacks on the monster to miss. An evade% of 0 causes all magic-based attacks on the monster to hit. An evade of 50 is a 50/50 equal chance that a magic-based attack on the monster will miss or hit.</description>
        </tooltip>
      </VitalStatus>
      <Rewards title="Rewards" type="section">
        <tooltip control="MonsterValExp">
          <title>Experience</title>
          <description>The total experience gained from the monster when it is defeated. This is divided evenly among all active party members, ex. 500 experience points will be divided among 5 active party members as 100 points each.</description>
        </tooltip>
        <tooltip control="MonsterValCoins">
          <title>Coins</title>
          <description>The total coins gained from the monster when it is defeated.</description>
        </tooltip>
        <tooltip control="ItemWinA">
          <title>Item (5%)</title>
          <description>The item that has only a 5% chance of being won. If the 5% and 25% items are the same, then there is a 100% chance of the item being won, ie. it is always rewarded.</description>
        </tooltip>
        <tooltip control="ItemWinB">
          <title>Item (25%)</title>
          <description>The item that has a 25% chance of being won. If the 5% and 25% items are the same, then there is a 100% chance of the item being won, ie. it is always rewarded.</description>
        </tooltip>
        <tooltip control="MonsterYoshiCookie">
          <title>Yoshi Cookie</title>
          <description>The item rewarded from the successful use of a Yoshi Cookie on the monster. The probability of a successful use is determined by the "Morph Success" (see below).</description>
        </tooltip>
      </Rewards>
      <OtherProperties title="Other Properties" type="section">
        <tooltip control="MonsterMorphSuccess">
          <title>Morph Success</title>
          <description>The success rate of the Yoshi Cookie, Lamb's Lure and Sheep Attack items. 100% success rate means the item always works on the monster, 0% means the item never works on the monster.</description>
        </tooltip>
        <tooltip control="MonsterCoinSize">
          <title>Coin Sprite</title>
          <description>The coin that shows when the monster is defeated. This property is ignored if the "Sprite Behavior" includes a "fade- out death".</description>
        </tooltip>
        <tooltip control="MonsterEntranceStyle">
          <title>Entrance Style</title>
          <description>The behavior of the monster's initial animated entrance into battle. Although it is hardly noticeable, this might offset the exact initial coordinates of the monster in the formation by a couple of pixels.</description>
        </tooltip>
        <tooltip control="MonsterBehavior">
          <title>Sprite Behavior</title>
          <description>The various behaviors of the monster's sprite in battle. These include the sprite animations for the monster's death, its floating status, its common attack and defense animations, and more.</description>
        </tooltip>
        <tooltip control="MonsterSoundStrike">
          <title>Strike Sound</title>
          <description>The sound that plays when the monster does a common physical attack. Usually, but not always used.</description>
        </tooltip>
        <tooltip control="MonsterSoundOther">
          <title>Other Sound</title>
          <description>The optional sound that can be used for less common physical attacks. These options are categorized by specific monsters, due to their limited usage among all monsters.</description>
        </tooltip>
        <tooltip control="MonsterValElevation">
          <title>Elevate</title>
          <description>The number of 16-pixel units a monster is raised above the ground.</description>
        </tooltip>
      </OtherProperties>
      <tooltip control="MonsterEffectsNullify">
        <title>Effect Nullification</title>
        <description>The effects that will have no effect if an effect-based attack is used on the monster, eg. Poison Gas (Poison), Terrorize (Fear), Bad Mushroom (Poison), etc.</description>
      </tooltip>
      <tooltip control="MonsterElementsWeakness">
        <title>Element Weaknesses</title>
        <description>The elements that will double the damage done to the monster by an element-based attack. These refer to magic- based attacks or items, such as Snowy (Ice) or Fire Bomb (Fire), eg. Fire Bomb will normally do 120 damage, but if used on a monster with a weakness for Fire it will double it to 240.</description>
      </tooltip>
      <tooltip control="MonsterElementsNullify">
        <title>Element Nullification</title>
        <description>The elements that will have no effect if an element-based attack is used on the monster, eg. Ice Bomb and Snowy will have no effect on a monster with a nullification of Ice.</description>
      </tooltip>
      <tooltip control="MonsterProperties">
        <title>Special Status</title>
        <description>"Invincible" will nullify all damage done to the monster, ie. all attacks, spells and items used on the monster will yield 0 damage.
"Mortality Protection" will nullify all instant-death attacks such as Yoshi Cookie, Lamb's Lure, Geno Whirl, etc.
"Disable Auto-Death" is for battle-script purposes. If checked, the monster will not be removed or set as defeated until manually removed through a battle-script command.
"Share palette" is only used by the four crystals and its actual purpose is unknown.</description>
      </tooltip>
      <tooltip control="MonsterFlowerBonus">
        <title>Flower Bonus</title>
        <description>The Flower Bonus rewarded when the monster is defeated, based on the odds.</description>
      </tooltip>
      <tooltip control="MonsterFlowerOdds">
        <title>Success%</title>
        <description>The success rate that the Flower Bonus will be rewarded when the monster is defeated.</description>
      </tooltip>
      <tooltip control="textView">
        <title>Text View</title>
        <description>Enable or disable text viewing in the psychopath message textbox. This is for easily identifying what the numerals in [] mean.</description>
      </tooltip>
      <tooltip control="MonsterPsychopath">
        <title>Psychopath Message</title>
        <description>Edit the monster's psychopath message. This is oriented exactly the same as battle dialogues, selecting from the same keystroke table and same list of 5 commands in the toolstrip to the right.</description>
      </tooltip>
      <BattleScripts form="BattleScripts" icon="icons/mainBattleScripts.gif" title="Battle Scripts" type="subwindow">
        <description>A battle script is a set of commands which simply tell the monster what to do each turn. What spells or attacks it uses, under what conditions it uses them, etc. are all determined by a monster's battle script commands.</description>
        <tooltip control="BattleScriptTree">
          <title>Script Commands</title>
          <description>The list of commands (aka "command tree") in the current script. Check the commands to delete, cut, or copy (using the toolstrip below), or double-click the commands to edit them in the box to the right.</description>
        </tooltip>
        <tooltip control="listBoxCommands">
          <title>Command List</title>
          <description>Select from a list of commands to add to the monster's battle script.
"Do" commands can either cast a spell or execute an attack on the current target. Either 1 specific spell/attack or 1 selected randomly from 3 are the options. Remember that if no target is set with the "Target set" command, the monster will by default choose a random ally to attack.
"If" commands set a condition for all the following commands up to the closing "Wait 1 turn, return all" command. If the condition is met, the commands will execute; if not, the monster's turn is over and the script will start over from the beginning on the next turn.
"Memory" commands change the values and bits of the battle memory addresses 7EE000 to 7EE00F. These addresses are read by "If" commands for checking conditions.
"Run" commands will run a dialogue, event, or object sequence. An object sequence is selected from a list of animation scripts (roughly corresponding to the "Monster behaviors" in the animations editor) to playback for the monster.
"Target" commands set a number of attributes for a given target. Disabling/enabling a target will prevent/allow the player to target and thus attack the target.</description>
        </tooltip>
        <tooltip control="buttonInsert">
          <title>Insert Command</title>
          <description>Insert the command after the currently selected command in the command tree.</description>
        </tooltip>
        <tooltip control="buttonApply">
          <title>Apply Changes</title>
          <description>Applies all change made to the currently edited command.</description>
        </tooltip>
        <tooltip control="pictureBoxMonster">
          <title>Monster Image</title>
          <description>Click/drag the cursor to set its upper-left distance from the monster sprite.</description>
        </tooltip>
        <tooltip control="monsterTargetArrowX">
          <title>Target X</title>
          <description>The left distance, in 8x8 tile units, of the cursor from the monster's sprite.</description>
        </tooltip>
        <tooltip control="monsterTargetArrowY">
          <title>Target Y</title>
          <description>The upper distance, in 8x8 tile units, of the cursor from the monster's sprite.</description>
        </tooltip>
        <tooltip control="labelBytesLeft">
          <title>Bytes Left</title>
          <description>The remaining bytes available for all battle scripts.</description>
        </tooltip>
        <tooltip control="hexText">
          <title>Hex</title>
          <description>The raw hex data of the currently select command in the command tree.</description>
        </tooltip>
      </BattleScripts>
      <FAQ title="MONSTERS EDITOR">
        <entry>
          <question>On a game over, things keep happening in battle.</question>
          <answer>Most likely the monster who inflicted the fatal blow has several consecutive attacks that need to have conditionals added to its script. "If target alive: at least one opponent" should be added before the commands following the initial attack.</answer>
        </entry>
        <entry>
          <question>Battle commands keep executing one after another without stopping.</question>
          <answer>You'll need to add a "Wait 1 turn, restart script" or a "Wait 1 turn" command. The first is used within an "If" statement.
</answer>
        </entry>
      </FAQ>
    </Monsters>
    <Sprites form="Sprites" icon="icons/mainSprites.gif" title="Sprites" type="editor">
      <description>Sprites are images representing all of the characters, monsters, items, objects, and some spell and attack effects.
Sprite indexes can be viewed as 3 groups: 0 to 255 are primarily the allies, ally weapons, townspeople, and other common objects. 256 to 511 are monsters, this order corresponding exactly to 0-255 in the monsters editor. 512 to 767 are battle related sprites, like items or explosions. 768 to 927 are spell and attack effects, and the rest are the end credit sprites.
This editor has 2 subwindows: molds and sequences. Each sprite has its own mold and sequence collections, both of these subwindows interacting with one another.</description>
      <tooltip control="name">
        <title>Sprite Index</title>
        <description>Select the sprite to edit by name. The name is based on a label assigned by the editor.</description>
      </tooltip>
      <tooltip control="number">
        <title>Sprite Index</title>
        <description>Select the sprite to edit by number.</description>
      </tooltip>
      <tooltip control="imageNum">
        <title>Image</title>
        <description>The image # of the currently selected sprite refers to the set of properties that designate the raw graphics and palette set to use.
Anything in the "IMAGE PALETTE..." and "IMAGE GRAPHICS..." panels are part of the sprite's image.</description>
      </tooltip>
      <tooltip control="paletteIndex">
        <title>Palette</title>
        <description>The index of the palette in the palette set the sprite uses. This is mostly used for individual sprites that use the same image (thus, the same palette set) but have a different individual palette, such as the Sky Troopa and Malakoopa.</description>
      </tooltip>
      <tooltip control="paletteOffset">
        <title>Palette Set</title>
        <description>The palette # the sprite's image's palette set begins at.</description>
      </tooltip>
      <tooltip control="graphicOffset">
        <title>BPP GFX Offset</title>
        <description>The offset in the ROM (in hexadecimal) that the sprite's image's raw graphics begin. Increments by 0x20 because 4bpp 8x8 tiles are 0x20 bytes each.</description>
      </tooltip>
      <tooltip control="animationPacket">
        <title>Animation</title>
        <description>The animation # of the currently selected sprite refers to the set of properties that designate the sequences and molds to assign to the sprite.
Anything in the "ANIMATION SEQUENCES..." and "ANIMATION MOLDS..." are part of the sprite's animation.</description>
      </tooltip>
      <tooltip control="animationVRAM">
        <title>VRAM Size</title>
        <description>Larger VRAM values will allow more space for the sprite's raw graphics to be stored. Generally, the larger sprites such as Culex use larger values.</description>
      </tooltip>
      <SpriteMolds form="SpriteMolds" icon="icons/mainSprites.gif" title="Molds" type="subwindow">
        <description>A sprite mold is basically a single sprite image. Multiple molds can be accessed by the sequence data to create an animation sequence. Sprite molds, unlike effect molds, are drawn in two formats: gridplane and tilemap.
Gridplane arranges the 8x8 tiles used by the mold in a fixed table. Gridplane format molds are generally much smaller, with a limited dimension of 32x32, and a fixed position centered in the mold image box.
Tilemap format is composed of 16x16 tiles, each assigned a fixed coordinate and a set of 4 subtiles. This is relatively more common than the gridplane format, and far more versatile. The mold can be drawn using a collection of 16x16 tiles from the tileset provided on the right. Even external images can be imported as a tile or whole tileset.</description>
        <tooltip control="listBoxMolds">
          <title>Mold Collection</title>
          <description>The collection of molds used by the sprite's animation. A mold is a set of tiles arranged either dynamically or in a predefined grid to create a complete image that can be used by an animation sequence.</description>
        </tooltip>
        <tooltip control="moldTileXCoord">
          <title>Width/X coord</title>
          <description>For gridplane format molds, this is the width, in 8x8 tile units, of the mold. For tilemap format molds, this is the absolute X coordinate of the 16x16 tile.</description>
        </tooltip>
        <tooltip control="moldTileYCoord">
          <title>Height/Y coord</title>
          <description>For gridplane format molds, this is the height, in 8x8 tile units, of the mold. For tilemap format molds, this is the absolute Y coordinate of the 16x16 tile.</description>
        </tooltip>
      </SpriteMolds>
      <SpriteSequences form="SpriteSequences" icon="icons/openSequences.gif" title="Sequences" type="subwindow">
        <description>Sequences are the animations a sprite uses. For monster sprites, the sequences are labelled differently to correspond to their use in battle. All other sprites are simply named with the format "Sequence #".</description>
        <tooltip control="sequences">
          <title>Sequence Collection</title>
          <description>The collection of sequences used by the sprite's animation.
A sequence is a collection of frames, where each frame is assigned a mold from the mold collection above and a duration, creating an animation that can be played back in the image to the right.</description>
        </tooltip>
        <tooltip control="listBoxFrames">
          <title>Frame Collection</title>
          <description>The collection of frames used by the currently selected sequence at the left. Each frame is assigned a mold from the mold collection above and a duration, creating an animation that can be played back in the image to the right.</description>
        </tooltip>
        <tooltip control="frameMold">
          <title>Mold</title>
          <description>The mold used by the currently selected frame. This value is based on its index in the mold collection above.</description>
        </tooltip>
        <tooltip control="duration">
          <title>Duration</title>
          <description>The duration of the currently selected frame, or how long the frame will pause before the next frame starts. This value refers to the # of frames based on a 60-frames-per- second unit.</description>
        </tooltip>
        <tooltip control="sequenceActive">
          <title>Active</title>
          <description>This must be checked for a sprite sequence to be usable. If not checked, the sequence data will save but not be accessible in game--or the next time the editor opens.</description>
        </tooltip>
      </SpriteSequences>
      <FAQ title="SPRITES EDITOR">
        <entry>
          <question>How do I add custom sprites?</question>
          <answer>You can only edit existing ones. You can import sprite images through several methods: import image files into a graphic set, import image files into the molds, etc. I strongly recommend importing images into the molds as the easiest way to make your own custom sprites from external image files.</answer>
        </entry>
        <entry>
          <question>I want to replace a sprite with a new one from image files.</question>
          <answer>Use the mold import feature: the black down arrow and white box [v] icon directly over the mold list tagged "Import Image(s)". You may import one or more images over the current molds or append to the current molds.</answer>
        </entry>
        <entry>
          <question>I want to change a monster's sprite to a different one.</question>
          <answer>Monster sprites are found in sprite indexes 256-511. If you want to change a specific sprite to another existing sprite, you'll need to change the "Image" and "Animation" values to that other sprite's image and animation values.</answer>
        </entry>
        <entry>
          <question>How do I add tiles to a sprite?</question>
          <answer>You can only do this for tilemap formatted molds, not gridplanes. Select the tiles in the mold's tileset you want to draw and use the pencil tool to draw them.</answer>
        </entry>
        <entry>
          <question>How do I create new tiles to draw with?</question>
          <answer>Once again, you can only to this for tilemap molds. Click "Insert new tile" (paper icon) at the top of the panel on the far right and manually set the subtiles.</answer>
        </entry>
        <entry>
          <question>Are there any unused animation sequences?</question>
          <answer>http://tcrf.net/Super_Mario_RPG:_Legend_of_the_Seven_Stars Scroll down to the "Unused _____" sections.</answer>
        </entry>
        <entry>
          <question>I get glitchy sprites when I load a save state.</question>
          <answer>This is not a bug with the editor nor the emulator. It is simply a matter of unsychronized memory: the newly edited ROM data for sprites is not sychronized with the save-state memory thus the glitchy sprites. This can be remedied by re-entering the area, which refreshes the memory.</answer>
        </entry>
        <entry>
          <question>I want to make _____ a different color, or Mario without a hat.</question>
          <answer>Edit the palette and edit the graphics with the respective editors.</answer>
        </entry>
        <entry>
          <question>Battle portraits appear discolored in the editor.</question>
          <answer>It appears like that in the editor, but the assembly manually applies the correct palette to the battle portraits.</answer>
        </entry>
        <entry>
          <question>I can't find some sprites, even in the search.</question>
          <answer>Some sprites are within other sprites, nestled among the mold indexes. The nok-nok shell, for example, is molds 2-4 within the lazy shell sprite.</answer>
        </entry>
      </FAQ>
    </Sprites>
    <WorldMaps form="WorldMaps" icon="icons/mainWorldMaps.gif" title="World Maps" type="editor">
      <description>The 7 different areas of the world map in SMRPG can be edited. Each world map image is a tileset, like battlefields, and are modified in the same manner. Unique features of the world maps include a location set, a banner, and a mode 7 transformation as seen in-game.
A separate layer for the banner displaying the location's name. This and the locations can be shown or hidden with a button.</description>
      <tooltip control="worldMapName">
        <title>World Map Index</title>
        <description>Select the world map to load. There are 8 maps total.
The map may appear disoriented in correlation with the locations, because the game engine stretches the map.</description>
      </tooltip>
      <tooltip control="showLocations">
        <title>Show Locations</title>
        <description>Show or hide the locations in the image below. If the lo- cations are shown, they can be clicked to edit them in the "Location Properties" box below.</description>
      </tooltip>
		<tooltip control="music">
			<title>Music</title>
			<description>The music played while on the world map.</description>
		</tooltip>
		<tooltip control="showBanner">
			<title>Show Banner</title>
			<description>Show or hide the banner graphics in the image below. If shown, the graphics cannot be editted.</description>
		</tooltip>
		<tooltip control="showCharacter">
			<title>Show Character Graphic</title>
			<description>Show or hide an animated mouse cursor of overworld character graphic in the image below.</description>
		</tooltip>
      <tooltip control="pointCount">
        <title>Locations</title>
        <description>The total # of locations that the current map uses. The collection of locations used by the map is based on the locations used by the earlier maps.
Map #0, for example, by default uses 7 locations total, and since it is the first map that means it will use locations #0 - 6 (as seen in the "LOCATIONS" editor panel). Map #1 uses 6 locations, and because the last location in Map #0 is location #6, then Map #1's locations will be locations #7 - 12 (ie. 6 total, starting at #7).</description>
      </tooltip>
      <tooltip control="worldMapTileset">
        <title>Tileset</title>
        <description>The tileset, or the actual image used by the map.
To edit a tile in the tileset, click on the tile in the image above to edit it in the "WORLD MAP TILE EDITOR" panel to the right.</description>
      </tooltip>
      <tooltip control="worldMapXCoord">
        <title>X</title>
        <description>The X coordinate of the map.</description>
      </tooltip>
      <tooltip control="worldMapYCoord">
        <title>Y</title>
        <description>The Y coordinate of the map.</description>
      </tooltip>
      <Locations title="Locations" type="section">
        <description>A location set, or collection of locations which lead to a level or another location, is included in each world map. When the locations are toggled on, the map image transforms to comply with the mode 7 transformation applied by the game. In order to provide accurate coordinates for the location points the image must be drawn this way in the editor.</description>
        <tooltip control="locationNum" control2="locationName">
          <title>Location Index</title>
          <description>Select the location to load. If the location is in the currently selected world map, then it will be highlighted in the map.</description>
        </tooltip>
        <tooltip control="textBoxLocation">
          <title>Location Name</title>
          <description>Edit the location's name, as it appears at the bottom of the screen when the Mario sprite is over the location.</description>
        </tooltip>
        <tooltip control="locationXCoord">
          <title>X</title>
          <description>The absolute X coordinate of the location.</description>
        </tooltip>
        <tooltip control="locationYCoord">
          <title>Y</title>
          <description>The absolute Y coordinate of the location.</description>
        </tooltip>
        <tooltip control="showCheckAddress">
          <title>Memory Address</title>
          <description>If the bit (under "BIT SET") of this memory address is set, then the location is enabled / visible in-game.
Example: by default location #9 (Mushroom Way) is not enabled or visible until bit 2 of memory address $7065 is set. This bit is set at the end of event script #1396.
These bits are always set in an event script.</description>
        </tooltip>
        <tooltip control="showCheckBit">
          <title>Bit</title>
          <description>If this bit of a memory address (under "IF MEMORY") is set, then the location is enabled / visible in-game.
Example: by default location #9 (Mushroom Way) is not enabled or visible until bit 2 of memory address $7065 is set. This bit is set at the end of event script #1396.
These bits are always set in an event script.</description>
        </tooltip>
        <tooltip control="leadToLocation">
          <title>Location</title>
          <description>If this is enabled, the destination will be another location (typically a location in different one of the 8 maps). If not enabled, then an event (Run Event) will be triggered.</description>
        </tooltip>
        <tooltip control="whichPointCheckAddress">
          <title>Memory Address</title>
          <description>If the bit (at the right) of this memory address is set, then the location will lead to the first destination (next to "lead to destionation"), otherwise it will lead to the second one. This is ignored if "LOCATION" is disabled.</description>
        </tooltip>
        <tooltip control="whichPointCheckBit">
          <title>Bit</title>
          <description>If this bit of the memory address (at the left) is set, then the location will lead to the first destination (next to "lead to destionation"), otherwise it will lead to the second one. This is ignored if "LOCATION" is disabled.</description>
        </tooltip>
        <tooltip control="runEvent">
          <title>Assigned event #</title>
          <description>The event to run when entering the location. This is ignored if "LOCATION" is disabled.</description>
        </tooltip>
        <tooltip control="runEventEdit">
          <title>Edit</title>
          <description>Edit the assigned event # in the Events editor.</description>
        </tooltip>
        <tooltip control="goLocationA">
          <title>Lead to destination</title>
          <description>The destination the location leads to.</description>
        </tooltip>
        <tooltip control="goLocationB">
          <title>Else lead to destination</title>
          <description>The alternate destination the location leads to, if a memory's bit is not set. This is ignored if "LOCATION" is disabled.</description>
        </tooltip>
        <tooltip control="enableEastPath">
          <title>East</title>
          <description>Enable the eastern path of the location, or the path to the location the Mario sprite moves to when RIGHT is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="enableSouthPath">
          <title>South</title>
          <description>Enable the southern path of the location, or the path to the location the Mario sprite moves to when DOWN is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="enableWestPath">
          <title>West</title>
          <description>Enable the western path of the location, or the path to the location the Mario sprite moves to when LEFT is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="enableNorthPath">
          <title>North</title>
          <description>Enable the northern path of the location, or the path to the location the Mario sprite moves to when UP is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="toEastPoint">
          <title>East location</title>
          <description>The location the eastern path leads to, or the location the Mario sprite moves to when RIGHT is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="toSouthPoint">
          <title>South location</title>
          <description>The location the southern path leads to, or the location the Mario sprite moves to when DOWN is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="toWestPoint">
          <title>West location</title>
          <description>The location the western path leads to, or the location the Mario sprite moves to when LEFT is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="toNorthPoint">
          <title>North location</title>
          <description>The location the northern path leads to, or the location the Mario sprite moves to when UP is pressed on the d-pad.</description>
        </tooltip>
        <tooltip control="toEastCheckAddress">
          <title>Open eastern path if memory set</title>
          <description>If the bit (at the right) of this memory address is set, then the eastern path will be open.</description>
        </tooltip>
        <tooltip control="toSouthCheckAddress">
          <title>Open southern path if memory set</title>
          <description>If the bit (at the right) of this memory address is set, then the southern path will be open.</description>
        </tooltip>
        <tooltip control="toWestCheckAddress">
          <title>Open western path if memory set</title>
          <description>If the bit (at the right) of this memory address is set, then the western path will be open.</description>
        </tooltip>
        <tooltip control="toNorthCheckAddress">
          <title>Open northern path if memory set</title>
          <description>If the bit (at the right) of this memory address is set, then the northern path will be open.</description>
        </tooltip>
        <tooltip control="toEastCheckBit">
          <title>Open eastern path if bit set</title>
          <description>If this bit of the memory address (to the left) is set, then the eastern path will be open.</description>
        </tooltip>
        <tooltip control="toSouthCheckBit">
          <title>Open southern path if bit set</title>
          <description>If this bit of the memory address (to the left) is set, then the southern path will be open.</description>
        </tooltip>
        <tooltip control="toWestCheckBit">
          <title>Open western path if bit set</title>
          <description>If this bit of the memory address (to the left) is set, then the western path will be open.</description>
        </tooltip>
        <tooltip control="toNorthCheckBit">
          <title>Open northern path if bit set</title>
          <description>If this bit of the memory address (to the left) is set, then the northern path will be open.</description>
        </tooltip>
      </Locations>
      <FAQ />
    </WorldMaps>
	  <GamePatches form="GamePatches" icon="icons/mainPatches.gif" title="Patches" type="editor">
		  <description>Shows the entire ROM in hexadecimal format in an interactive hex editor. Many editors have a button to open the hex editor and automatically jump to the location of the element index's data in the ROM.</description>
		  <tooltip control="verifyIPSButton">
			  <title>Verify IPS Patch</title>
			  <description>This verifies if the IPS patch is a real patch. This option only matters the first time it is downloaded onto the patch browser. Disabling it speeds up downloading onto the browser, but there is a chance of an error when patching. It is recommended to use for debugging a patch server, and to turn off for weaker internet connections.</description>
		  </tooltip>
		  <tooltip control="maxImagesLabel">
			  <title>Max Images Downloaded</title>
			  <description>The max amount of images that are downloaded per patch.</description>
		  </tooltip>
		  <tooltip control="openSettings">
			  <title>Patch Servers List</title>
			  <description>This lists all the servers this Lazy Shell tries to connect to. To add, paste a link into the box and press enter. To remove, click the link and press delete.</description>
		  </tooltip>
		  <tooltip control="reloadPatchServer">
			  <title>Reload/Stop Patch Server Downloading</title>
			  <description>Reloads or Stops downloading from the patch server(s). Reloading will close and reopen this window.</description>
		  </tooltip>
		  <tooltip control="versionDisplayComboBox">
			  <title>Patch Version(s)</title>
			  <description>This lists all versions of the patch on the server. For server owners, the last patch added is the first patch seen.</description>
		  </tooltip>
		  <tooltip control="DetailsBox">
			  <title>Patch Details</title>
			  <description>Displays details of the patch.</description>
		  </tooltip>
		  <tooltip control="DescriptionTextBox">
			  <title>Patch Description</title>
			  <description>This box describes the patch. While loading the browser, it shows all patches found on the server by Lazy Shell.</description>
		  </tooltip>
		  <tooltip control="WebsiteBox">
			  <title>Patch Website</title>
			  <description>The website is any link that is connected to the patch's information. For your safety, do not go to websites you do not trust.</description>
		  </tooltip>
		  <tooltip control="downloadIPStoFileButton">
			  <title>Download IPS Patch</title>
			  <description>Downloads the raw IPS patch file.</description>
		  </tooltip>
		  <tooltip control="downloadReadmeButton">
			  <title>Download Patch readme.txt</title>
			  <description>Downloads the readme.txt of the patch, if available.</description>
		  </tooltip>
		  <tooltip control="applyButton">
			  <title>Download and Patch to ROM image</title>
			  <description>Downloads, verifies and patches the IPS to the ROM file. The ROM must be saved in the editor after patching. Additional note, the "Verify IPS Patch" button does not apply here, as it always verifies the patch before patching.</description>
		  </tooltip>
		  <tooltip control="PatchListBox">
			  <title>Patch Browser</title>
			  <description>Displays all patches found and approved by the server. Can reorder by download or alphabetically, and sort by tag and/or author in the options found on the toolbar.</description>
		  </tooltip>
		  <tooltip control="sortByButtons">
			  <title>Sort Options</title>
			  <description>Sort alphabetically or by download order.</description>
		  </tooltip>
		  <tooltip control="sortByCategoryComboBox">
			  <title>Sort by Tag</title>
			  <description>Each patch can be categorized by the tags it is given. This drop-down list shows common tags found in the patchinfo. Choosing one consolidates the list of the patches that have that tag.</description>
		  </tooltip>
		  <tooltip control="sortByAuthorComboBox">
			  <title>Sort by Author</title>
			  <description>Patches usually have someone that created them. This drop-down list can consolidate the patches who have that author in their detais.</description>
		  </tooltip>
		  <tooltip control="DetailsLabel">
			  <title>Patch Recommended by Patch Server</title>
			  <description>Displays a star to show this patch is recommended by the server provider.</description>
		  </tooltip>
		  <tooltip control="ImagePictureBox">
			  <title>Patch Preview</title>
			  <description>Displays a preview image of the patch provided by the server. The max images downloaded is controlled by the "Max Images" number, just above this box.</description>
		  </tooltip>
		  <tooltip control="GameImageDescriptions">
			  <title>Patch Preview Caption</title>
			  <description>Displays a short description of the image.</description>
		  </tooltip>
		<FAQ />
	</GamePatches>
  </Editors>
  <Other>
    <header>Sub-editors</header>
    <Previewer form="Previewer" icon="icons/preview.gif" title="Previewer" type="editor">
      <description>Launch an emulator from the previewer window and load a save state for easy ROM testing. 
Choose either the SNES9X or ZSNES emulator file to use when opening the previewer. ZSNES will automatically load the generated save state when the emulator is loaded from the previewer, but for SNES9X the F1 key must be pressed manually to load the generated save state. If the emulator has problems loading the save state, make sure the 2 steps above have been completed. 
The latest version of ZSNES (v1.51 as of this release) is supported. Snes9x v1.43 and/or its derivatives (rerecord, Geiger's debugger, etc.) are preferred and should work.
Before using the previewer, do the following: </description>
      <attribute>
        <description>1. Make sure all editor files are in the same folder.</description>
      </attribute>
      <attribute>
        <description>2. Configure the emulator's save-state folder to read/write to the same folder as any loaded ROM. ZSNES by default already does this, and so does Snes9x v1.43. However, later versions of Snes9x will by default read/write to a "Save" folder created within the emulator's main folder, and if not changed it will fail to load the preview save state.</description>
      </attribute>
      <tooltip control="emuPathTextBox">
        <title>Emulator Path</title>
        <description>The path of the emulator executable file.</description>
      </tooltip>
      <tooltip control="romPathTextBox">
        <title>Rom Path</title>
        <description>The location the preview ROM used for previewing will be stored to.</description>
      </tooltip>
      <tooltip control="dynamicROMPath">
        <title>Dynamic</title>
        <description>If enabled the preview ROM will write to the location of the ROM currently loaded to Lazy Shell. If not, it will write to the location of the Lazy Shell .exe file.</description>
      </tooltip>
      <tooltip control="snes9xArgs">
        <title>SNES9X Args</title>
        <description>Command line arguments for when the Snes9x emulator runs by command line. Snes9x cannot automatically load a save state by command line so it must be loaded manually with F1.</description>
      </tooltip>
      <tooltip control="zsnesArgs">
        <title>ZSNES Args</title>
        <description>Command line arguments for when the ZSNES emulator runs by command line. Here the default will automatically load the save state to jump to the preview.</description>
      </tooltip>
      <tooltip control="eventListBox">
        <title>Source of Entrance</title>
        <description>Choose from a list of sources to set the previewer's save state to.
For levels this list is generated from the entrances of other levels leading to the desired level to preview.
Event scripts will produce a list of levels and coordinates where there are event fields assigned that script. 
Animation scripts will open a battle and depending on the category will either load a formation with a monster who executes the attack / spell animation or set the item inventory to contain the item to preview, etc.
SPCs will have no list and simply load a black screen then playback the song or sound effect.
Mine cart levels will simply load the level at the same coordinates. The level may take a bit longer to load than other previewable elements.</description>
      </tooltip>
      <tooltip control="selectIndex">
        <title>Index</title>
        <description>Either the index of the element to preview or a resource element to preview the currently selected index of whatever editor the previewer was opened from.</description>
      </tooltip>
      <tooltip control="adjustX">
        <title>X</title>
        <description>Mario's initial X coord when a level loads in the emulator</description>
      </tooltip>
      <tooltip control="adjustY">
        <title>Y</title>
        <description>Mario's initial Y coord when a level loads in the emulator</description>
      </tooltip>
      <tooltip control="adjustZ">
        <title>Z</title>
        <description>Mario's initial Z coord, or elevation, when a level loads in the emulator</description>
      </tooltip>
      <tooltip control="battleBG">
        <title>Battlefield</title>
        <description>Set this for previewing elements which are battle-oriented like monsters or animations.</description>
      </tooltip>
      <tooltip control="alliesInParty">
        <title>Allies in Party</title>
        <description>Active allies in the party for the preview.</description>
      </tooltip>
      <tooltip control="allyName">
        <title>Ally</title>
        <description>Select the ally to set their level and equipment for the preview.</description>
      </tooltip>
      <tooltip control="level">
        <title>LV</title>
        <description>Set the level of the ally for the preview.</description>
      </tooltip>
      <tooltip control="allyWeapon">
        <title>Weapon</title>
        <description>Equip the ally with a weapon for the preview.</description>
      </tooltip>
      <tooltip control="allyArmor">
        <title>Armor</title>
        <description>Equip the ally with armor for the preview.</description>
      </tooltip>
      <tooltip control="allyAccessory">
        <title>Accessory</title>
        <description>Equip the ally with an accessory for the preview.</description>
      </tooltip>
      <tooltip control="maxOutStats">
        <title>Max Stats</title>
        <description>Checking this will max out the stats of all allies and give them with the best equipment.</description>
      </tooltip>
      <tooltip control="reset">
        <title>Reset</title>
        <description>Reset the ally's level and equipment.</description>
      </tooltip>
      <tooltip control="launch">
        <title>Launch</title>
        <description>Generate the preview ROM + save state and launch the emulator.</description>
      </tooltip>
      <FAQ />
    </Previewer>
    <Palettes form="PaletteEditor" icon="icons/openPalettes.gif" title="Palettes" type="editor">
      <description>Here a palette or palette set can be modified and a number of effects can be applied to it. The RGB can be typically modified in the "Color levels" box, while many common color transformations are available in the "Adjust RGB" and "Effects" tabs.
The "Switch" and "Equalize" boxes make it easy to create a custom palette swap of a sprite, level, etc. Under the "Effects" tab other common color transformations are found, as well as a "Threshold" and "Colorize" feature.
The swatch box on the bottom-right is available for setting the selected color in the palette to any generic color in the swatch.</description>
      <tooltip control="pictureBoxPalette">
        <title>Palette</title>
        <description>The palette or palette set. It's arranged in one or more rows, each row being a single palette in the set. Checking any of the buttons above or to the left will apply the palette effects set in the "Adjust RGB" and "Effects" tabs below. The buttons above will apply effects by column, the buttons to the left by row.</description>
      </tooltip>
      <tooltip control="pictureBoxCurrentColor">
        <title>Current Color</title>
        <description>The currently selected color. Its RGB levels can be changed in the box on the right.</description>
      </tooltip>
      <tooltip control="currentRed" control2="trackBar1">
        <title>R</title>
        <description>Red level of the selected color.</description>
      </tooltip>
      <tooltip control="currentGreen" control2="trackBar2">
        <title>G</title>
        <description>Green level of the selected color.</description>
      </tooltip>
      <tooltip control="currentBlue" control2="trackBar3">
        <title>B</title>
        <description>Blue level of the selected color.</description>
      </tooltip>
      <tooltip control="currentHTML">
        <title>HTML</title>
        <description>The RGB levels in HTML, or hexadecimal, format.</description>
      </tooltip>
      <tooltip control="buttonSetToColor">
        <title>Set To Color</title>
        <description>Sets the selected color in the palette set to the color in the box on the right.</description>
      </tooltip>
      <tooltip control="pictureBoxColorMap">
        <title>Color Swatch</title>
        <description>Pick a color in the swatch to load into the little box above, and use the "Set to color" button to set it as the palette set's selected color.</description>
      </tooltip>
      <tooltip control="buttonUpdate">
        <title>Update</title>
        <description>Applies all changes made in the palette editor to the source's palette set.</description>
      </tooltip>
      <tooltip control="autoUpdate">
        <title>Auto-update</title>
        <description>Automatically apply any changes made in the palette editor to the source's palette set. If unchecked, click "Update" to apply the changes.</description>
      </tooltip>
      <AdjustRGB title="Adjust RGB" type="section">
        <tooltip control="levelsReds" control2="levelsRedsBar">
          <title>Reds</title>
          <description>Raise or lower the color level of the palette's reds.</description>
        </tooltip>
        <tooltip control="levelsGreens" control2="levelsGreensBar">
          <title>Reds</title>
          <description>Raise or lower the color level of the palette's reds.</description>
        </tooltip>
        <tooltip control="levelsBlues" control2="levelsBluesBar">
          <title>Reds</title>
          <description>Raise or lower the color level of the palette's reds.</description>
        </tooltip>
        <tooltip control="switchRedsA">
          <title>Switch reds</title>
          <description>Switches the palette's reds with what's selected in the "With" box.</description>
        </tooltip>
        <tooltip control="switchGreensA">
          <title>Switch greens</title>
          <description>Switches the palette's greens with what's selected in the "With" box.</description>
        </tooltip>
        <tooltip control="switchBluesA">
          <title>Switch blues</title>
          <description>Switches the palette's blues with what's selected in the "With" box.</description>
        </tooltip>
        <tooltip control="switchRedsB">
          <title>With reds</title>
          <description>Switches what's selected in the "Switch" box with the palette's reds.</description>
        </tooltip>
        <tooltip control="switchGreensB">
          <title>With greens</title>
          <description>Switches what's selected in the "Switch" box with the palette's greens.</description>
        </tooltip>
        <tooltip control="switchBluesB">
          <title>With blues</title>
          <description>Switches what's selected in the "Switch" box with the palette's blues.</description>
        </tooltip>
        <tooltip control="equateRedsA">
          <title>This (reds)</title>
          <description>The palette's reds will be equal to what's selected in the "Equals" box.</description>
        </tooltip>
        <tooltip control="equateGreensA">
          <title>This (greens)</title>
          <description>The palette's greens will be equal to what's selected in the "Equals" box.</description>
        </tooltip>
        <tooltip control="equateBluesA">
          <title>This (blues)</title>
          <description>The palette's blues will be equal to what's selected in the "Equals" box.</description>
        </tooltip>
        <tooltip control="equateRedsB">
          <title>Equals reds</title>
          <description>Whatever's selected in the "This" box will equal the palette's reds.</description>
        </tooltip>
        <tooltip control="equateGreensB">
          <title>Equals greens</title>
          <description>Whatever's selected in the "This" box will equal the palette's greens.</description>
        </tooltip>
        <tooltip control="equateBluesB">
          <title>Equals blues</title>
          <description>Whatever's selected in the "This" box will equal the palette's blues.</description>
        </tooltip>
      </AdjustRGB>
      <Effects title="Effects" type="section">
        <tooltip control="greyscale">
          <title>Greyscale</title>
          <description>The palette set will be converted to greyscale.</description>
        </tooltip>
        <tooltip control="negative">
          <title>Negative image</title>
          <description>The palette set's colors will be inverted.</description>
        </tooltip>
        <tooltip control="brightness" control2="trackBarBrightness">
          <title>Brightness</title>
          <description>Relative brightness of the palette set. 0 is default, move left or right to darken or brighten the palette.</description>
        </tooltip>
        <tooltip control="contrast" control2="trackBarContrast">
          <title>Contrast</title>
          <description>Relative contrast of the palette set. 0 is default, move left or right to lower or raise the contrast.</description>
        </tooltip>
        <tooltip control="thresholdApply">
          <title>Threshold</title>
          <description>Apply a threshold effect on the palette set.
A threshold effect will reduce the palette to two colors: black and white. The level of the threshold is the ratio of white to black: the higher the threshold, the darker colors will be converted to 0, or solid black. Lower thresholds will convert more colors to white.</description>
        </tooltip>
        <tooltip control="threshold" control2="trackBarThreshold">
          <title>Threshold</title>
          <description>The threshold level to apply.</description>
        </tooltip>
        <tooltip control="colorizeApply">
          <title>Colorize</title>
          <description>Apply a colorizing effect on the palette set.</description>
        </tooltip>
        <tooltip control="colorizeHue">
          <title>Hue</title>
          <description>The hue, or color, to colorize the palette set with.</description>
        </tooltip>
        <tooltip control="colorizeSaturation" control2="colorizeSaturationBar">
          <title>Saturation</title>
          <description>The level of saturation the colorization effect on the palette set. Lower values will make the colors greyer, higher values more colorful.</description>
        </tooltip>
      </Effects>
      <FAQ />
    </Palettes>
    <Graphics form="GraphicEditor" icon="icons/openGraphics.gif" title="Graphics" type="editor">
      <description>Paint edit a set of 4bpp or 2bpp graphics used by an element in the ROM. The user can edit the graphics directly or save the graphics as an image to edit in an external paint program (this is preferred for more in-depth editing). The graphics image can be re-imported after the external editing has been done.
Here a color in the palette set can be selected to draw to the graphics image. Both a front and back color can be selected to be drawn using the left or right click buttons.</description>
      <tooltip control="pictureBoxPalette">
        <title>Palette Set</title>
        <description>Choose a color to draw with in the graphics below. Right-click a color to draw with using the right mouse button.
The graphics image below can only use a single palette row (16 colors) therefore clicking a color will show the graphics image using that color's palette row. Changing the palette row this way will NOT modify the ROM data, only how the graphics image is shown. Different objects in the image will use different palettes, so select the proper row to view a set of objects with their appropriate palette.</description>
      </tooltip>
      <tooltip control="pictureBoxColor">
        <title>Front Color</title>
        <description>Draw this color to the graphic set using the left mouse button.</description>
      </tooltip>
      <tooltip control="pictureBoxColorBack">
        <title>Back Color</title>
        <description>Draw this color to the graphic set using the right mouse button.</description>
      </tooltip>
      <tooltip control="contiguous">
        <title>Contiguous</title>
        <description>Fill a region with the front color. If unchecked, all pixels with the filled color in the entire graphics will be filled with the new color.</description>
      </tooltip>
      <tooltip control="pictureBoxGraphicSet">
        <title>Graphics</title>
        <description>Draw, erase, fill, pixels, select/replace a color, or zoom in/out using the toolstrip above. Only single pixels can be erased or drawn. Import an image with the right-click context menu.
NOTE: when importing an image, the top-right corner of the new image will be pasted to the place where you right-clicked.</description>
      </tooltip>
      <tooltip control="buttonUpdate">
        <title>Update</title>
        <description>Applies all changes made in the graphics editor to the source's graphics.</description>
      </tooltip>
      <tooltip control="autoUpdate">
        <title>Auto-update</title>
        <description>Automatically apply any changes made in the graphics editor to the source's graphics. If unchecked, click "Update" to apply the changes.</description>
      </tooltip>
      <FAQ />
    </Graphics>
    <TileEditor form="TileEditor" icon="icons/openTileEditor.gif" title="Tile Editor" type="editor">
      <description>Edit a 16x16 tile's subtiles. A subtile is 8 pixels wide and 8 pixels high and has several distinct properties. Usually more practical transformations to the tileset can be done more easily outside of the tile editor with a right-click context menu.</description>
      <tooltip control="pictureBoxTile">
        <title>Tile</title>
        <description>The 16x16 tile loaded. Click the quadrants to load a subtile.</description>
      </tooltip>
      <tooltip control="pictureBoxSubtile">
        <title>Subtile</title>
        <description>The 8x8 subtile loaded. Edit its properties in the "Subtile properties" box below.</description>
      </tooltip>
      <tooltip control="subtileIndex">
        <title>Index</title>
        <description>This value corresponds to the 8x8 tiles in the graphics editor. A tile's index is shown in the label below the graphics image.</description>
      </tooltip>
      <tooltip control="subtilePalette">
        <title>Palette</title>
        <description>The palette row, or index, used by the tile from its source's palette set.</description>
      </tooltip>
      <tooltip control="subtileStatus">
        <title>Properties</title>
        <description>"Priority 1" will give the subtile priority 1 status. "Mirror" will flip the subtile horizontally, "Invert" flips it vertically.</description>
      </tooltip>
      <tooltip control="buttonMirrorTile">
        <title>Mirror</title>
        <description>Flips the 16x16 tile horizontally. Note that doing this will change the "Mirror" properties of all 4 of its subtiles.</description>
      </tooltip>
      <tooltip control="buttonInvertTile">
        <title>Invert</title>
        <description>Flips the 16x16 tile vertically. Note that doing this will change the "Invert" properties of all 4 of its subtiles.</description>
      </tooltip>
      <tooltip control="buttonUpdate">
        <title>Update</title>
        <description>Applies all changes made in the graphics editor to the source's graphics.</description>
      </tooltip>
      <tooltip control="autoUpdate">
        <title>Auto-update</title>
        <description>Automatically apply any changes made in the graphics editor to the source's graphics. If unchecked, click "Update" to apply the changes.</description>
      </tooltip>
      <FAQ />
    </TileEditor>
    <TilesetEditor form="TilesetEditor" icon="icons/openTilesets.gif" title="Tilesets" type="editor">
      <description>For levels, these are the level's tilesets for each of the 3 layers. If layer 3 is not enabled for the level the layer 3 tab is inaccessible.
Tilesets for the main title can be modified exactly in the same nature as level tilesets, with a couple of differences. The first being the format of layer 3, and the second being the ability to import an external image file as a single layer in just a few steps. This feature is accessible by right-clicking the tileset image.
Mine cart levels, both mode 7 and side-scrolling, have only one tileset to draw from.</description>
      <tooltip control="tabControl1">
        <title>Layers</title>
        <description>Select the layer and tileset to edit or draw from. To erase, draw to, etc. a specific layer in a level's (tile)map/image select the layer among the tabs available. Note that selecting a tab in the level editor will set the layer being edited for both the tilemap and the tileset.
You can only draw layer 1, 2, and 3 tiles to their respective layers. Cross-layer drawing is not possible. However, layer tilesets will most often have identical tiles to draw the same tiles to different layers.
You will notice that there are often repeats of tile groupings in a tileset, ie. two identical crates, grass patches, etc. This is because one grouping has priority 1 set, the other does not. Mario and NPCs may overlap one crate, but not the other crate.
To help with this, you can view what tiles have priority 1 set with the P1 button in the toolstrip. The blue tint covers all priority 1 subtiles.</description>
      </tooltip>
      <tooltip control="pictureBoxTilesetL1">
        <title>L1 Tileset</title>
        <description>Select one or more tiles to draw from by dragging a selection box around them. Right-click the selection to apply a number of changes to the selected tiles.</description>
      </tooltip>
      <tooltip control="pictureBoxTilesetL2">
        <title>L2 Tileset</title>
        <description>Select one or more tiles to draw from by dragging a selection box around them. Right-click the selection to apply a number of changes to the selected tiles.</description>
      </tooltip>
      <tooltip control="pictureBoxTilesetL3">
        <title>L3 Tileset</title>
        <description>Select one or more tiles to draw from by dragging a selection box around them. Right-click the selection to apply a number of changes to the selected tiles.</description>
      </tooltip>
      <tooltip control="lockEditing">
        <title>Lock tileset editing</title>
        <description>This should be checked when selecting tiles to draw to the map/image, to prevent accidental clicking/dragging a selection of tiles and unintentionally corrupting the tileset.
Uncheck this only to manually edit one or more tiles in the tileset.</description>
      </tooltip>
      <tooltip control="buttonUpdate">
        <title>Update</title>
        <description>Applies all changes made in the graphics editor to the source's graphics.</description>
      </tooltip>
      <tooltip control="autoUpdate">
        <title>Auto-update</title>
        <description>Automatically apply any changes made in the graphics editor to the source's graphics. If unchecked, click "Update" to apply the changes.</description>
      </tooltip>
      <FAQ />
    </TilesetEditor>
    <HexEditor form="HexEditor" icon="icons/hexEditor.gif" title="Hex Editor" type="editor">
      <description>Shows the entire ROM in hexadecimal format in an interactive hex editor. Many editors have a button to open the hex editor and automatically jump to the location of the element index's data in the ROM.</description>
      <tooltip control="viewCurrent">
        <title>Current ROM</title>
        <description>Shows the current ROM, including all modifications done in all editors, before saving to disk.</description>
      </tooltip>
      <tooltip control="viewOriginal">
        <title>Original ROM</title>
        <description>Shows the original ROM, since the last time it was loaded OR saved to disk.</description>
      </tooltip>
      <tooltip control="gotoAddress">
        <title>Goto Address</title>
        <description>Type the address (in hexadecimal) and hit enter to jump to the address in the ROM data below.</description>
      </tooltip>
      <tooltip control="searchBox">
        <title>Search for value(s)</title>
        <description>Search for one or more byte values (in hexadecimal) in the ROM. Hit enter to move through every search result. Click the button on the left of this box to switch which direction it moves, either forwards or backwards.</description>
      </tooltip>
      <tooltip control="baseConvDec">
        <title>Decimal Value</title>
        <description>Type a decimal value in here and it will automatically be converted to hex in the box on the right.</description>
      </tooltip>
      <tooltip control="baseConvHex">
        <title>Hexadecimal Value</title>
        <description>Type a hexadecimal value in here and it will automatically be converted to decimal in the box on the left.</description>
      </tooltip>
      <tooltip control="fillWith">
        <title>Fill Selection</title>
        <description>Fills a selection in the ROM data below with a single value (in hexadecimal).</description>
      </tooltip>
      <tooltip control="currentROMData" control2="originalROMData">
        <title>ROM Data</title>
        <description>The raw ROM data as seen in a hex editor.
Change data here just as you would in a typical hex editor. Make selections by clicking and dragging the cursor over a series of bytes. Note that only selections smaller than the height of the window can be made--such are the limitations of an amateur hex editor.
Copying, pasting, and deleting values is supported with the typical keyboard shortcuts or the respective buttons for such functions in the toolstrip at the top. You may undo or redo any changes made to the data as well.</description>
      </tooltip>
      <tooltip control="ROMOffsets">
        <title>ROM Offsets</title>
		  <description>Offsets of each row currently visible in the ROM data box to the right. Each row is 16 bytes long.</description>
	  </tooltip>
	  <tooltip control="compareButton">
        <title>ROM Offsets</title>
        <description>Compares the new changes (set in green text) from the current ROM data with the original ROM data. Toggling this option off will not set the text green.</description>
      </tooltip>
      <FAQ />
    </HexEditor>
  </Other>
</LAZYSHELL>